'------------------------------------------------------------------------------
' <auto-generated>
'    This code was generated from a template.
'
'    Manual changes to this file may cause unexpected behavior in your application.
'    Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------


Imports Microsoft.VisualBasic
Imports System
Imports System.Data.Objects
Imports System.Data.Objects.DataClasses
Imports System.Data.EntityClient
Imports System.ComponentModel
Imports System.Xml.Serialization
Imports System.Runtime.Serialization

<Assembly: EdmSchemaAttribute()>
#Region "EDM Relationship Metadata"

<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_EmployeeDepartmentHistory_Department_DepartmentID", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Department), "EmployeeDepartmentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.EmployeeDepartmentHistory), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_Employee_Contact_ContactID", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Contact), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.Employee), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_Employee_Employee_ManagerID", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(WcfService1.Employee), "Employee1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.Employee), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_EmployeeAddress_Employee_EmployeeID", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Employee), "EmployeeAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.EmployeeAddress), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_EmployeeDepartmentHistory_Employee_EmployeeID", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Employee), "EmployeeDepartmentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.EmployeeDepartmentHistory), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_EmployeePayHistory_Employee_EmployeeID", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Employee), "EmployeePayHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.EmployeePayHistory), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_JobCandidate_Employee_EmployeeID", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(WcfService1.Employee), "JobCandidate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.JobCandidate), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_PurchaseOrderHeader_Employee_EmployeeID", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Employee), "PurchaseOrderHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.PurchaseOrderHeader), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_SalesPerson_Employee_SalesPersonID", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Employee), "SalesPerson", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(WcfService1.SalesPerson), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_EmployeeAddress_Address_AddressID", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Address), "EmployeeAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.EmployeeAddress), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_EmployeeDepartmentHistory_Shift_ShiftID", "Shift", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Shift), "EmployeeDepartmentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.EmployeeDepartmentHistory), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_Address_StateProvince_StateProvinceID", "StateProvince", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.StateProvince), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.Address), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_CustomerAddress_Address_AddressID", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Address), "CustomerAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.CustomerAddress), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_SalesOrderHeader_Address_BillToAddressID", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Address), "SalesOrderHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.SalesOrderHeader), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_SalesOrderHeader_Address_ShipToAddressID", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Address), "SalesOrderHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.SalesOrderHeader), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_VendorAddress_Address_AddressID", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Address), "VendorAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.VendorAddress), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_CustomerAddress_AddressType_AddressTypeID", "AddressType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.AddressType), "CustomerAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.CustomerAddress), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_VendorAddress_AddressType_AddressTypeID", "AddressType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.AddressType), "VendorAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.VendorAddress), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_ContactCreditCard_Contact_ContactID", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Contact), "ContactCreditCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.ContactCreditCard), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_Individual_Contact_ContactID", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Contact), "Individual", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.Individual), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_SalesOrderHeader_Contact_ContactID", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Contact), "SalesOrderHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.SalesOrderHeader), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_StoreContact_Contact_ContactID", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Contact), "StoreContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.StoreContact), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_VendorContact_Contact_ContactID", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Contact), "VendorContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.VendorContact), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_StoreContact_ContactType_ContactTypeID", "ContactType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.ContactType), "StoreContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.StoreContact), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_VendorContact_ContactType_ContactTypeID", "ContactType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.ContactType), "VendorContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.VendorContact), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_CountryRegionCurrency_CountryRegion_CountryRegionCode", "CountryRegion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.CountryRegion), "CountryRegionCurrency", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.CountryRegionCurrency), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_StateProvince_CountryRegion_CountryRegionCode", "CountryRegion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.CountryRegion), "StateProvince", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.StateProvince), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_SalesTaxRate_StateProvince_StateProvinceID", "StateProvince", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.StateProvince), "SalesTaxRate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.SalesTaxRate), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_StateProvince_SalesTerritory_TerritoryID", "SalesTerritory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.SalesTerritory), "StateProvince", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.StateProvince), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_BillOfMaterials_Product_ComponentID", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Product), "BillOfMaterials", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.BillOfMaterials), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_BillOfMaterials_Product_ProductAssemblyID", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(WcfService1.Product), "BillOfMaterials", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.BillOfMaterials), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_BillOfMaterials_UnitMeasure_UnitMeasureCode", "UnitMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.UnitMeasure), "BillOfMaterials", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.BillOfMaterials), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_ProductModelProductDescriptionCulture_Culture_CultureID", "Culture", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Culture), "ProductModelProductDescriptionCulture", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.ProductModelProductDescriptionCulture), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_ProductDocument_Document_DocumentID", "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Document), "ProductDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.ProductDocument), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_ProductModelIllustration_Illustration_IllustrationID", "Illustration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Illustration), "ProductModelIllustration", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.ProductModelIllustration), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_ProductInventory_Location_LocationID", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Location), "ProductInventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.ProductInventory), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_WorkOrderRouting_Location_LocationID", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Location), "WorkOrderRouting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.WorkOrderRouting), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_Product_ProductModel_ProductModelID", "ProductModel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(WcfService1.ProductModel), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.Product), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_Product_ProductSubcategory_ProductSubcategoryID", "ProductSubcategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(WcfService1.ProductSubcategory), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.Product), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_Product_UnitMeasure_SizeUnitMeasureCode", "UnitMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(WcfService1.UnitMeasure), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.Product), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_Product_UnitMeasure_WeightUnitMeasureCode", "UnitMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(WcfService1.UnitMeasure), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.Product), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_ProductCostHistory_Product_ProductID", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Product), "ProductCostHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.ProductCostHistory), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_ProductDocument_Product_ProductID", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Product), "ProductDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.ProductDocument), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_ProductInventory_Product_ProductID", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Product), "ProductInventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.ProductInventory), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_ProductListPriceHistory_Product_ProductID", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Product), "ProductListPriceHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.ProductListPriceHistory), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_ProductProductPhoto_Product_ProductID", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Product), "ProductProductPhoto", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.ProductProductPhoto), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_ProductReview_Product_ProductID", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Product), "ProductReview", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.ProductReview), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_ProductVendor_Product_ProductID", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Product), "ProductVendor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.ProductVendor), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_PurchaseOrderDetail_Product_ProductID", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Product), "PurchaseOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.PurchaseOrderDetail), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_ShoppingCartItem_Product_ProductID", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Product), "ShoppingCartItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.ShoppingCartItem), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_SpecialOfferProduct_Product_ProductID", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Product), "SpecialOfferProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.SpecialOfferProduct), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_TransactionHistory_Product_ProductID", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Product), "TransactionHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.TransactionHistory), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_WorkOrder_Product_ProductID", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Product), "WorkOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.WorkOrder), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_ProductSubcategory_ProductCategory_ProductCategoryID", "ProductCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.ProductCategory), "ProductSubcategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.ProductSubcategory), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID", "ProductDescription", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.ProductDescription), "ProductModelProductDescriptionCulture", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.ProductModelProductDescriptionCulture), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_ProductModelIllustration_ProductModel_ProductModelID", "ProductModel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.ProductModel), "ProductModelIllustration", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.ProductModelIllustration), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID", "ProductModel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.ProductModel), "ProductModelProductDescriptionCulture", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.ProductModelProductDescriptionCulture), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_ProductProductPhoto_ProductPhoto_ProductPhotoID", "ProductPhoto", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.ProductPhoto), "ProductProductPhoto", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.ProductProductPhoto), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_WorkOrder_ScrapReason_ScrapReasonID", "ScrapReason", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(WcfService1.ScrapReason), "WorkOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.WorkOrder), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_ProductVendor_UnitMeasure_UnitMeasureCode", "UnitMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.UnitMeasure), "ProductVendor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.ProductVendor), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_WorkOrderRouting_WorkOrder_WorkOrderID", "WorkOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.WorkOrder), "WorkOrderRouting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.WorkOrderRouting), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_ProductVendor_Vendor_VendorID", "Vendor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Vendor), "ProductVendor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.ProductVendor), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID", "PurchaseOrderHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.PurchaseOrderHeader), "PurchaseOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.PurchaseOrderDetail), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_PurchaseOrderHeader_ShipMethod_ShipMethodID", "ShipMethod", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.ShipMethod), "PurchaseOrderHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.PurchaseOrderHeader), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_PurchaseOrderHeader_Vendor_VendorID", "Vendor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Vendor), "PurchaseOrderHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.PurchaseOrderHeader), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_SalesOrderHeader_ShipMethod_ShipMethodID", "ShipMethod", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.ShipMethod), "SalesOrderHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.SalesOrderHeader), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_VendorAddress_Vendor_VendorID", "Vendor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Vendor), "VendorAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.VendorAddress), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_VendorContact_Vendor_VendorID", "Vendor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Vendor), "VendorContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.VendorContact), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_ContactCreditCard_CreditCard_CreditCardID", "CreditCard", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.CreditCard), "ContactCreditCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.ContactCreditCard), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_CountryRegionCurrency_Currency_CurrencyCode", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Currency), "CountryRegionCurrency", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.CountryRegionCurrency), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_SalesOrderHeader_CreditCard_CreditCardID", "CreditCard", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(WcfService1.CreditCard), "SalesOrderHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.SalesOrderHeader), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_CurrencyRate_Currency_FromCurrencyCode", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Currency), "CurrencyRate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.CurrencyRate), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_CurrencyRate_Currency_ToCurrencyCode", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Currency), "CurrencyRate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.CurrencyRate), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_SalesOrderHeader_CurrencyRate_CurrencyRateID", "CurrencyRate", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(WcfService1.CurrencyRate), "SalesOrderHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.SalesOrderHeader), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_Customer_SalesTerritory_TerritoryID", "SalesTerritory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(WcfService1.SalesTerritory), "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.Customer), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_CustomerAddress_Customer_CustomerID", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Customer), "CustomerAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.CustomerAddress), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_Individual_Customer_CustomerID", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Customer), "Individual", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(WcfService1.Individual), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_SalesOrderHeader_Customer_CustomerID", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Customer), "SalesOrderHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.SalesOrderHeader), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_Store_Customer_CustomerID", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Customer), "Store", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(WcfService1.Store), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID", "SalesOrderHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.SalesOrderHeader), "SalesOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.SalesOrderDetail), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID", "SpecialOfferProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.SpecialOfferProduct), "SalesOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.SalesOrderDetail), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_SalesOrderHeader_SalesPerson_SalesPersonID", "SalesPerson", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(WcfService1.SalesPerson), "SalesOrderHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.SalesOrderHeader), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_SalesOrderHeader_SalesTerritory_TerritoryID", "SalesTerritory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(WcfService1.SalesTerritory), "SalesOrderHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.SalesOrderHeader), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID", "SalesOrderHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.SalesOrderHeader), "SalesOrderHeaderSalesReason", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.SalesOrderHeaderSalesReason), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID", "SalesReason", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.SalesReason), "SalesOrderHeaderSalesReason", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.SalesOrderHeaderSalesReason), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_SalesPerson_SalesTerritory_TerritoryID", "SalesTerritory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(WcfService1.SalesTerritory), "SalesPerson", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.SalesPerson), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_SalesPersonQuotaHistory_SalesPerson_SalesPersonID", "SalesPerson", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.SalesPerson), "SalesPersonQuotaHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.SalesPersonQuotaHistory), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_SalesTerritoryHistory_SalesPerson_SalesPersonID", "SalesPerson", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.SalesPerson), "SalesTerritoryHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.SalesTerritoryHistory), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_Store_SalesPerson_SalesPersonID", "SalesPerson", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(WcfService1.SalesPerson), "Store", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.Store), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_SalesTerritoryHistory_SalesTerritory_TerritoryID", "SalesTerritory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.SalesTerritory), "SalesTerritoryHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.SalesTerritoryHistory), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID", "SpecialOffer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.SpecialOffer), "SpecialOfferProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.SpecialOfferProduct), True)>
<Assembly: EdmRelationshipAttribute("AdventureWorksModel", "FK_StoreContact_Store_CustomerID", "Store", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(WcfService1.Store), "StoreContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(WcfService1.StoreContact), True)>

#End Region

Namespace WcfService1
	#Region "Contexts"

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	Partial Public Class AdventureWorksEntities
		Inherits ObjectContext
		#Region "Constructors"

		''' <summary>
		''' Initializes a new AdventureWorksEntities object using the connection string found in the 'AdventureWorksEntities' section of the application configuration file.
		''' </summary>
		Public Sub New()
			MyBase.New("name=AdventureWorksEntities", "AdventureWorksEntities")
			Me.ContextOptions.LazyLoadingEnabled = True
			OnContextCreated()
		End Sub

		''' <summary>
		''' Initialize a new AdventureWorksEntities object.
		''' </summary>
		Public Sub New(ByVal connectionString As String)
			MyBase.New(connectionString, "AdventureWorksEntities")
			Me.ContextOptions.LazyLoadingEnabled = True
			OnContextCreated()
		End Sub

		''' <summary>
		''' Initialize a new AdventureWorksEntities object.
		''' </summary>
		Public Sub New(ByVal connection As EntityConnection)
			MyBase.New(connection, "AdventureWorksEntities")
			Me.ContextOptions.LazyLoadingEnabled = True
			OnContextCreated()
		End Sub

		#End Region

		#Region "Partial Methods"

		Partial Private Sub OnContextCreated()
		End Sub

		#End Region

		#Region "ObjectSet Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property AWBuildVersion() As ObjectSet(Of AWBuildVersion)
			Get
				If (_AWBuildVersion Is Nothing) Then
					_AWBuildVersion = MyBase.CreateObjectSet(Of AWBuildVersion)("AWBuildVersion")
				End If
				Return _AWBuildVersion
			End Get
		End Property
		Private _AWBuildVersion As ObjectSet(Of AWBuildVersion)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property DatabaseLog() As ObjectSet(Of DatabaseLog)
			Get
				If (_DatabaseLog Is Nothing) Then
					_DatabaseLog = MyBase.CreateObjectSet(Of DatabaseLog)("DatabaseLog")
				End If
				Return _DatabaseLog
			End Get
		End Property
		Private _DatabaseLog As ObjectSet(Of DatabaseLog)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property ErrorLog() As ObjectSet(Of ErrorLog)
			Get
				If (_ErrorLog Is Nothing) Then
					_ErrorLog = MyBase.CreateObjectSet(Of ErrorLog)("ErrorLog")
				End If
				Return _ErrorLog
			End Get
		End Property
		Private _ErrorLog As ObjectSet(Of ErrorLog)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property Department() As ObjectSet(Of Department)
			Get
				If (_Department Is Nothing) Then
					_Department = MyBase.CreateObjectSet(Of Department)("Department")
				End If
				Return _Department
			End Get
		End Property
		Private _Department As ObjectSet(Of Department)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property Employee() As ObjectSet(Of Employee)
			Get
				If (_Employee Is Nothing) Then
					_Employee = MyBase.CreateObjectSet(Of Employee)("Employee")
				End If
				Return _Employee
			End Get
		End Property
		Private _Employee As ObjectSet(Of Employee)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property EmployeeAddress() As ObjectSet(Of EmployeeAddress)
			Get
				If (_EmployeeAddress Is Nothing) Then
					_EmployeeAddress = MyBase.CreateObjectSet(Of EmployeeAddress)("EmployeeAddress")
				End If
				Return _EmployeeAddress
			End Get
		End Property
		Private _EmployeeAddress As ObjectSet(Of EmployeeAddress)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property EmployeeDepartmentHistory() As ObjectSet(Of EmployeeDepartmentHistory)
			Get
				If (_EmployeeDepartmentHistory Is Nothing) Then
					_EmployeeDepartmentHistory = MyBase.CreateObjectSet(Of EmployeeDepartmentHistory)("EmployeeDepartmentHistory")
				End If
				Return _EmployeeDepartmentHistory
			End Get
		End Property
		Private _EmployeeDepartmentHistory As ObjectSet(Of EmployeeDepartmentHistory)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property EmployeePayHistory() As ObjectSet(Of EmployeePayHistory)
			Get
				If (_EmployeePayHistory Is Nothing) Then
					_EmployeePayHistory = MyBase.CreateObjectSet(Of EmployeePayHistory)("EmployeePayHistory")
				End If
				Return _EmployeePayHistory
			End Get
		End Property
		Private _EmployeePayHistory As ObjectSet(Of EmployeePayHistory)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property JobCandidate() As ObjectSet(Of JobCandidate)
			Get
				If (_JobCandidate Is Nothing) Then
					_JobCandidate = MyBase.CreateObjectSet(Of JobCandidate)("JobCandidate")
				End If
				Return _JobCandidate
			End Get
		End Property
		Private _JobCandidate As ObjectSet(Of JobCandidate)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property Shift() As ObjectSet(Of Shift)
			Get
				If (_Shift Is Nothing) Then
					_Shift = MyBase.CreateObjectSet(Of Shift)("Shift")
				End If
				Return _Shift
			End Get
		End Property
		Private _Shift As ObjectSet(Of Shift)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property Address() As ObjectSet(Of Address)
			Get
				If (_Address Is Nothing) Then
					_Address = MyBase.CreateObjectSet(Of Address)("Address")
				End If
				Return _Address
			End Get
		End Property
		Private _Address As ObjectSet(Of Address)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property AddressType() As ObjectSet(Of AddressType)
			Get
				If (_AddressType Is Nothing) Then
					_AddressType = MyBase.CreateObjectSet(Of AddressType)("AddressType")
				End If
				Return _AddressType
			End Get
		End Property
		Private _AddressType As ObjectSet(Of AddressType)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property Contact() As ObjectSet(Of Contact)
			Get
				If (_Contact Is Nothing) Then
					_Contact = MyBase.CreateObjectSet(Of Contact)("Contact")
				End If
				Return _Contact
			End Get
		End Property
		Private _Contact As ObjectSet(Of Contact)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property ContactType() As ObjectSet(Of ContactType)
			Get
				If (_ContactType Is Nothing) Then
					_ContactType = MyBase.CreateObjectSet(Of ContactType)("ContactType")
				End If
				Return _ContactType
			End Get
		End Property
		Private _ContactType As ObjectSet(Of ContactType)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property CountryRegion() As ObjectSet(Of CountryRegion)
			Get
				If (_CountryRegion Is Nothing) Then
					_CountryRegion = MyBase.CreateObjectSet(Of CountryRegion)("CountryRegion")
				End If
				Return _CountryRegion
			End Get
		End Property
		Private _CountryRegion As ObjectSet(Of CountryRegion)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property StateProvince() As ObjectSet(Of StateProvince)
			Get
				If (_StateProvince Is Nothing) Then
					_StateProvince = MyBase.CreateObjectSet(Of StateProvince)("StateProvince")
				End If
				Return _StateProvince
			End Get
		End Property
		Private _StateProvince As ObjectSet(Of StateProvince)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property BillOfMaterials() As ObjectSet(Of BillOfMaterials)
			Get
				If (_BillOfMaterials Is Nothing) Then
					_BillOfMaterials = MyBase.CreateObjectSet(Of BillOfMaterials)("BillOfMaterials")
				End If
				Return _BillOfMaterials
			End Get
		End Property
		Private _BillOfMaterials As ObjectSet(Of BillOfMaterials)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property Culture() As ObjectSet(Of Culture)
			Get
				If (_Culture Is Nothing) Then
					_Culture = MyBase.CreateObjectSet(Of Culture)("Culture")
				End If
				Return _Culture
			End Get
		End Property
		Private _Culture As ObjectSet(Of Culture)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property Document() As ObjectSet(Of Document)
			Get
				If (_Document Is Nothing) Then
					_Document = MyBase.CreateObjectSet(Of Document)("Document")
				End If
				Return _Document
			End Get
		End Property
		Private _Document As ObjectSet(Of Document)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property Illustration() As ObjectSet(Of Illustration)
			Get
				If (_Illustration Is Nothing) Then
					_Illustration = MyBase.CreateObjectSet(Of Illustration)("Illustration")
				End If
				Return _Illustration
			End Get
		End Property
		Private _Illustration As ObjectSet(Of Illustration)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property Location() As ObjectSet(Of Location)
			Get
				If (_Location Is Nothing) Then
					_Location = MyBase.CreateObjectSet(Of Location)("Location")
				End If
				Return _Location
			End Get
		End Property
		Private _Location As ObjectSet(Of Location)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property Product() As ObjectSet(Of Product)
			Get
				If (_Product Is Nothing) Then
					_Product = MyBase.CreateObjectSet(Of Product)("Product")
				End If
				Return _Product
			End Get
		End Property
		Private _Product As ObjectSet(Of Product)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property ProductCategory() As ObjectSet(Of ProductCategory)
			Get
				If (_ProductCategory Is Nothing) Then
					_ProductCategory = MyBase.CreateObjectSet(Of ProductCategory)("ProductCategory")
				End If
				Return _ProductCategory
			End Get
		End Property
		Private _ProductCategory As ObjectSet(Of ProductCategory)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property ProductCostHistory() As ObjectSet(Of ProductCostHistory)
			Get
				If (_ProductCostHistory Is Nothing) Then
					_ProductCostHistory = MyBase.CreateObjectSet(Of ProductCostHistory)("ProductCostHistory")
				End If
				Return _ProductCostHistory
			End Get
		End Property
		Private _ProductCostHistory As ObjectSet(Of ProductCostHistory)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property ProductDescription() As ObjectSet(Of ProductDescription)
			Get
				If (_ProductDescription Is Nothing) Then
					_ProductDescription = MyBase.CreateObjectSet(Of ProductDescription)("ProductDescription")
				End If
				Return _ProductDescription
			End Get
		End Property
		Private _ProductDescription As ObjectSet(Of ProductDescription)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property ProductDocument() As ObjectSet(Of ProductDocument)
			Get
				If (_ProductDocument Is Nothing) Then
					_ProductDocument = MyBase.CreateObjectSet(Of ProductDocument)("ProductDocument")
				End If
				Return _ProductDocument
			End Get
		End Property
		Private _ProductDocument As ObjectSet(Of ProductDocument)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property ProductInventory() As ObjectSet(Of ProductInventory)
			Get
				If (_ProductInventory Is Nothing) Then
					_ProductInventory = MyBase.CreateObjectSet(Of ProductInventory)("ProductInventory")
				End If
				Return _ProductInventory
			End Get
		End Property
		Private _ProductInventory As ObjectSet(Of ProductInventory)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property ProductListPriceHistory() As ObjectSet(Of ProductListPriceHistory)
			Get
				If (_ProductListPriceHistory Is Nothing) Then
					_ProductListPriceHistory = MyBase.CreateObjectSet(Of ProductListPriceHistory)("ProductListPriceHistory")
				End If
				Return _ProductListPriceHistory
			End Get
		End Property
		Private _ProductListPriceHistory As ObjectSet(Of ProductListPriceHistory)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property ProductModel() As ObjectSet(Of ProductModel)
			Get
				If (_ProductModel Is Nothing) Then
					_ProductModel = MyBase.CreateObjectSet(Of ProductModel)("ProductModel")
				End If
				Return _ProductModel
			End Get
		End Property
		Private _ProductModel As ObjectSet(Of ProductModel)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property ProductModelIllustration() As ObjectSet(Of ProductModelIllustration)
			Get
				If (_ProductModelIllustration Is Nothing) Then
					_ProductModelIllustration = MyBase.CreateObjectSet(Of ProductModelIllustration)("ProductModelIllustration")
				End If
				Return _ProductModelIllustration
			End Get
		End Property
		Private _ProductModelIllustration As ObjectSet(Of ProductModelIllustration)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property ProductModelProductDescriptionCulture() As ObjectSet(Of ProductModelProductDescriptionCulture)
			Get
				If (_ProductModelProductDescriptionCulture Is Nothing) Then
					_ProductModelProductDescriptionCulture = MyBase.CreateObjectSet(Of ProductModelProductDescriptionCulture)("ProductModelProductDescriptionCulture")
				End If
				Return _ProductModelProductDescriptionCulture
			End Get
		End Property
		Private _ProductModelProductDescriptionCulture As ObjectSet(Of ProductModelProductDescriptionCulture)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property ProductPhoto() As ObjectSet(Of ProductPhoto)
			Get
				If (_ProductPhoto Is Nothing) Then
					_ProductPhoto = MyBase.CreateObjectSet(Of ProductPhoto)("ProductPhoto")
				End If
				Return _ProductPhoto
			End Get
		End Property
		Private _ProductPhoto As ObjectSet(Of ProductPhoto)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property ProductProductPhoto() As ObjectSet(Of ProductProductPhoto)
			Get
				If (_ProductProductPhoto Is Nothing) Then
					_ProductProductPhoto = MyBase.CreateObjectSet(Of ProductProductPhoto)("ProductProductPhoto")
				End If
				Return _ProductProductPhoto
			End Get
		End Property
		Private _ProductProductPhoto As ObjectSet(Of ProductProductPhoto)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property ProductReview() As ObjectSet(Of ProductReview)
			Get
				If (_ProductReview Is Nothing) Then
					_ProductReview = MyBase.CreateObjectSet(Of ProductReview)("ProductReview")
				End If
				Return _ProductReview
			End Get
		End Property
		Private _ProductReview As ObjectSet(Of ProductReview)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property ProductSubcategory() As ObjectSet(Of ProductSubcategory)
			Get
				If (_ProductSubcategory Is Nothing) Then
					_ProductSubcategory = MyBase.CreateObjectSet(Of ProductSubcategory)("ProductSubcategory")
				End If
				Return _ProductSubcategory
			End Get
		End Property
		Private _ProductSubcategory As ObjectSet(Of ProductSubcategory)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property ScrapReason() As ObjectSet(Of ScrapReason)
			Get
				If (_ScrapReason Is Nothing) Then
					_ScrapReason = MyBase.CreateObjectSet(Of ScrapReason)("ScrapReason")
				End If
				Return _ScrapReason
			End Get
		End Property
		Private _ScrapReason As ObjectSet(Of ScrapReason)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property TransactionHistory() As ObjectSet(Of TransactionHistory)
			Get
				If (_TransactionHistory Is Nothing) Then
					_TransactionHistory = MyBase.CreateObjectSet(Of TransactionHistory)("TransactionHistory")
				End If
				Return _TransactionHistory
			End Get
		End Property
		Private _TransactionHistory As ObjectSet(Of TransactionHistory)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property TransactionHistoryArchive() As ObjectSet(Of TransactionHistoryArchive)
			Get
				If (_TransactionHistoryArchive Is Nothing) Then
					_TransactionHistoryArchive = MyBase.CreateObjectSet(Of TransactionHistoryArchive)("TransactionHistoryArchive")
				End If
				Return _TransactionHistoryArchive
			End Get
		End Property
		Private _TransactionHistoryArchive As ObjectSet(Of TransactionHistoryArchive)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property UnitMeasure() As ObjectSet(Of UnitMeasure)
			Get
				If (_UnitMeasure Is Nothing) Then
					_UnitMeasure = MyBase.CreateObjectSet(Of UnitMeasure)("UnitMeasure")
				End If
				Return _UnitMeasure
			End Get
		End Property
		Private _UnitMeasure As ObjectSet(Of UnitMeasure)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property WorkOrder() As ObjectSet(Of WorkOrder)
			Get
				If (_WorkOrder Is Nothing) Then
					_WorkOrder = MyBase.CreateObjectSet(Of WorkOrder)("WorkOrder")
				End If
				Return _WorkOrder
			End Get
		End Property
		Private _WorkOrder As ObjectSet(Of WorkOrder)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property WorkOrderRouting() As ObjectSet(Of WorkOrderRouting)
			Get
				If (_WorkOrderRouting Is Nothing) Then
					_WorkOrderRouting = MyBase.CreateObjectSet(Of WorkOrderRouting)("WorkOrderRouting")
				End If
				Return _WorkOrderRouting
			End Get
		End Property
		Private _WorkOrderRouting As ObjectSet(Of WorkOrderRouting)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property ProductVendor() As ObjectSet(Of ProductVendor)
			Get
				If (_ProductVendor Is Nothing) Then
					_ProductVendor = MyBase.CreateObjectSet(Of ProductVendor)("ProductVendor")
				End If
				Return _ProductVendor
			End Get
		End Property
		Private _ProductVendor As ObjectSet(Of ProductVendor)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property PurchaseOrderDetail() As ObjectSet(Of PurchaseOrderDetail)
			Get
				If (_PurchaseOrderDetail Is Nothing) Then
					_PurchaseOrderDetail = MyBase.CreateObjectSet(Of PurchaseOrderDetail)("PurchaseOrderDetail")
				End If
				Return _PurchaseOrderDetail
			End Get
		End Property
		Private _PurchaseOrderDetail As ObjectSet(Of PurchaseOrderDetail)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property PurchaseOrderHeader() As ObjectSet(Of PurchaseOrderHeader)
			Get
				If (_PurchaseOrderHeader Is Nothing) Then
					_PurchaseOrderHeader = MyBase.CreateObjectSet(Of PurchaseOrderHeader)("PurchaseOrderHeader")
				End If
				Return _PurchaseOrderHeader
			End Get
		End Property
		Private _PurchaseOrderHeader As ObjectSet(Of PurchaseOrderHeader)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property ShipMethod() As ObjectSet(Of ShipMethod)
			Get
				If (_ShipMethod Is Nothing) Then
					_ShipMethod = MyBase.CreateObjectSet(Of ShipMethod)("ShipMethod")
				End If
				Return _ShipMethod
			End Get
		End Property
		Private _ShipMethod As ObjectSet(Of ShipMethod)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property Vendor() As ObjectSet(Of Vendor)
			Get
				If (_Vendor Is Nothing) Then
					_Vendor = MyBase.CreateObjectSet(Of Vendor)("Vendor")
				End If
				Return _Vendor
			End Get
		End Property
		Private _Vendor As ObjectSet(Of Vendor)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property VendorAddress() As ObjectSet(Of VendorAddress)
			Get
				If (_VendorAddress Is Nothing) Then
					_VendorAddress = MyBase.CreateObjectSet(Of VendorAddress)("VendorAddress")
				End If
				Return _VendorAddress
			End Get
		End Property
		Private _VendorAddress As ObjectSet(Of VendorAddress)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property VendorContact() As ObjectSet(Of VendorContact)
			Get
				If (_VendorContact Is Nothing) Then
					_VendorContact = MyBase.CreateObjectSet(Of VendorContact)("VendorContact")
				End If
				Return _VendorContact
			End Get
		End Property
		Private _VendorContact As ObjectSet(Of VendorContact)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property ContactCreditCard() As ObjectSet(Of ContactCreditCard)
			Get
				If (_ContactCreditCard Is Nothing) Then
					_ContactCreditCard = MyBase.CreateObjectSet(Of ContactCreditCard)("ContactCreditCard")
				End If
				Return _ContactCreditCard
			End Get
		End Property
		Private _ContactCreditCard As ObjectSet(Of ContactCreditCard)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property CountryRegionCurrency() As ObjectSet(Of CountryRegionCurrency)
			Get
				If (_CountryRegionCurrency Is Nothing) Then
					_CountryRegionCurrency = MyBase.CreateObjectSet(Of CountryRegionCurrency)("CountryRegionCurrency")
				End If
				Return _CountryRegionCurrency
			End Get
		End Property
		Private _CountryRegionCurrency As ObjectSet(Of CountryRegionCurrency)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property CreditCard() As ObjectSet(Of CreditCard)
			Get
				If (_CreditCard Is Nothing) Then
					_CreditCard = MyBase.CreateObjectSet(Of CreditCard)("CreditCard")
				End If
				Return _CreditCard
			End Get
		End Property
		Private _CreditCard As ObjectSet(Of CreditCard)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property Currency() As ObjectSet(Of Currency)
			Get
				If (_Currency Is Nothing) Then
					_Currency = MyBase.CreateObjectSet(Of Currency)("Currency")
				End If
				Return _Currency
			End Get
		End Property
		Private _Currency As ObjectSet(Of Currency)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property CurrencyRate() As ObjectSet(Of CurrencyRate)
			Get
				If (_CurrencyRate Is Nothing) Then
					_CurrencyRate = MyBase.CreateObjectSet(Of CurrencyRate)("CurrencyRate")
				End If
				Return _CurrencyRate
			End Get
		End Property
		Private _CurrencyRate As ObjectSet(Of CurrencyRate)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property Customer() As ObjectSet(Of Customer)
			Get
				If (_Customer Is Nothing) Then
					_Customer = MyBase.CreateObjectSet(Of Customer)("Customer")
				End If
				Return _Customer
			End Get
		End Property
		Private _Customer As ObjectSet(Of Customer)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property CustomerAddress() As ObjectSet(Of CustomerAddress)
			Get
				If (_CustomerAddress Is Nothing) Then
					_CustomerAddress = MyBase.CreateObjectSet(Of CustomerAddress)("CustomerAddress")
				End If
				Return _CustomerAddress
			End Get
		End Property
		Private _CustomerAddress As ObjectSet(Of CustomerAddress)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property Individual() As ObjectSet(Of Individual)
			Get
				If (_Individual Is Nothing) Then
					_Individual = MyBase.CreateObjectSet(Of Individual)("Individual")
				End If
				Return _Individual
			End Get
		End Property
		Private _Individual As ObjectSet(Of Individual)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property SalesOrderDetail() As ObjectSet(Of SalesOrderDetail)
			Get
				If (_SalesOrderDetail Is Nothing) Then
					_SalesOrderDetail = MyBase.CreateObjectSet(Of SalesOrderDetail)("SalesOrderDetail")
				End If
				Return _SalesOrderDetail
			End Get
		End Property
		Private _SalesOrderDetail As ObjectSet(Of SalesOrderDetail)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property SalesOrderHeader() As ObjectSet(Of SalesOrderHeader)
			Get
				If (_SalesOrderHeader Is Nothing) Then
					_SalesOrderHeader = MyBase.CreateObjectSet(Of SalesOrderHeader)("SalesOrderHeader")
				End If
				Return _SalesOrderHeader
			End Get
		End Property
		Private _SalesOrderHeader As ObjectSet(Of SalesOrderHeader)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property SalesOrderHeaderSalesReason() As ObjectSet(Of SalesOrderHeaderSalesReason)
			Get
				If (_SalesOrderHeaderSalesReason Is Nothing) Then
					_SalesOrderHeaderSalesReason = MyBase.CreateObjectSet(Of SalesOrderHeaderSalesReason)("SalesOrderHeaderSalesReason")
				End If
				Return _SalesOrderHeaderSalesReason
			End Get
		End Property
		Private _SalesOrderHeaderSalesReason As ObjectSet(Of SalesOrderHeaderSalesReason)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property SalesPerson() As ObjectSet(Of SalesPerson)
			Get
				If (_SalesPerson Is Nothing) Then
					_SalesPerson = MyBase.CreateObjectSet(Of SalesPerson)("SalesPerson")
				End If
				Return _SalesPerson
			End Get
		End Property
		Private _SalesPerson As ObjectSet(Of SalesPerson)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property SalesPersonQuotaHistory() As ObjectSet(Of SalesPersonQuotaHistory)
			Get
				If (_SalesPersonQuotaHistory Is Nothing) Then
					_SalesPersonQuotaHistory = MyBase.CreateObjectSet(Of SalesPersonQuotaHistory)("SalesPersonQuotaHistory")
				End If
				Return _SalesPersonQuotaHistory
			End Get
		End Property
		Private _SalesPersonQuotaHistory As ObjectSet(Of SalesPersonQuotaHistory)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property SalesReason() As ObjectSet(Of SalesReason)
			Get
				If (_SalesReason Is Nothing) Then
					_SalesReason = MyBase.CreateObjectSet(Of SalesReason)("SalesReason")
				End If
				Return _SalesReason
			End Get
		End Property
		Private _SalesReason As ObjectSet(Of SalesReason)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property SalesTaxRate() As ObjectSet(Of SalesTaxRate)
			Get
				If (_SalesTaxRate Is Nothing) Then
					_SalesTaxRate = MyBase.CreateObjectSet(Of SalesTaxRate)("SalesTaxRate")
				End If
				Return _SalesTaxRate
			End Get
		End Property
		Private _SalesTaxRate As ObjectSet(Of SalesTaxRate)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property SalesTerritory() As ObjectSet(Of SalesTerritory)
			Get
				If (_SalesTerritory Is Nothing) Then
					_SalesTerritory = MyBase.CreateObjectSet(Of SalesTerritory)("SalesTerritory")
				End If
				Return _SalesTerritory
			End Get
		End Property
		Private _SalesTerritory As ObjectSet(Of SalesTerritory)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property SalesTerritoryHistory() As ObjectSet(Of SalesTerritoryHistory)
			Get
				If (_SalesTerritoryHistory Is Nothing) Then
					_SalesTerritoryHistory = MyBase.CreateObjectSet(Of SalesTerritoryHistory)("SalesTerritoryHistory")
				End If
				Return _SalesTerritoryHistory
			End Get
		End Property
		Private _SalesTerritoryHistory As ObjectSet(Of SalesTerritoryHistory)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property ShoppingCartItem() As ObjectSet(Of ShoppingCartItem)
			Get
				If (_ShoppingCartItem Is Nothing) Then
					_ShoppingCartItem = MyBase.CreateObjectSet(Of ShoppingCartItem)("ShoppingCartItem")
				End If
				Return _ShoppingCartItem
			End Get
		End Property
		Private _ShoppingCartItem As ObjectSet(Of ShoppingCartItem)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property SpecialOffer() As ObjectSet(Of SpecialOffer)
			Get
				If (_SpecialOffer Is Nothing) Then
					_SpecialOffer = MyBase.CreateObjectSet(Of SpecialOffer)("SpecialOffer")
				End If
				Return _SpecialOffer
			End Get
		End Property
		Private _SpecialOffer As ObjectSet(Of SpecialOffer)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property SpecialOfferProduct() As ObjectSet(Of SpecialOfferProduct)
			Get
				If (_SpecialOfferProduct Is Nothing) Then
					_SpecialOfferProduct = MyBase.CreateObjectSet(Of SpecialOfferProduct)("SpecialOfferProduct")
				End If
				Return _SpecialOfferProduct
			End Get
		End Property
		Private _SpecialOfferProduct As ObjectSet(Of SpecialOfferProduct)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property Store() As ObjectSet(Of Store)
			Get
				If (_Store Is Nothing) Then
					_Store = MyBase.CreateObjectSet(Of Store)("Store")
				End If
				Return _Store
			End Get
		End Property
		Private _Store As ObjectSet(Of Store)

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property StoreContact() As ObjectSet(Of StoreContact)
			Get
				If (_StoreContact Is Nothing) Then
					_StoreContact = MyBase.CreateObjectSet(Of StoreContact)("StoreContact")
				End If
				Return _StoreContact
			End Get
		End Property
		Private _StoreContact As ObjectSet(Of StoreContact)

		#End Region
		#Region "AddTo Methods"

		''' <summary>
		''' Deprecated Method for adding a new object to the AWBuildVersion EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToAWBuildVersion(ByVal aWBuildVersion As AWBuildVersion)
			MyBase.AddObject("AWBuildVersion", aWBuildVersion)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the DatabaseLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToDatabaseLog(ByVal databaseLog As DatabaseLog)
			MyBase.AddObject("DatabaseLog", databaseLog)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the ErrorLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToErrorLog(ByVal errorLog As ErrorLog)
			MyBase.AddObject("ErrorLog", errorLog)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the Department EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToDepartment(ByVal department As Department)
			MyBase.AddObject("Department", department)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the Employee EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToEmployee(ByVal employee As Employee)
			MyBase.AddObject("Employee", employee)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the EmployeeAddress EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToEmployeeAddress(ByVal employeeAddress As EmployeeAddress)
			MyBase.AddObject("EmployeeAddress", employeeAddress)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the EmployeeDepartmentHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToEmployeeDepartmentHistory(ByVal employeeDepartmentHistory As EmployeeDepartmentHistory)
			MyBase.AddObject("EmployeeDepartmentHistory", employeeDepartmentHistory)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the EmployeePayHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToEmployeePayHistory(ByVal employeePayHistory As EmployeePayHistory)
			MyBase.AddObject("EmployeePayHistory", employeePayHistory)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the JobCandidate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToJobCandidate(ByVal jobCandidate As JobCandidate)
			MyBase.AddObject("JobCandidate", jobCandidate)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the Shift EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToShift(ByVal shift As Shift)
			MyBase.AddObject("Shift", shift)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the Address EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToAddress(ByVal address As Address)
			MyBase.AddObject("Address", address)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the AddressType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToAddressType(ByVal addressType As AddressType)
			MyBase.AddObject("AddressType", addressType)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the Contact EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToContact(ByVal contact As Contact)
			MyBase.AddObject("Contact", contact)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the ContactType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToContactType(ByVal contactType As ContactType)
			MyBase.AddObject("ContactType", contactType)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the CountryRegion EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToCountryRegion(ByVal countryRegion As CountryRegion)
			MyBase.AddObject("CountryRegion", countryRegion)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the StateProvince EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToStateProvince(ByVal stateProvince As StateProvince)
			MyBase.AddObject("StateProvince", stateProvince)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the BillOfMaterials EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToBillOfMaterials(ByVal billOfMaterials As BillOfMaterials)
			MyBase.AddObject("BillOfMaterials", billOfMaterials)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the Culture EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToCulture(ByVal culture As Culture)
			MyBase.AddObject("Culture", culture)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the Document EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToDocument(ByVal document As Document)
			MyBase.AddObject("Document", document)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the Illustration EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToIllustration(ByVal illustration As Illustration)
			MyBase.AddObject("Illustration", illustration)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the Location EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToLocation(ByVal location As Location)
			MyBase.AddObject("Location", location)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the Product EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToProduct(ByVal product As Product)
			MyBase.AddObject("Product", product)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the ProductCategory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToProductCategory(ByVal productCategory As ProductCategory)
			MyBase.AddObject("ProductCategory", productCategory)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the ProductCostHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToProductCostHistory(ByVal productCostHistory As ProductCostHistory)
			MyBase.AddObject("ProductCostHistory", productCostHistory)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the ProductDescription EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToProductDescription(ByVal productDescription As ProductDescription)
			MyBase.AddObject("ProductDescription", productDescription)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the ProductDocument EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToProductDocument(ByVal productDocument As ProductDocument)
			MyBase.AddObject("ProductDocument", productDocument)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the ProductInventory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToProductInventory(ByVal productInventory As ProductInventory)
			MyBase.AddObject("ProductInventory", productInventory)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the ProductListPriceHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToProductListPriceHistory(ByVal productListPriceHistory As ProductListPriceHistory)
			MyBase.AddObject("ProductListPriceHistory", productListPriceHistory)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the ProductModel EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToProductModel(ByVal productModel As ProductModel)
			MyBase.AddObject("ProductModel", productModel)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the ProductModelIllustration EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToProductModelIllustration(ByVal productModelIllustration As ProductModelIllustration)
			MyBase.AddObject("ProductModelIllustration", productModelIllustration)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the ProductModelProductDescriptionCulture EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToProductModelProductDescriptionCulture(ByVal productModelProductDescriptionCulture As ProductModelProductDescriptionCulture)
			MyBase.AddObject("ProductModelProductDescriptionCulture", productModelProductDescriptionCulture)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the ProductPhoto EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToProductPhoto(ByVal productPhoto As ProductPhoto)
			MyBase.AddObject("ProductPhoto", productPhoto)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the ProductProductPhoto EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToProductProductPhoto(ByVal productProductPhoto As ProductProductPhoto)
			MyBase.AddObject("ProductProductPhoto", productProductPhoto)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the ProductReview EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToProductReview(ByVal productReview As ProductReview)
			MyBase.AddObject("ProductReview", productReview)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the ProductSubcategory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToProductSubcategory(ByVal productSubcategory As ProductSubcategory)
			MyBase.AddObject("ProductSubcategory", productSubcategory)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the ScrapReason EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToScrapReason(ByVal scrapReason As ScrapReason)
			MyBase.AddObject("ScrapReason", scrapReason)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the TransactionHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToTransactionHistory(ByVal transactionHistory As TransactionHistory)
			MyBase.AddObject("TransactionHistory", transactionHistory)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the TransactionHistoryArchive EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToTransactionHistoryArchive(ByVal transactionHistoryArchive As TransactionHistoryArchive)
			MyBase.AddObject("TransactionHistoryArchive", transactionHistoryArchive)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the UnitMeasure EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToUnitMeasure(ByVal unitMeasure As UnitMeasure)
			MyBase.AddObject("UnitMeasure", unitMeasure)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the WorkOrder EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToWorkOrder(ByVal workOrder As WorkOrder)
			MyBase.AddObject("WorkOrder", workOrder)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the WorkOrderRouting EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToWorkOrderRouting(ByVal workOrderRouting As WorkOrderRouting)
			MyBase.AddObject("WorkOrderRouting", workOrderRouting)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the ProductVendor EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToProductVendor(ByVal productVendor As ProductVendor)
			MyBase.AddObject("ProductVendor", productVendor)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the PurchaseOrderDetail EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToPurchaseOrderDetail(ByVal purchaseOrderDetail As PurchaseOrderDetail)
			MyBase.AddObject("PurchaseOrderDetail", purchaseOrderDetail)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the PurchaseOrderHeader EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToPurchaseOrderHeader(ByVal purchaseOrderHeader As PurchaseOrderHeader)
			MyBase.AddObject("PurchaseOrderHeader", purchaseOrderHeader)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the ShipMethod EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToShipMethod(ByVal shipMethod As ShipMethod)
			MyBase.AddObject("ShipMethod", shipMethod)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the Vendor EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToVendor(ByVal vendor As Vendor)
			MyBase.AddObject("Vendor", vendor)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the VendorAddress EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToVendorAddress(ByVal vendorAddress As VendorAddress)
			MyBase.AddObject("VendorAddress", vendorAddress)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the VendorContact EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToVendorContact(ByVal vendorContact As VendorContact)
			MyBase.AddObject("VendorContact", vendorContact)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the ContactCreditCard EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToContactCreditCard(ByVal contactCreditCard As ContactCreditCard)
			MyBase.AddObject("ContactCreditCard", contactCreditCard)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the CountryRegionCurrency EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToCountryRegionCurrency(ByVal countryRegionCurrency As CountryRegionCurrency)
			MyBase.AddObject("CountryRegionCurrency", countryRegionCurrency)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the CreditCard EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToCreditCard(ByVal creditCard As CreditCard)
			MyBase.AddObject("CreditCard", creditCard)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the Currency EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToCurrency(ByVal currency As Currency)
			MyBase.AddObject("Currency", currency)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the CurrencyRate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToCurrencyRate(ByVal currencyRate As CurrencyRate)
			MyBase.AddObject("CurrencyRate", currencyRate)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the Customer EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToCustomer(ByVal customer As Customer)
			MyBase.AddObject("Customer", customer)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the CustomerAddress EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToCustomerAddress(ByVal customerAddress As CustomerAddress)
			MyBase.AddObject("CustomerAddress", customerAddress)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the Individual EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToIndividual(ByVal individual As Individual)
			MyBase.AddObject("Individual", individual)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the SalesOrderDetail EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToSalesOrderDetail(ByVal salesOrderDetail As SalesOrderDetail)
			MyBase.AddObject("SalesOrderDetail", salesOrderDetail)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the SalesOrderHeader EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToSalesOrderHeader(ByVal salesOrderHeader As SalesOrderHeader)
			MyBase.AddObject("SalesOrderHeader", salesOrderHeader)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the SalesOrderHeaderSalesReason EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToSalesOrderHeaderSalesReason(ByVal salesOrderHeaderSalesReason As SalesOrderHeaderSalesReason)
			MyBase.AddObject("SalesOrderHeaderSalesReason", salesOrderHeaderSalesReason)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the SalesPerson EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToSalesPerson(ByVal salesPerson As SalesPerson)
			MyBase.AddObject("SalesPerson", salesPerson)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the SalesPersonQuotaHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToSalesPersonQuotaHistory(ByVal salesPersonQuotaHistory As SalesPersonQuotaHistory)
			MyBase.AddObject("SalesPersonQuotaHistory", salesPersonQuotaHistory)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the SalesReason EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToSalesReason(ByVal salesReason As SalesReason)
			MyBase.AddObject("SalesReason", salesReason)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the SalesTaxRate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToSalesTaxRate(ByVal salesTaxRate As SalesTaxRate)
			MyBase.AddObject("SalesTaxRate", salesTaxRate)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the SalesTerritory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToSalesTerritory(ByVal salesTerritory As SalesTerritory)
			MyBase.AddObject("SalesTerritory", salesTerritory)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the SalesTerritoryHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToSalesTerritoryHistory(ByVal salesTerritoryHistory As SalesTerritoryHistory)
			MyBase.AddObject("SalesTerritoryHistory", salesTerritoryHistory)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the ShoppingCartItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToShoppingCartItem(ByVal shoppingCartItem As ShoppingCartItem)
			MyBase.AddObject("ShoppingCartItem", shoppingCartItem)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the SpecialOffer EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToSpecialOffer(ByVal specialOffer As SpecialOffer)
			MyBase.AddObject("SpecialOffer", specialOffer)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the SpecialOfferProduct EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToSpecialOfferProduct(ByVal specialOfferProduct As SpecialOfferProduct)
			MyBase.AddObject("SpecialOfferProduct", specialOfferProduct)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the Store EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToStore(ByVal store As Store)
			MyBase.AddObject("Store", store)
		End Sub

		''' <summary>
		''' Deprecated Method for adding a new object to the StoreContact EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToStoreContact(ByVal storeContact As StoreContact)
			MyBase.AddObject("StoreContact", storeContact)
		End Sub

		#End Region
	End Class


	#End Region

	#Region "Entities"

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="Address"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class Address
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new Address object.
		''' </summary>
		''' <param name="addressID">Initial value of the AddressID property.</param>
		''' <param name="addressLine1">Initial value of the AddressLine1 property.</param>
		''' <param name="city">Initial value of the City property.</param>
		''' <param name="stateProvinceID">Initial value of the StateProvinceID property.</param>
		''' <param name="postalCode">Initial value of the PostalCode property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateAddress(ByVal addressID As Global.System.Int32, ByVal addressLine1 As Global.System.String, ByVal city As Global.System.String, ByVal stateProvinceID As Global.System.Int32, ByVal postalCode As Global.System.String, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As Address
			Dim address As New Address()
			address.AddressID = addressID
			address.AddressLine1 = addressLine1
			address.City = city
			address.StateProvinceID = stateProvinceID
			address.PostalCode = postalCode
			address.rowguid = rowguid
			address.ModifiedDate = modifiedDate
			Return address
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property AddressID() As Global.System.Int32
			Get
				Return _AddressID
			End Get
			Set(ByVal value As System.Int32)
				If _AddressID <> value Then
					OnAddressIDChanging(value)
					ReportPropertyChanging("AddressID")
					_AddressID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("AddressID")
					OnAddressIDChanged()
				End If
			End Set
		End Property
		Private _AddressID As Global.System.Int32
		Partial Private Sub OnAddressIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnAddressIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property AddressLine1() As Global.System.String
			Get
				Return _AddressLine1
			End Get
			Set(ByVal value As System.String)
				OnAddressLine1Changing(value)
				ReportPropertyChanging("AddressLine1")
				_AddressLine1 = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("AddressLine1")
				OnAddressLine1Changed()
			End Set
		End Property
		Private _AddressLine1 As Global.System.String
		Partial Private Sub OnAddressLine1Changing(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnAddressLine1Changed()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property AddressLine2() As Global.System.String
			Get
				Return _AddressLine2
			End Get
			Set(ByVal value As System.String)
				OnAddressLine2Changing(value)
				ReportPropertyChanging("AddressLine2")
				_AddressLine2 = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("AddressLine2")
				OnAddressLine2Changed()
			End Set
		End Property
		Private _AddressLine2 As Global.System.String
		Partial Private Sub OnAddressLine2Changing(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnAddressLine2Changed()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property City() As Global.System.String
			Get
				Return _City
			End Get
			Set(ByVal value As System.String)
				OnCityChanging(value)
				ReportPropertyChanging("City")
				_City = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("City")
				OnCityChanged()
			End Set
		End Property
		Private _City As Global.System.String
		Partial Private Sub OnCityChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnCityChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property StateProvinceID() As Global.System.Int32
			Get
				Return _StateProvinceID
			End Get
			Set(ByVal value As System.Int32)
				OnStateProvinceIDChanging(value)
				ReportPropertyChanging("StateProvinceID")
				_StateProvinceID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("StateProvinceID")
				OnStateProvinceIDChanged()
			End Set
		End Property
		Private _StateProvinceID As Global.System.Int32
		Partial Private Sub OnStateProvinceIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnStateProvinceIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property PostalCode() As Global.System.String
			Get
				Return _PostalCode
			End Get
			Set(ByVal value As System.String)
				OnPostalCodeChanging(value)
				ReportPropertyChanging("PostalCode")
				_PostalCode = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("PostalCode")
				OnPostalCodeChanged()
			End Set
		End Property
		Private _PostalCode As Global.System.String
		Partial Private Sub OnPostalCodeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnPostalCodeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_EmployeeAddress_Address_AddressID", "EmployeeAddress")> _
		Public Property EmployeeAddress() As EntityCollection(Of EmployeeAddress)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of EmployeeAddress)("AdventureWorksModel.FK_EmployeeAddress_Address_AddressID", "EmployeeAddress")
			End Get
			Set(ByVal value As EntityCollection(Of EmployeeAddress))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of EmployeeAddress)("AdventureWorksModel.FK_EmployeeAddress_Address_AddressID", "EmployeeAddress", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Address_StateProvince_StateProvinceID", "StateProvince")> _
		Public Property StateProvince() As StateProvince
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of StateProvince)("AdventureWorksModel.FK_Address_StateProvince_StateProvinceID", "StateProvince").Value
			End Get
			Set(ByVal value As StateProvince)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of StateProvince)("AdventureWorksModel.FK_Address_StateProvince_StateProvinceID", "StateProvince").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property StateProvinceReference() As EntityReference(Of StateProvince)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of StateProvince)("AdventureWorksModel.FK_Address_StateProvince_StateProvinceID", "StateProvince")
			End Get
			Set(ByVal value As EntityReference(Of StateProvince))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of StateProvince)("AdventureWorksModel.FK_Address_StateProvince_StateProvinceID", "StateProvince", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_CustomerAddress_Address_AddressID", "CustomerAddress")> _
		Public Property CustomerAddress() As EntityCollection(Of CustomerAddress)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of CustomerAddress)("AdventureWorksModel.FK_CustomerAddress_Address_AddressID", "CustomerAddress")
			End Get
			Set(ByVal value As EntityCollection(Of CustomerAddress))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of CustomerAddress)("AdventureWorksModel.FK_CustomerAddress_Address_AddressID", "CustomerAddress", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderHeader_Address_BillToAddressID", "SalesOrderHeader")> _
		Public Property SalesOrderHeader() As EntityCollection(Of SalesOrderHeader)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderHeader_Address_BillToAddressID", "SalesOrderHeader")
			End Get
			Set(ByVal value As EntityCollection(Of SalesOrderHeader))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderHeader_Address_BillToAddressID", "SalesOrderHeader", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderHeader_Address_ShipToAddressID", "SalesOrderHeader")> _
		Public Property SalesOrderHeader1() As EntityCollection(Of SalesOrderHeader)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderHeader_Address_ShipToAddressID", "SalesOrderHeader")
			End Get
			Set(ByVal value As EntityCollection(Of SalesOrderHeader))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderHeader_Address_ShipToAddressID", "SalesOrderHeader", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_VendorAddress_Address_AddressID", "VendorAddress")> _
		Public Property VendorAddress() As EntityCollection(Of VendorAddress)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of VendorAddress)("AdventureWorksModel.FK_VendorAddress_Address_AddressID", "VendorAddress")
			End Get
			Set(ByVal value As EntityCollection(Of VendorAddress))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of VendorAddress)("AdventureWorksModel.FK_VendorAddress_Address_AddressID", "VendorAddress", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="AddressType"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class AddressType
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new AddressType object.
		''' </summary>
		''' <param name="addressTypeID">Initial value of the AddressTypeID property.</param>
		''' <param name="name">Initial value of the Name property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateAddressType(ByVal addressTypeID As Global.System.Int32, ByVal name As Global.System.String, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As AddressType
			Dim addressType As New AddressType()
			addressType.AddressTypeID = addressTypeID
			addressType.Name = name
			addressType.rowguid = rowguid
			addressType.ModifiedDate = modifiedDate
			Return addressType
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property AddressTypeID() As Global.System.Int32
			Get
				Return _AddressTypeID
			End Get
			Set(ByVal value As System.Int32)
				If _AddressTypeID <> value Then
					OnAddressTypeIDChanging(value)
					ReportPropertyChanging("AddressTypeID")
					_AddressTypeID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("AddressTypeID")
					OnAddressTypeIDChanged()
				End If
			End Set
		End Property
		Private _AddressTypeID As Global.System.Int32
		Partial Private Sub OnAddressTypeIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnAddressTypeIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Name() As Global.System.String
			Get
				Return _Name
			End Get
			Set(ByVal value As System.String)
				OnNameChanging(value)
				ReportPropertyChanging("Name")
				_Name = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Name")
				OnNameChanged()
			End Set
		End Property
		Private _Name As Global.System.String
		Partial Private Sub OnNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_CustomerAddress_AddressType_AddressTypeID", "CustomerAddress")> _
		Public Property CustomerAddress() As EntityCollection(Of CustomerAddress)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of CustomerAddress)("AdventureWorksModel.FK_CustomerAddress_AddressType_AddressTypeID", "CustomerAddress")
			End Get
			Set(ByVal value As EntityCollection(Of CustomerAddress))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of CustomerAddress)("AdventureWorksModel.FK_CustomerAddress_AddressType_AddressTypeID", "CustomerAddress", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_VendorAddress_AddressType_AddressTypeID", "VendorAddress")> _
		Public Property VendorAddress() As EntityCollection(Of VendorAddress)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of VendorAddress)("AdventureWorksModel.FK_VendorAddress_AddressType_AddressTypeID", "VendorAddress")
			End Get
			Set(ByVal value As EntityCollection(Of VendorAddress))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of VendorAddress)("AdventureWorksModel.FK_VendorAddress_AddressType_AddressTypeID", "VendorAddress", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="AWBuildVersion"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class AWBuildVersion
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new AWBuildVersion object.
		''' </summary>
		''' <param name="systemInformationID">Initial value of the SystemInformationID property.</param>
		''' <param name="database_Version">Initial value of the Database_Version property.</param>
		''' <param name="versionDate">Initial value of the VersionDate property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateAWBuildVersion(ByVal systemInformationID As Global.System.Byte, ByVal database_Version As Global.System.String, ByVal versionDate As Global.System.DateTime, ByVal modifiedDate As Global.System.DateTime) As AWBuildVersion
			Dim aWBuildVersion As New AWBuildVersion()
			aWBuildVersion.SystemInformationID = systemInformationID
			aWBuildVersion.Database_Version = database_Version
			aWBuildVersion.VersionDate = versionDate
			aWBuildVersion.ModifiedDate = modifiedDate
			Return aWBuildVersion
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property SystemInformationID() As Global.System.Byte
			Get
				Return _SystemInformationID
			End Get
			Set(ByVal value As System.Byte)
				If _SystemInformationID <> value Then
					OnSystemInformationIDChanging(value)
					ReportPropertyChanging("SystemInformationID")
					_SystemInformationID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("SystemInformationID")
					OnSystemInformationIDChanged()
				End If
			End Set
		End Property
		Private _SystemInformationID As Global.System.Byte
		Partial Private Sub OnSystemInformationIDChanging(ByVal value As Global.System.Byte)
		End Sub
		Partial Private Sub OnSystemInformationIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Database_Version() As Global.System.String
			Get
				Return _Database_Version
			End Get
			Set(ByVal value As System.String)
				OnDatabase_VersionChanging(value)
				ReportPropertyChanging("Database_Version")
				_Database_Version = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Database_Version")
				OnDatabase_VersionChanged()
			End Set
		End Property
		Private _Database_Version As Global.System.String
		Partial Private Sub OnDatabase_VersionChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnDatabase_VersionChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property VersionDate() As Global.System.DateTime
			Get
				Return _VersionDate
			End Get
			Set(ByVal value As System.DateTime)
				OnVersionDateChanging(value)
				ReportPropertyChanging("VersionDate")
				_VersionDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("VersionDate")
				OnVersionDateChanged()
			End Set
		End Property
		Private _VersionDate As Global.System.DateTime
		Partial Private Sub OnVersionDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnVersionDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="BillOfMaterials"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class BillOfMaterials
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new BillOfMaterials object.
		''' </summary>
		''' <param name="billOfMaterialsID">Initial value of the BillOfMaterialsID property.</param>
		''' <param name="componentID">Initial value of the ComponentID property.</param>
		''' <param name="startDate">Initial value of the StartDate property.</param>
		''' <param name="unitMeasureCode">Initial value of the UnitMeasureCode property.</param>
		''' <param name="bOMLevel">Initial value of the BOMLevel property.</param>
		''' <param name="perAssemblyQty">Initial value of the PerAssemblyQty property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateBillOfMaterials(ByVal billOfMaterialsID As Global.System.Int32, ByVal componentID As Global.System.Int32, ByVal startDate As Global.System.DateTime, ByVal unitMeasureCode As Global.System.String, ByVal bOMLevel As Global.System.Int16, ByVal perAssemblyQty As Global.System.Decimal, ByVal modifiedDate As Global.System.DateTime) As BillOfMaterials
			Dim billOfMaterials As New BillOfMaterials()
			billOfMaterials.BillOfMaterialsID = billOfMaterialsID
			billOfMaterials.ComponentID = componentID
			billOfMaterials.StartDate = startDate
			billOfMaterials.UnitMeasureCode = unitMeasureCode
			billOfMaterials.BOMLevel = bOMLevel
			billOfMaterials.PerAssemblyQty = perAssemblyQty
			billOfMaterials.ModifiedDate = modifiedDate
			Return billOfMaterials
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property BillOfMaterialsID() As Global.System.Int32
			Get
				Return _BillOfMaterialsID
			End Get
			Set(ByVal value As System.Int32)
				If _BillOfMaterialsID <> value Then
					OnBillOfMaterialsIDChanging(value)
					ReportPropertyChanging("BillOfMaterialsID")
					_BillOfMaterialsID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("BillOfMaterialsID")
					OnBillOfMaterialsIDChanged()
				End If
			End Set
		End Property
		Private _BillOfMaterialsID As Global.System.Int32
		Partial Private Sub OnBillOfMaterialsIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnBillOfMaterialsIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property ProductAssemblyID() As Global.System.Int32?
			Get
				Return _ProductAssemblyID
			End Get
			Set(ByVal value? As System.Int32)
				OnProductAssemblyIDChanging(value)
				ReportPropertyChanging("ProductAssemblyID")
				_ProductAssemblyID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ProductAssemblyID")
				OnProductAssemblyIDChanged()
			End Set
		End Property
		Private _ProductAssemblyID? As Global.System.Int32
		Partial Private Sub OnProductAssemblyIDChanging(ByVal value? As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductAssemblyIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ComponentID() As Global.System.Int32
			Get
				Return _ComponentID
			End Get
			Set(ByVal value As System.Int32)
				OnComponentIDChanging(value)
				ReportPropertyChanging("ComponentID")
				_ComponentID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ComponentID")
				OnComponentIDChanged()
			End Set
		End Property
		Private _ComponentID As Global.System.Int32
		Partial Private Sub OnComponentIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnComponentIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property StartDate() As Global.System.DateTime
			Get
				Return _StartDate
			End Get
			Set(ByVal value As System.DateTime)
				OnStartDateChanging(value)
				ReportPropertyChanging("StartDate")
				_StartDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("StartDate")
				OnStartDateChanged()
			End Set
		End Property
		Private _StartDate As Global.System.DateTime
		Partial Private Sub OnStartDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnStartDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property EndDate() As Global.System.DateTime?
			Get
				Return _EndDate
			End Get
			Set(ByVal value? As System.DateTime)
				OnEndDateChanging(value)
				ReportPropertyChanging("EndDate")
				_EndDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("EndDate")
				OnEndDateChanged()
			End Set
		End Property
		Private _EndDate? As Global.System.DateTime
		Partial Private Sub OnEndDateChanging(ByVal value? As Global.System.DateTime)
		End Sub
		Partial Private Sub OnEndDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property UnitMeasureCode() As Global.System.String
			Get
				Return _UnitMeasureCode
			End Get
			Set(ByVal value As System.String)
				OnUnitMeasureCodeChanging(value)
				ReportPropertyChanging("UnitMeasureCode")
				_UnitMeasureCode = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("UnitMeasureCode")
				OnUnitMeasureCodeChanged()
			End Set
		End Property
		Private _UnitMeasureCode As Global.System.String
		Partial Private Sub OnUnitMeasureCodeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnUnitMeasureCodeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property BOMLevel() As Global.System.Int16
			Get
				Return _BOMLevel
			End Get
			Set(ByVal value As System.Int16)
				OnBOMLevelChanging(value)
				ReportPropertyChanging("BOMLevel")
				_BOMLevel = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("BOMLevel")
				OnBOMLevelChanged()
			End Set
		End Property
		Private _BOMLevel As Global.System.Int16
		Partial Private Sub OnBOMLevelChanging(ByVal value As Global.System.Int16)
		End Sub
		Partial Private Sub OnBOMLevelChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property PerAssemblyQty() As Global.System.Decimal
			Get
				Return _PerAssemblyQty
			End Get
			Set(ByVal value As System.Decimal)
				OnPerAssemblyQtyChanging(value)
				ReportPropertyChanging("PerAssemblyQty")
				_PerAssemblyQty = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("PerAssemblyQty")
				OnPerAssemblyQtyChanged()
			End Set
		End Property
		Private _PerAssemblyQty As Global.System.Decimal
		Partial Private Sub OnPerAssemblyQtyChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnPerAssemblyQtyChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_BillOfMaterials_Product_ComponentID", "Product")> _
		Public Property Product() As Product
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_BillOfMaterials_Product_ComponentID", "Product").Value
			End Get
			Set(ByVal value As Product)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_BillOfMaterials_Product_ComponentID", "Product").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ProductReference() As EntityReference(Of Product)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_BillOfMaterials_Product_ComponentID", "Product")
			End Get
			Set(ByVal value As EntityReference(Of Product))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Product)("AdventureWorksModel.FK_BillOfMaterials_Product_ComponentID", "Product", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_BillOfMaterials_Product_ProductAssemblyID", "Product")> _
		Public Property Product1() As Product
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_BillOfMaterials_Product_ProductAssemblyID", "Product").Value
			End Get
			Set(ByVal value As Product)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_BillOfMaterials_Product_ProductAssemblyID", "Product").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property Product1Reference() As EntityReference(Of Product)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_BillOfMaterials_Product_ProductAssemblyID", "Product")
			End Get
			Set(ByVal value As EntityReference(Of Product))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Product)("AdventureWorksModel.FK_BillOfMaterials_Product_ProductAssemblyID", "Product", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_BillOfMaterials_UnitMeasure_UnitMeasureCode", "UnitMeasure")> _
		Public Property UnitMeasure() As UnitMeasure
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of UnitMeasure)("AdventureWorksModel.FK_BillOfMaterials_UnitMeasure_UnitMeasureCode", "UnitMeasure").Value
			End Get
			Set(ByVal value As UnitMeasure)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of UnitMeasure)("AdventureWorksModel.FK_BillOfMaterials_UnitMeasure_UnitMeasureCode", "UnitMeasure").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property UnitMeasureReference() As EntityReference(Of UnitMeasure)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of UnitMeasure)("AdventureWorksModel.FK_BillOfMaterials_UnitMeasure_UnitMeasureCode", "UnitMeasure")
			End Get
			Set(ByVal value As EntityReference(Of UnitMeasure))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of UnitMeasure)("AdventureWorksModel.FK_BillOfMaterials_UnitMeasure_UnitMeasureCode", "UnitMeasure", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="Contact"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class Contact
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new Contact object.
		''' </summary>
		''' <param name="contactID">Initial value of the ContactID property.</param>
		''' <param name="nameStyle">Initial value of the NameStyle property.</param>
		''' <param name="firstName">Initial value of the FirstName property.</param>
		''' <param name="lastName">Initial value of the LastName property.</param>
		''' <param name="emailPromotion">Initial value of the EmailPromotion property.</param>
		''' <param name="passwordHash">Initial value of the PasswordHash property.</param>
		''' <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateContact(ByVal contactID As Global.System.Int32, ByVal nameStyle As Global.System.Boolean, ByVal firstName As Global.System.String, ByVal lastName As Global.System.String, ByVal emailPromotion As Global.System.Int32, ByVal passwordHash As Global.System.String, ByVal passwordSalt As Global.System.String, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As Contact
			Dim contact As New Contact()
			contact.ContactID = contactID
			contact.NameStyle = nameStyle
			contact.FirstName = firstName
			contact.LastName = lastName
			contact.EmailPromotion = emailPromotion
			contact.PasswordHash = passwordHash
			contact.PasswordSalt = passwordSalt
			contact.rowguid = rowguid
			contact.ModifiedDate = modifiedDate
			Return contact
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ContactID() As Global.System.Int32
			Get
				Return _ContactID
			End Get
			Set(ByVal value As System.Int32)
				If _ContactID <> value Then
					OnContactIDChanging(value)
					ReportPropertyChanging("ContactID")
					_ContactID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ContactID")
					OnContactIDChanged()
				End If
			End Set
		End Property
		Private _ContactID As Global.System.Int32
		Partial Private Sub OnContactIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnContactIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property NameStyle() As Global.System.Boolean
			Get
				Return _NameStyle
			End Get
			Set(ByVal value As System.Boolean)
				OnNameStyleChanging(value)
				ReportPropertyChanging("NameStyle")
				_NameStyle = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("NameStyle")
				OnNameStyleChanged()
			End Set
		End Property
		Private _NameStyle As Global.System.Boolean
		Partial Private Sub OnNameStyleChanging(ByVal value As Global.System.Boolean)
		End Sub
		Partial Private Sub OnNameStyleChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property Title() As Global.System.String
			Get
				Return _Title
			End Get
			Set(ByVal value As System.String)
				OnTitleChanging(value)
				ReportPropertyChanging("Title")
				_Title = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("Title")
				OnTitleChanged()
			End Set
		End Property
		Private _Title As Global.System.String
		Partial Private Sub OnTitleChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnTitleChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property FirstName() As Global.System.String
			Get
				Return _FirstName
			End Get
			Set(ByVal value As System.String)
				OnFirstNameChanging(value)
				ReportPropertyChanging("FirstName")
				_FirstName = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("FirstName")
				OnFirstNameChanged()
			End Set
		End Property
		Private _FirstName As Global.System.String
		Partial Private Sub OnFirstNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnFirstNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property MiddleName() As Global.System.String
			Get
				Return _MiddleName
			End Get
			Set(ByVal value As System.String)
				OnMiddleNameChanging(value)
				ReportPropertyChanging("MiddleName")
				_MiddleName = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("MiddleName")
				OnMiddleNameChanged()
			End Set
		End Property
		Private _MiddleName As Global.System.String
		Partial Private Sub OnMiddleNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnMiddleNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property LastName() As Global.System.String
			Get
				Return _LastName
			End Get
			Set(ByVal value As System.String)
				OnLastNameChanging(value)
				ReportPropertyChanging("LastName")
				_LastName = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("LastName")
				OnLastNameChanged()
			End Set
		End Property
		Private _LastName As Global.System.String
		Partial Private Sub OnLastNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnLastNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property Suffix() As Global.System.String
			Get
				Return _Suffix
			End Get
			Set(ByVal value As System.String)
				OnSuffixChanging(value)
				ReportPropertyChanging("Suffix")
				_Suffix = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("Suffix")
				OnSuffixChanged()
			End Set
		End Property
		Private _Suffix As Global.System.String
		Partial Private Sub OnSuffixChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnSuffixChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property EmailAddress() As Global.System.String
			Get
				Return _EmailAddress
			End Get
			Set(ByVal value As System.String)
				OnEmailAddressChanging(value)
				ReportPropertyChanging("EmailAddress")
				_EmailAddress = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("EmailAddress")
				OnEmailAddressChanged()
			End Set
		End Property
		Private _EmailAddress As Global.System.String
		Partial Private Sub OnEmailAddressChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnEmailAddressChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property EmailPromotion() As Global.System.Int32
			Get
				Return _EmailPromotion
			End Get
			Set(ByVal value As System.Int32)
				OnEmailPromotionChanging(value)
				ReportPropertyChanging("EmailPromotion")
				_EmailPromotion = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("EmailPromotion")
				OnEmailPromotionChanged()
			End Set
		End Property
		Private _EmailPromotion As Global.System.Int32
		Partial Private Sub OnEmailPromotionChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnEmailPromotionChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property Phone() As Global.System.String
			Get
				Return _Phone
			End Get
			Set(ByVal value As System.String)
				OnPhoneChanging(value)
				ReportPropertyChanging("Phone")
				_Phone = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("Phone")
				OnPhoneChanged()
			End Set
		End Property
		Private _Phone As Global.System.String
		Partial Private Sub OnPhoneChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnPhoneChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property PasswordHash() As Global.System.String
			Get
				Return _PasswordHash
			End Get
			Set(ByVal value As System.String)
				OnPasswordHashChanging(value)
				ReportPropertyChanging("PasswordHash")
				_PasswordHash = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("PasswordHash")
				OnPasswordHashChanged()
			End Set
		End Property
		Private _PasswordHash As Global.System.String
		Partial Private Sub OnPasswordHashChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnPasswordHashChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property PasswordSalt() As Global.System.String
			Get
				Return _PasswordSalt
			End Get
			Set(ByVal value As System.String)
				OnPasswordSaltChanging(value)
				ReportPropertyChanging("PasswordSalt")
				_PasswordSalt = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("PasswordSalt")
				OnPasswordSaltChanged()
			End Set
		End Property
		Private _PasswordSalt As Global.System.String
		Partial Private Sub OnPasswordSaltChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnPasswordSaltChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property AdditionalContactInfo() As Global.System.String
			Get
				Return _AdditionalContactInfo
			End Get
			Set(ByVal value As System.String)
				OnAdditionalContactInfoChanging(value)
				ReportPropertyChanging("AdditionalContactInfo")
				_AdditionalContactInfo = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("AdditionalContactInfo")
				OnAdditionalContactInfoChanged()
			End Set
		End Property
		Private _AdditionalContactInfo As Global.System.String
		Partial Private Sub OnAdditionalContactInfoChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnAdditionalContactInfoChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Employee_Contact_ContactID", "Employee")> _
		Public Property Employee() As EntityCollection(Of Employee)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of Employee)("AdventureWorksModel.FK_Employee_Contact_ContactID", "Employee")
			End Get
			Set(ByVal value As EntityCollection(Of Employee))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Employee)("AdventureWorksModel.FK_Employee_Contact_ContactID", "Employee", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ContactCreditCard_Contact_ContactID", "ContactCreditCard")> _
		Public Property ContactCreditCard() As EntityCollection(Of ContactCreditCard)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of ContactCreditCard)("AdventureWorksModel.FK_ContactCreditCard_Contact_ContactID", "ContactCreditCard")
			End Get
			Set(ByVal value As EntityCollection(Of ContactCreditCard))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ContactCreditCard)("AdventureWorksModel.FK_ContactCreditCard_Contact_ContactID", "ContactCreditCard", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Individual_Contact_ContactID", "Individual")> _
		Public Property Individual() As EntityCollection(Of Individual)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of Individual)("AdventureWorksModel.FK_Individual_Contact_ContactID", "Individual")
			End Get
			Set(ByVal value As EntityCollection(Of Individual))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Individual)("AdventureWorksModel.FK_Individual_Contact_ContactID", "Individual", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderHeader_Contact_ContactID", "SalesOrderHeader")> _
		Public Property SalesOrderHeader() As EntityCollection(Of SalesOrderHeader)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderHeader_Contact_ContactID", "SalesOrderHeader")
			End Get
			Set(ByVal value As EntityCollection(Of SalesOrderHeader))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderHeader_Contact_ContactID", "SalesOrderHeader", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_StoreContact_Contact_ContactID", "StoreContact")> _
		Public Property StoreContact() As EntityCollection(Of StoreContact)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of StoreContact)("AdventureWorksModel.FK_StoreContact_Contact_ContactID", "StoreContact")
			End Get
			Set(ByVal value As EntityCollection(Of StoreContact))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of StoreContact)("AdventureWorksModel.FK_StoreContact_Contact_ContactID", "StoreContact", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_VendorContact_Contact_ContactID", "VendorContact")> _
		Public Property VendorContact() As EntityCollection(Of VendorContact)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of VendorContact)("AdventureWorksModel.FK_VendorContact_Contact_ContactID", "VendorContact")
			End Get
			Set(ByVal value As EntityCollection(Of VendorContact))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of VendorContact)("AdventureWorksModel.FK_VendorContact_Contact_ContactID", "VendorContact", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="ContactCreditCard"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class ContactCreditCard
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new ContactCreditCard object.
		''' </summary>
		''' <param name="contactID">Initial value of the ContactID property.</param>
		''' <param name="creditCardID">Initial value of the CreditCardID property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateContactCreditCard(ByVal contactID As Global.System.Int32, ByVal creditCardID As Global.System.Int32, ByVal modifiedDate As Global.System.DateTime) As ContactCreditCard
			Dim contactCreditCard As New ContactCreditCard()
			contactCreditCard.ContactID = contactID
			contactCreditCard.CreditCardID = creditCardID
			contactCreditCard.ModifiedDate = modifiedDate
			Return contactCreditCard
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ContactID() As Global.System.Int32
			Get
				Return _ContactID
			End Get
			Set(ByVal value As System.Int32)
				If _ContactID <> value Then
					OnContactIDChanging(value)
					ReportPropertyChanging("ContactID")
					_ContactID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ContactID")
					OnContactIDChanged()
				End If
			End Set
		End Property
		Private _ContactID As Global.System.Int32
		Partial Private Sub OnContactIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnContactIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property CreditCardID() As Global.System.Int32
			Get
				Return _CreditCardID
			End Get
			Set(ByVal value As System.Int32)
				If _CreditCardID <> value Then
					OnCreditCardIDChanging(value)
					ReportPropertyChanging("CreditCardID")
					_CreditCardID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("CreditCardID")
					OnCreditCardIDChanged()
				End If
			End Set
		End Property
		Private _CreditCardID As Global.System.Int32
		Partial Private Sub OnCreditCardIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnCreditCardIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ContactCreditCard_Contact_ContactID", "Contact")> _
		Public Property Contact() As Contact
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Contact)("AdventureWorksModel.FK_ContactCreditCard_Contact_ContactID", "Contact").Value
			End Get
			Set(ByVal value As Contact)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Contact)("AdventureWorksModel.FK_ContactCreditCard_Contact_ContactID", "Contact").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ContactReference() As EntityReference(Of Contact)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Contact)("AdventureWorksModel.FK_ContactCreditCard_Contact_ContactID", "Contact")
			End Get
			Set(ByVal value As EntityReference(Of Contact))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Contact)("AdventureWorksModel.FK_ContactCreditCard_Contact_ContactID", "Contact", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ContactCreditCard_CreditCard_CreditCardID", "CreditCard")> _
		Public Property CreditCard() As CreditCard
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of CreditCard)("AdventureWorksModel.FK_ContactCreditCard_CreditCard_CreditCardID", "CreditCard").Value
			End Get
			Set(ByVal value As CreditCard)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of CreditCard)("AdventureWorksModel.FK_ContactCreditCard_CreditCard_CreditCardID", "CreditCard").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property CreditCardReference() As EntityReference(Of CreditCard)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of CreditCard)("AdventureWorksModel.FK_ContactCreditCard_CreditCard_CreditCardID", "CreditCard")
			End Get
			Set(ByVal value As EntityReference(Of CreditCard))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of CreditCard)("AdventureWorksModel.FK_ContactCreditCard_CreditCard_CreditCardID", "CreditCard", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="ContactType"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class ContactType
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new ContactType object.
		''' </summary>
		''' <param name="contactTypeID">Initial value of the ContactTypeID property.</param>
		''' <param name="name">Initial value of the Name property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateContactType(ByVal contactTypeID As Global.System.Int32, ByVal name As Global.System.String, ByVal modifiedDate As Global.System.DateTime) As ContactType
			Dim contactType As New ContactType()
			contactType.ContactTypeID = contactTypeID
			contactType.Name = name
			contactType.ModifiedDate = modifiedDate
			Return contactType
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ContactTypeID() As Global.System.Int32
			Get
				Return _ContactTypeID
			End Get
			Set(ByVal value As System.Int32)
				If _ContactTypeID <> value Then
					OnContactTypeIDChanging(value)
					ReportPropertyChanging("ContactTypeID")
					_ContactTypeID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ContactTypeID")
					OnContactTypeIDChanged()
				End If
			End Set
		End Property
		Private _ContactTypeID As Global.System.Int32
		Partial Private Sub OnContactTypeIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnContactTypeIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Name() As Global.System.String
			Get
				Return _Name
			End Get
			Set(ByVal value As System.String)
				OnNameChanging(value)
				ReportPropertyChanging("Name")
				_Name = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Name")
				OnNameChanged()
			End Set
		End Property
		Private _Name As Global.System.String
		Partial Private Sub OnNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_StoreContact_ContactType_ContactTypeID", "StoreContact")> _
		Public Property StoreContact() As EntityCollection(Of StoreContact)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of StoreContact)("AdventureWorksModel.FK_StoreContact_ContactType_ContactTypeID", "StoreContact")
			End Get
			Set(ByVal value As EntityCollection(Of StoreContact))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of StoreContact)("AdventureWorksModel.FK_StoreContact_ContactType_ContactTypeID", "StoreContact", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_VendorContact_ContactType_ContactTypeID", "VendorContact")> _
		Public Property VendorContact() As EntityCollection(Of VendorContact)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of VendorContact)("AdventureWorksModel.FK_VendorContact_ContactType_ContactTypeID", "VendorContact")
			End Get
			Set(ByVal value As EntityCollection(Of VendorContact))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of VendorContact)("AdventureWorksModel.FK_VendorContact_ContactType_ContactTypeID", "VendorContact", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="CountryRegion"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class CountryRegion
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new CountryRegion object.
		''' </summary>
		''' <param name="countryRegionCode">Initial value of the CountryRegionCode property.</param>
		''' <param name="name">Initial value of the Name property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateCountryRegion(ByVal countryRegionCode As Global.System.String, ByVal name As Global.System.String, ByVal modifiedDate As Global.System.DateTime) As CountryRegion
			Dim countryRegion As New CountryRegion()
			countryRegion.CountryRegionCode = countryRegionCode
			countryRegion.Name = name
			countryRegion.ModifiedDate = modifiedDate
			Return countryRegion
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property CountryRegionCode() As Global.System.String
			Get
				Return _CountryRegionCode
			End Get
			Set(ByVal value As System.String)
				If _CountryRegionCode <> value Then
					OnCountryRegionCodeChanging(value)
					ReportPropertyChanging("CountryRegionCode")
					_CountryRegionCode = StructuralObject.SetValidValue(value, False)
					ReportPropertyChanged("CountryRegionCode")
					OnCountryRegionCodeChanged()
				End If
			End Set
		End Property
		Private _CountryRegionCode As Global.System.String
		Partial Private Sub OnCountryRegionCodeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnCountryRegionCodeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Name() As Global.System.String
			Get
				Return _Name
			End Get
			Set(ByVal value As System.String)
				OnNameChanging(value)
				ReportPropertyChanging("Name")
				_Name = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Name")
				OnNameChanged()
			End Set
		End Property
		Private _Name As Global.System.String
		Partial Private Sub OnNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_CountryRegionCurrency_CountryRegion_CountryRegionCode", "CountryRegionCurrency")> _
		Public Property CountryRegionCurrency() As EntityCollection(Of CountryRegionCurrency)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of CountryRegionCurrency)("AdventureWorksModel.FK_CountryRegionCurrency_CountryRegion_CountryRegionCode", "CountryRegionCurrency")
			End Get
			Set(ByVal value As EntityCollection(Of CountryRegionCurrency))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of CountryRegionCurrency)("AdventureWorksModel.FK_CountryRegionCurrency_CountryRegion_CountryRegionCode", "CountryRegionCurrency", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_StateProvince_CountryRegion_CountryRegionCode", "StateProvince")> _
		Public Property StateProvince() As EntityCollection(Of StateProvince)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of StateProvince)("AdventureWorksModel.FK_StateProvince_CountryRegion_CountryRegionCode", "StateProvince")
			End Get
			Set(ByVal value As EntityCollection(Of StateProvince))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of StateProvince)("AdventureWorksModel.FK_StateProvince_CountryRegion_CountryRegionCode", "StateProvince", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="CountryRegionCurrency"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class CountryRegionCurrency
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new CountryRegionCurrency object.
		''' </summary>
		''' <param name="countryRegionCode">Initial value of the CountryRegionCode property.</param>
		''' <param name="currencyCode">Initial value of the CurrencyCode property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateCountryRegionCurrency(ByVal countryRegionCode As Global.System.String, ByVal currencyCode As Global.System.String, ByVal modifiedDate As Global.System.DateTime) As CountryRegionCurrency
			Dim countryRegionCurrency As New CountryRegionCurrency()
			countryRegionCurrency.CountryRegionCode = countryRegionCode
			countryRegionCurrency.CurrencyCode = currencyCode
			countryRegionCurrency.ModifiedDate = modifiedDate
			Return countryRegionCurrency
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property CountryRegionCode() As Global.System.String
			Get
				Return _CountryRegionCode
			End Get
			Set(ByVal value As System.String)
				If _CountryRegionCode <> value Then
					OnCountryRegionCodeChanging(value)
					ReportPropertyChanging("CountryRegionCode")
					_CountryRegionCode = StructuralObject.SetValidValue(value, False)
					ReportPropertyChanged("CountryRegionCode")
					OnCountryRegionCodeChanged()
				End If
			End Set
		End Property
		Private _CountryRegionCode As Global.System.String
		Partial Private Sub OnCountryRegionCodeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnCountryRegionCodeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property CurrencyCode() As Global.System.String
			Get
				Return _CurrencyCode
			End Get
			Set(ByVal value As System.String)
				If _CurrencyCode <> value Then
					OnCurrencyCodeChanging(value)
					ReportPropertyChanging("CurrencyCode")
					_CurrencyCode = StructuralObject.SetValidValue(value, False)
					ReportPropertyChanged("CurrencyCode")
					OnCurrencyCodeChanged()
				End If
			End Set
		End Property
		Private _CurrencyCode As Global.System.String
		Partial Private Sub OnCurrencyCodeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnCurrencyCodeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_CountryRegionCurrency_CountryRegion_CountryRegionCode", "CountryRegion")> _
		Public Property CountryRegion() As CountryRegion
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of CountryRegion)("AdventureWorksModel.FK_CountryRegionCurrency_CountryRegion_CountryRegionCode", "CountryRegion").Value
			End Get
			Set(ByVal value As CountryRegion)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of CountryRegion)("AdventureWorksModel.FK_CountryRegionCurrency_CountryRegion_CountryRegionCode", "CountryRegion").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property CountryRegionReference() As EntityReference(Of CountryRegion)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of CountryRegion)("AdventureWorksModel.FK_CountryRegionCurrency_CountryRegion_CountryRegionCode", "CountryRegion")
			End Get
			Set(ByVal value As EntityReference(Of CountryRegion))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of CountryRegion)("AdventureWorksModel.FK_CountryRegionCurrency_CountryRegion_CountryRegionCode", "CountryRegion", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_CountryRegionCurrency_Currency_CurrencyCode", "Currency")> _
		Public Property Currency() As Currency
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Currency)("AdventureWorksModel.FK_CountryRegionCurrency_Currency_CurrencyCode", "Currency").Value
			End Get
			Set(ByVal value As Currency)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Currency)("AdventureWorksModel.FK_CountryRegionCurrency_Currency_CurrencyCode", "Currency").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property CurrencyReference() As EntityReference(Of Currency)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Currency)("AdventureWorksModel.FK_CountryRegionCurrency_Currency_CurrencyCode", "Currency")
			End Get
			Set(ByVal value As EntityReference(Of Currency))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Currency)("AdventureWorksModel.FK_CountryRegionCurrency_Currency_CurrencyCode", "Currency", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="CreditCard"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class CreditCard
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new CreditCard object.
		''' </summary>
		''' <param name="creditCardID">Initial value of the CreditCardID property.</param>
		''' <param name="cardType">Initial value of the CardType property.</param>
		''' <param name="cardNumber">Initial value of the CardNumber property.</param>
		''' <param name="expMonth">Initial value of the ExpMonth property.</param>
		''' <param name="expYear">Initial value of the ExpYear property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateCreditCard(ByVal creditCardID As Global.System.Int32, ByVal cardType As Global.System.String, ByVal cardNumber As Global.System.String, ByVal expMonth As Global.System.Byte, ByVal expYear As Global.System.Int16, ByVal modifiedDate As Global.System.DateTime) As CreditCard
			Dim creditCard As New CreditCard()
			creditCard.CreditCardID = creditCardID
			creditCard.CardType = cardType
			creditCard.CardNumber = cardNumber
			creditCard.ExpMonth = expMonth
			creditCard.ExpYear = expYear
			creditCard.ModifiedDate = modifiedDate
			Return creditCard
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property CreditCardID() As Global.System.Int32
			Get
				Return _CreditCardID
			End Get
			Set(ByVal value As System.Int32)
				If _CreditCardID <> value Then
					OnCreditCardIDChanging(value)
					ReportPropertyChanging("CreditCardID")
					_CreditCardID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("CreditCardID")
					OnCreditCardIDChanged()
				End If
			End Set
		End Property
		Private _CreditCardID As Global.System.Int32
		Partial Private Sub OnCreditCardIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnCreditCardIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property CardType() As Global.System.String
			Get
				Return _CardType
			End Get
			Set(ByVal value As System.String)
				OnCardTypeChanging(value)
				ReportPropertyChanging("CardType")
				_CardType = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("CardType")
				OnCardTypeChanged()
			End Set
		End Property
		Private _CardType As Global.System.String
		Partial Private Sub OnCardTypeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnCardTypeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property CardNumber() As Global.System.String
			Get
				Return _CardNumber
			End Get
			Set(ByVal value As System.String)
				OnCardNumberChanging(value)
				ReportPropertyChanging("CardNumber")
				_CardNumber = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("CardNumber")
				OnCardNumberChanged()
			End Set
		End Property
		Private _CardNumber As Global.System.String
		Partial Private Sub OnCardNumberChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnCardNumberChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ExpMonth() As Global.System.Byte
			Get
				Return _ExpMonth
			End Get
			Set(ByVal value As System.Byte)
				OnExpMonthChanging(value)
				ReportPropertyChanging("ExpMonth")
				_ExpMonth = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ExpMonth")
				OnExpMonthChanged()
			End Set
		End Property
		Private _ExpMonth As Global.System.Byte
		Partial Private Sub OnExpMonthChanging(ByVal value As Global.System.Byte)
		End Sub
		Partial Private Sub OnExpMonthChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ExpYear() As Global.System.Int16
			Get
				Return _ExpYear
			End Get
			Set(ByVal value As System.Int16)
				OnExpYearChanging(value)
				ReportPropertyChanging("ExpYear")
				_ExpYear = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ExpYear")
				OnExpYearChanged()
			End Set
		End Property
		Private _ExpYear As Global.System.Int16
		Partial Private Sub OnExpYearChanging(ByVal value As Global.System.Int16)
		End Sub
		Partial Private Sub OnExpYearChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ContactCreditCard_CreditCard_CreditCardID", "ContactCreditCard")> _
		Public Property ContactCreditCard() As EntityCollection(Of ContactCreditCard)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of ContactCreditCard)("AdventureWorksModel.FK_ContactCreditCard_CreditCard_CreditCardID", "ContactCreditCard")
			End Get
			Set(ByVal value As EntityCollection(Of ContactCreditCard))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ContactCreditCard)("AdventureWorksModel.FK_ContactCreditCard_CreditCard_CreditCardID", "ContactCreditCard", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderHeader_CreditCard_CreditCardID", "SalesOrderHeader")> _
		Public Property SalesOrderHeader() As EntityCollection(Of SalesOrderHeader)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderHeader_CreditCard_CreditCardID", "SalesOrderHeader")
			End Get
			Set(ByVal value As EntityCollection(Of SalesOrderHeader))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderHeader_CreditCard_CreditCardID", "SalesOrderHeader", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="Culture"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class Culture
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new Culture object.
		''' </summary>
		''' <param name="cultureID">Initial value of the CultureID property.</param>
		''' <param name="name">Initial value of the Name property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateCulture(ByVal cultureID As Global.System.String, ByVal name As Global.System.String, ByVal modifiedDate As Global.System.DateTime) As Culture
			Dim culture As New Culture()
			culture.CultureID = cultureID
			culture.Name = name
			culture.ModifiedDate = modifiedDate
			Return culture
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property CultureID() As Global.System.String
			Get
				Return _CultureID
			End Get
			Set(ByVal value As System.String)
				If _CultureID <> value Then
					OnCultureIDChanging(value)
					ReportPropertyChanging("CultureID")
					_CultureID = StructuralObject.SetValidValue(value, False)
					ReportPropertyChanged("CultureID")
					OnCultureIDChanged()
				End If
			End Set
		End Property
		Private _CultureID As Global.System.String
		Partial Private Sub OnCultureIDChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnCultureIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Name() As Global.System.String
			Get
				Return _Name
			End Get
			Set(ByVal value As System.String)
				OnNameChanging(value)
				ReportPropertyChanging("Name")
				_Name = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Name")
				OnNameChanged()
			End Set
		End Property
		Private _Name As Global.System.String
		Partial Private Sub OnNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductModelProductDescriptionCulture_Culture_CultureID", "ProductModelProductDescriptionCulture")> _
		Public Property ProductModelProductDescriptionCulture() As EntityCollection(Of ProductModelProductDescriptionCulture)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of ProductModelProductDescriptionCulture)("AdventureWorksModel.FK_ProductModelProductDescriptionCulture_Culture_CultureID", "ProductModelProductDescriptionCulture")
			End Get
			Set(ByVal value As EntityCollection(Of ProductModelProductDescriptionCulture))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ProductModelProductDescriptionCulture)("AdventureWorksModel.FK_ProductModelProductDescriptionCulture_Culture_CultureID", "ProductModelProductDescriptionCulture", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="Currency"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class Currency
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new Currency object.
		''' </summary>
		''' <param name="currencyCode">Initial value of the CurrencyCode property.</param>
		''' <param name="name">Initial value of the Name property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateCurrency(ByVal currencyCode As Global.System.String, ByVal name As Global.System.String, ByVal modifiedDate As Global.System.DateTime) As Currency
			Dim currency As New Currency()
			currency.CurrencyCode = currencyCode
			currency.Name = name
			currency.ModifiedDate = modifiedDate
			Return currency
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property CurrencyCode() As Global.System.String
			Get
				Return _CurrencyCode
			End Get
			Set(ByVal value As System.String)
				If _CurrencyCode <> value Then
					OnCurrencyCodeChanging(value)
					ReportPropertyChanging("CurrencyCode")
					_CurrencyCode = StructuralObject.SetValidValue(value, False)
					ReportPropertyChanged("CurrencyCode")
					OnCurrencyCodeChanged()
				End If
			End Set
		End Property
		Private _CurrencyCode As Global.System.String
		Partial Private Sub OnCurrencyCodeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnCurrencyCodeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Name() As Global.System.String
			Get
				Return _Name
			End Get
			Set(ByVal value As System.String)
				OnNameChanging(value)
				ReportPropertyChanging("Name")
				_Name = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Name")
				OnNameChanged()
			End Set
		End Property
		Private _Name As Global.System.String
		Partial Private Sub OnNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_CountryRegionCurrency_Currency_CurrencyCode", "CountryRegionCurrency")> _
		Public Property CountryRegionCurrency() As EntityCollection(Of CountryRegionCurrency)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of CountryRegionCurrency)("AdventureWorksModel.FK_CountryRegionCurrency_Currency_CurrencyCode", "CountryRegionCurrency")
			End Get
			Set(ByVal value As EntityCollection(Of CountryRegionCurrency))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of CountryRegionCurrency)("AdventureWorksModel.FK_CountryRegionCurrency_Currency_CurrencyCode", "CountryRegionCurrency", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_CurrencyRate_Currency_FromCurrencyCode", "CurrencyRate")> _
		Public Property CurrencyRate() As EntityCollection(Of CurrencyRate)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of CurrencyRate)("AdventureWorksModel.FK_CurrencyRate_Currency_FromCurrencyCode", "CurrencyRate")
			End Get
			Set(ByVal value As EntityCollection(Of CurrencyRate))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of CurrencyRate)("AdventureWorksModel.FK_CurrencyRate_Currency_FromCurrencyCode", "CurrencyRate", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_CurrencyRate_Currency_ToCurrencyCode", "CurrencyRate")> _
		Public Property CurrencyRate1() As EntityCollection(Of CurrencyRate)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of CurrencyRate)("AdventureWorksModel.FK_CurrencyRate_Currency_ToCurrencyCode", "CurrencyRate")
			End Get
			Set(ByVal value As EntityCollection(Of CurrencyRate))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of CurrencyRate)("AdventureWorksModel.FK_CurrencyRate_Currency_ToCurrencyCode", "CurrencyRate", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="CurrencyRate"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class CurrencyRate
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new CurrencyRate object.
		''' </summary>
		''' <param name="currencyRateID">Initial value of the CurrencyRateID property.</param>
		''' <param name="currencyRateDate">Initial value of the CurrencyRateDate property.</param>
		''' <param name="fromCurrencyCode">Initial value of the FromCurrencyCode property.</param>
		''' <param name="toCurrencyCode">Initial value of the ToCurrencyCode property.</param>
		''' <param name="averageRate">Initial value of the AverageRate property.</param>
		''' <param name="endOfDayRate">Initial value of the EndOfDayRate property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateCurrencyRate(ByVal currencyRateID As Global.System.Int32, ByVal currencyRateDate As Global.System.DateTime, ByVal fromCurrencyCode As Global.System.String, ByVal toCurrencyCode As Global.System.String, ByVal averageRate As Global.System.Decimal, ByVal endOfDayRate As Global.System.Decimal, ByVal modifiedDate As Global.System.DateTime) As CurrencyRate
			Dim currencyRate As New CurrencyRate()
			currencyRate.CurrencyRateID = currencyRateID
			currencyRate.CurrencyRateDate = currencyRateDate
			currencyRate.FromCurrencyCode = fromCurrencyCode
			currencyRate.ToCurrencyCode = toCurrencyCode
			currencyRate.AverageRate = averageRate
			currencyRate.EndOfDayRate = endOfDayRate
			currencyRate.ModifiedDate = modifiedDate
			Return currencyRate
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property CurrencyRateID() As Global.System.Int32
			Get
				Return _CurrencyRateID
			End Get
			Set(ByVal value As System.Int32)
				If _CurrencyRateID <> value Then
					OnCurrencyRateIDChanging(value)
					ReportPropertyChanging("CurrencyRateID")
					_CurrencyRateID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("CurrencyRateID")
					OnCurrencyRateIDChanged()
				End If
			End Set
		End Property
		Private _CurrencyRateID As Global.System.Int32
		Partial Private Sub OnCurrencyRateIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnCurrencyRateIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property CurrencyRateDate() As Global.System.DateTime
			Get
				Return _CurrencyRateDate
			End Get
			Set(ByVal value As System.DateTime)
				OnCurrencyRateDateChanging(value)
				ReportPropertyChanging("CurrencyRateDate")
				_CurrencyRateDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("CurrencyRateDate")
				OnCurrencyRateDateChanged()
			End Set
		End Property
		Private _CurrencyRateDate As Global.System.DateTime
		Partial Private Sub OnCurrencyRateDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnCurrencyRateDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property FromCurrencyCode() As Global.System.String
			Get
				Return _FromCurrencyCode
			End Get
			Set(ByVal value As System.String)
				OnFromCurrencyCodeChanging(value)
				ReportPropertyChanging("FromCurrencyCode")
				_FromCurrencyCode = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("FromCurrencyCode")
				OnFromCurrencyCodeChanged()
			End Set
		End Property
		Private _FromCurrencyCode As Global.System.String
		Partial Private Sub OnFromCurrencyCodeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnFromCurrencyCodeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ToCurrencyCode() As Global.System.String
			Get
				Return _ToCurrencyCode
			End Get
			Set(ByVal value As System.String)
				OnToCurrencyCodeChanging(value)
				ReportPropertyChanging("ToCurrencyCode")
				_ToCurrencyCode = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("ToCurrencyCode")
				OnToCurrencyCodeChanged()
			End Set
		End Property
		Private _ToCurrencyCode As Global.System.String
		Partial Private Sub OnToCurrencyCodeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnToCurrencyCodeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property AverageRate() As Global.System.Decimal
			Get
				Return _AverageRate
			End Get
			Set(ByVal value As System.Decimal)
				OnAverageRateChanging(value)
				ReportPropertyChanging("AverageRate")
				_AverageRate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("AverageRate")
				OnAverageRateChanged()
			End Set
		End Property
		Private _AverageRate As Global.System.Decimal
		Partial Private Sub OnAverageRateChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnAverageRateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property EndOfDayRate() As Global.System.Decimal
			Get
				Return _EndOfDayRate
			End Get
			Set(ByVal value As System.Decimal)
				OnEndOfDayRateChanging(value)
				ReportPropertyChanging("EndOfDayRate")
				_EndOfDayRate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("EndOfDayRate")
				OnEndOfDayRateChanged()
			End Set
		End Property
		Private _EndOfDayRate As Global.System.Decimal
		Partial Private Sub OnEndOfDayRateChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnEndOfDayRateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_CurrencyRate_Currency_FromCurrencyCode", "Currency")> _
		Public Property Currency() As Currency
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Currency)("AdventureWorksModel.FK_CurrencyRate_Currency_FromCurrencyCode", "Currency").Value
			End Get
			Set(ByVal value As Currency)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Currency)("AdventureWorksModel.FK_CurrencyRate_Currency_FromCurrencyCode", "Currency").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property CurrencyReference() As EntityReference(Of Currency)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Currency)("AdventureWorksModel.FK_CurrencyRate_Currency_FromCurrencyCode", "Currency")
			End Get
			Set(ByVal value As EntityReference(Of Currency))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Currency)("AdventureWorksModel.FK_CurrencyRate_Currency_FromCurrencyCode", "Currency", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_CurrencyRate_Currency_ToCurrencyCode", "Currency")> _
		Public Property Currency1() As Currency
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Currency)("AdventureWorksModel.FK_CurrencyRate_Currency_ToCurrencyCode", "Currency").Value
			End Get
			Set(ByVal value As Currency)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Currency)("AdventureWorksModel.FK_CurrencyRate_Currency_ToCurrencyCode", "Currency").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property Currency1Reference() As EntityReference(Of Currency)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Currency)("AdventureWorksModel.FK_CurrencyRate_Currency_ToCurrencyCode", "Currency")
			End Get
			Set(ByVal value As EntityReference(Of Currency))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Currency)("AdventureWorksModel.FK_CurrencyRate_Currency_ToCurrencyCode", "Currency", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderHeader_CurrencyRate_CurrencyRateID", "SalesOrderHeader")> _
		Public Property SalesOrderHeader() As EntityCollection(Of SalesOrderHeader)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderHeader_CurrencyRate_CurrencyRateID", "SalesOrderHeader")
			End Get
			Set(ByVal value As EntityCollection(Of SalesOrderHeader))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderHeader_CurrencyRate_CurrencyRateID", "SalesOrderHeader", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="Customer"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class Customer
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new Customer object.
		''' </summary>
		''' <param name="customerID">Initial value of the CustomerID property.</param>
		''' <param name="accountNumber">Initial value of the AccountNumber property.</param>
		''' <param name="customerType">Initial value of the CustomerType property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateCustomer(ByVal customerID As Global.System.Int32, ByVal accountNumber As Global.System.String, ByVal customerType As Global.System.String, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As Customer
			Dim customer As New Customer()
			customer.CustomerID = customerID
			customer.AccountNumber = accountNumber
			customer.CustomerType = customerType
			customer.rowguid = rowguid
			customer.ModifiedDate = modifiedDate
			Return customer
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property CustomerID() As Global.System.Int32
			Get
				Return _CustomerID
			End Get
			Set(ByVal value As System.Int32)
				If _CustomerID <> value Then
					OnCustomerIDChanging(value)
					ReportPropertyChanging("CustomerID")
					_CustomerID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("CustomerID")
					OnCustomerIDChanged()
				End If
			End Set
		End Property
		Private _CustomerID As Global.System.Int32
		Partial Private Sub OnCustomerIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnCustomerIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property TerritoryID() As Global.System.Int32?
			Get
				Return _TerritoryID
			End Get
			Set(ByVal value? As System.Int32)
				OnTerritoryIDChanging(value)
				ReportPropertyChanging("TerritoryID")
				_TerritoryID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("TerritoryID")
				OnTerritoryIDChanged()
			End Set
		End Property
		Private _TerritoryID? As Global.System.Int32
		Partial Private Sub OnTerritoryIDChanging(ByVal value? As Global.System.Int32)
		End Sub
		Partial Private Sub OnTerritoryIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property AccountNumber() As Global.System.String
			Get
				Return _AccountNumber
			End Get
			Set(ByVal value As System.String)
				OnAccountNumberChanging(value)
				ReportPropertyChanging("AccountNumber")
				_AccountNumber = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("AccountNumber")
				OnAccountNumberChanged()
			End Set
		End Property
		Private _AccountNumber As Global.System.String
		Partial Private Sub OnAccountNumberChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnAccountNumberChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property CustomerType() As Global.System.String
			Get
				Return _CustomerType
			End Get
			Set(ByVal value As System.String)
				OnCustomerTypeChanging(value)
				ReportPropertyChanging("CustomerType")
				_CustomerType = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("CustomerType")
				OnCustomerTypeChanged()
			End Set
		End Property
		Private _CustomerType As Global.System.String
		Partial Private Sub OnCustomerTypeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnCustomerTypeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Customer_SalesTerritory_TerritoryID", "SalesTerritory")> _
		Public Property SalesTerritory() As SalesTerritory
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesTerritory)("AdventureWorksModel.FK_Customer_SalesTerritory_TerritoryID", "SalesTerritory").Value
			End Get
			Set(ByVal value As SalesTerritory)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SalesTerritory)("AdventureWorksModel.FK_Customer_SalesTerritory_TerritoryID", "SalesTerritory").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property SalesTerritoryReference() As EntityReference(Of SalesTerritory)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesTerritory)("AdventureWorksModel.FK_Customer_SalesTerritory_TerritoryID", "SalesTerritory")
			End Get
			Set(ByVal value As EntityReference(Of SalesTerritory))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of SalesTerritory)("AdventureWorksModel.FK_Customer_SalesTerritory_TerritoryID", "SalesTerritory", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_CustomerAddress_Customer_CustomerID", "CustomerAddress")> _
		Public Property CustomerAddress() As EntityCollection(Of CustomerAddress)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of CustomerAddress)("AdventureWorksModel.FK_CustomerAddress_Customer_CustomerID", "CustomerAddress")
			End Get
			Set(ByVal value As EntityCollection(Of CustomerAddress))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of CustomerAddress)("AdventureWorksModel.FK_CustomerAddress_Customer_CustomerID", "CustomerAddress", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Individual_Customer_CustomerID", "Individual")> _
		Public Property Individual() As Individual
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Individual)("AdventureWorksModel.FK_Individual_Customer_CustomerID", "Individual").Value
			End Get
			Set(ByVal value As Individual)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Individual)("AdventureWorksModel.FK_Individual_Customer_CustomerID", "Individual").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property IndividualReference() As EntityReference(Of Individual)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Individual)("AdventureWorksModel.FK_Individual_Customer_CustomerID", "Individual")
			End Get
			Set(ByVal value As EntityReference(Of Individual))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Individual)("AdventureWorksModel.FK_Individual_Customer_CustomerID", "Individual", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderHeader_Customer_CustomerID", "SalesOrderHeader")> _
		Public Property SalesOrderHeader() As EntityCollection(Of SalesOrderHeader)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderHeader_Customer_CustomerID", "SalesOrderHeader")
			End Get
			Set(ByVal value As EntityCollection(Of SalesOrderHeader))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderHeader_Customer_CustomerID", "SalesOrderHeader", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Store_Customer_CustomerID", "Store")> _
		Public Property Store() As Store
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Store)("AdventureWorksModel.FK_Store_Customer_CustomerID", "Store").Value
			End Get
			Set(ByVal value As Store)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Store)("AdventureWorksModel.FK_Store_Customer_CustomerID", "Store").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property StoreReference() As EntityReference(Of Store)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Store)("AdventureWorksModel.FK_Store_Customer_CustomerID", "Store")
			End Get
			Set(ByVal value As EntityReference(Of Store))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Store)("AdventureWorksModel.FK_Store_Customer_CustomerID", "Store", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="CustomerAddress"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class CustomerAddress
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new CustomerAddress object.
		''' </summary>
		''' <param name="customerID">Initial value of the CustomerID property.</param>
		''' <param name="addressID">Initial value of the AddressID property.</param>
		''' <param name="addressTypeID">Initial value of the AddressTypeID property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateCustomerAddress(ByVal customerID As Global.System.Int32, ByVal addressID As Global.System.Int32, ByVal addressTypeID As Global.System.Int32, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As CustomerAddress
			Dim customerAddress As New CustomerAddress()
			customerAddress.CustomerID = customerID
			customerAddress.AddressID = addressID
			customerAddress.AddressTypeID = addressTypeID
			customerAddress.rowguid = rowguid
			customerAddress.ModifiedDate = modifiedDate
			Return customerAddress
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property CustomerID() As Global.System.Int32
			Get
				Return _CustomerID
			End Get
			Set(ByVal value As System.Int32)
				If _CustomerID <> value Then
					OnCustomerIDChanging(value)
					ReportPropertyChanging("CustomerID")
					_CustomerID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("CustomerID")
					OnCustomerIDChanged()
				End If
			End Set
		End Property
		Private _CustomerID As Global.System.Int32
		Partial Private Sub OnCustomerIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnCustomerIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property AddressID() As Global.System.Int32
			Get
				Return _AddressID
			End Get
			Set(ByVal value As System.Int32)
				If _AddressID <> value Then
					OnAddressIDChanging(value)
					ReportPropertyChanging("AddressID")
					_AddressID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("AddressID")
					OnAddressIDChanged()
				End If
			End Set
		End Property
		Private _AddressID As Global.System.Int32
		Partial Private Sub OnAddressIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnAddressIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property AddressTypeID() As Global.System.Int32
			Get
				Return _AddressTypeID
			End Get
			Set(ByVal value As System.Int32)
				OnAddressTypeIDChanging(value)
				ReportPropertyChanging("AddressTypeID")
				_AddressTypeID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("AddressTypeID")
				OnAddressTypeIDChanged()
			End Set
		End Property
		Private _AddressTypeID As Global.System.Int32
		Partial Private Sub OnAddressTypeIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnAddressTypeIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_CustomerAddress_Address_AddressID", "Address")> _
		Public Property Address() As Address
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Address)("AdventureWorksModel.FK_CustomerAddress_Address_AddressID", "Address").Value
			End Get
			Set(ByVal value As Address)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Address)("AdventureWorksModel.FK_CustomerAddress_Address_AddressID", "Address").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property AddressReference() As EntityReference(Of Address)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Address)("AdventureWorksModel.FK_CustomerAddress_Address_AddressID", "Address")
			End Get
			Set(ByVal value As EntityReference(Of Address))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Address)("AdventureWorksModel.FK_CustomerAddress_Address_AddressID", "Address", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_CustomerAddress_AddressType_AddressTypeID", "AddressType")> _
		Public Property AddressType() As AddressType
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of AddressType)("AdventureWorksModel.FK_CustomerAddress_AddressType_AddressTypeID", "AddressType").Value
			End Get
			Set(ByVal value As AddressType)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of AddressType)("AdventureWorksModel.FK_CustomerAddress_AddressType_AddressTypeID", "AddressType").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property AddressTypeReference() As EntityReference(Of AddressType)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of AddressType)("AdventureWorksModel.FK_CustomerAddress_AddressType_AddressTypeID", "AddressType")
			End Get
			Set(ByVal value As EntityReference(Of AddressType))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of AddressType)("AdventureWorksModel.FK_CustomerAddress_AddressType_AddressTypeID", "AddressType", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_CustomerAddress_Customer_CustomerID", "Customer")> _
		Public Property Customer() As Customer
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Customer)("AdventureWorksModel.FK_CustomerAddress_Customer_CustomerID", "Customer").Value
			End Get
			Set(ByVal value As Customer)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Customer)("AdventureWorksModel.FK_CustomerAddress_Customer_CustomerID", "Customer").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property CustomerReference() As EntityReference(Of Customer)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Customer)("AdventureWorksModel.FK_CustomerAddress_Customer_CustomerID", "Customer")
			End Get
			Set(ByVal value As EntityReference(Of Customer))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Customer)("AdventureWorksModel.FK_CustomerAddress_Customer_CustomerID", "Customer", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="DatabaseLog"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class DatabaseLog
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new DatabaseLog object.
		''' </summary>
		''' <param name="databaseLogID">Initial value of the DatabaseLogID property.</param>
		''' <param name="postTime">Initial value of the PostTime property.</param>
		''' <param name="databaseUser">Initial value of the DatabaseUser property.</param>
		''' <param name="event">Initial value of the Event property.</param>
		''' <param name="tSQL">Initial value of the TSQL property.</param>
		''' <param name="xmlEvent">Initial value of the XmlEvent property.</param>
		Public Shared Function CreateDatabaseLog(ByVal databaseLogID As Global.System.Int32, ByVal postTime As Global.System.DateTime, ByVal databaseUser As Global.System.String, ByVal [event] As Global.System.String, ByVal tSQL As Global.System.String, ByVal xmlEvent As Global.System.String) As DatabaseLog
			Dim databaseLog As New DatabaseLog()
			databaseLog.DatabaseLogID = databaseLogID
			databaseLog.PostTime = postTime
			databaseLog.DatabaseUser = databaseUser
			databaseLog.Event = [event]
			databaseLog.TSQL = tSQL
			databaseLog.XmlEvent = xmlEvent
			Return databaseLog
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property DatabaseLogID() As Global.System.Int32
			Get
				Return _DatabaseLogID
			End Get
			Set(ByVal value As System.Int32)
				If _DatabaseLogID <> value Then
					OnDatabaseLogIDChanging(value)
					ReportPropertyChanging("DatabaseLogID")
					_DatabaseLogID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("DatabaseLogID")
					OnDatabaseLogIDChanged()
				End If
			End Set
		End Property
		Private _DatabaseLogID As Global.System.Int32
		Partial Private Sub OnDatabaseLogIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnDatabaseLogIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property PostTime() As Global.System.DateTime
			Get
				Return _PostTime
			End Get
			Set(ByVal value As System.DateTime)
				OnPostTimeChanging(value)
				ReportPropertyChanging("PostTime")
				_PostTime = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("PostTime")
				OnPostTimeChanged()
			End Set
		End Property
		Private _PostTime As Global.System.DateTime
		Partial Private Sub OnPostTimeChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnPostTimeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property DatabaseUser() As Global.System.String
			Get
				Return _DatabaseUser
			End Get
			Set(ByVal value As System.String)
				OnDatabaseUserChanging(value)
				ReportPropertyChanging("DatabaseUser")
				_DatabaseUser = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("DatabaseUser")
				OnDatabaseUserChanged()
			End Set
		End Property
		Private _DatabaseUser As Global.System.String
		Partial Private Sub OnDatabaseUserChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnDatabaseUserChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property [Event]() As Global.System.String
			Get
				Return _Event
			End Get
			Set(ByVal value As System.String)
				OnEventChanging(value)
				ReportPropertyChanging("Event")
				_Event = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Event")
				OnEventChanged()
			End Set
		End Property
		Private _Event As Global.System.String
		Partial Private Sub OnEventChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnEventChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property Schema() As Global.System.String
			Get
				Return _Schema
			End Get
			Set(ByVal value As System.String)
				OnSchemaChanging(value)
				ReportPropertyChanging("Schema")
				_Schema = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("Schema")
				OnSchemaChanged()
			End Set
		End Property
		Private _Schema As Global.System.String
		Partial Private Sub OnSchemaChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnSchemaChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property [Object]() As Global.System.String
			Get
				Return _Object
			End Get
			Set(ByVal value As System.String)
				OnObjectChanging(value)
				ReportPropertyChanging("Object")
				_Object = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("Object")
				OnObjectChanged()
			End Set
		End Property
		Private _Object As Global.System.String
		Partial Private Sub OnObjectChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnObjectChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property TSQL() As Global.System.String
			Get
				Return _TSQL
			End Get
			Set(ByVal value As System.String)
				OnTSQLChanging(value)
				ReportPropertyChanging("TSQL")
				_TSQL = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("TSQL")
				OnTSQLChanged()
			End Set
		End Property
		Private _TSQL As Global.System.String
		Partial Private Sub OnTSQLChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnTSQLChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property XmlEvent() As Global.System.String
			Get
				Return _XmlEvent
			End Get
			Set(ByVal value As System.String)
				OnXmlEventChanging(value)
				ReportPropertyChanging("XmlEvent")
				_XmlEvent = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("XmlEvent")
				OnXmlEventChanged()
			End Set
		End Property
		Private _XmlEvent As Global.System.String
		Partial Private Sub OnXmlEventChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnXmlEventChanged()
		End Sub

		#End Region

	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="Department"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class Department
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new Department object.
		''' </summary>
		''' <param name="departmentID">Initial value of the DepartmentID property.</param>
		''' <param name="name">Initial value of the Name property.</param>
		''' <param name="groupName">Initial value of the GroupName property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateDepartment(ByVal departmentID As Global.System.Int16, ByVal name As Global.System.String, ByVal groupName As Global.System.String, ByVal modifiedDate As Global.System.DateTime) As Department
			Dim department As New Department()
			department.DepartmentID = departmentID
			department.Name = name
			department.GroupName = groupName
			department.ModifiedDate = modifiedDate
			Return department
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property DepartmentID() As Global.System.Int16
			Get
				Return _DepartmentID
			End Get
			Set(ByVal value As System.Int16)
				If _DepartmentID <> value Then
					OnDepartmentIDChanging(value)
					ReportPropertyChanging("DepartmentID")
					_DepartmentID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("DepartmentID")
					OnDepartmentIDChanged()
				End If
			End Set
		End Property
		Private _DepartmentID As Global.System.Int16
		Partial Private Sub OnDepartmentIDChanging(ByVal value As Global.System.Int16)
		End Sub
		Partial Private Sub OnDepartmentIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Name() As Global.System.String
			Get
				Return _Name
			End Get
			Set(ByVal value As System.String)
				OnNameChanging(value)
				ReportPropertyChanging("Name")
				_Name = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Name")
				OnNameChanged()
			End Set
		End Property
		Private _Name As Global.System.String
		Partial Private Sub OnNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property GroupName() As Global.System.String
			Get
				Return _GroupName
			End Get
			Set(ByVal value As System.String)
				OnGroupNameChanging(value)
				ReportPropertyChanging("GroupName")
				_GroupName = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("GroupName")
				OnGroupNameChanged()
			End Set
		End Property
		Private _GroupName As Global.System.String
		Partial Private Sub OnGroupNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnGroupNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_EmployeeDepartmentHistory_Department_DepartmentID", "EmployeeDepartmentHistory")> _
		Public Property EmployeeDepartmentHistory() As EntityCollection(Of EmployeeDepartmentHistory)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of EmployeeDepartmentHistory)("AdventureWorksModel.FK_EmployeeDepartmentHistory_Department_DepartmentID", "EmployeeDepartmentHistory")
			End Get
			Set(ByVal value As EntityCollection(Of EmployeeDepartmentHistory))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of EmployeeDepartmentHistory)("AdventureWorksModel.FK_EmployeeDepartmentHistory_Department_DepartmentID", "EmployeeDepartmentHistory", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="Document"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class Document
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new Document object.
		''' </summary>
		''' <param name="documentID">Initial value of the DocumentID property.</param>
		''' <param name="title">Initial value of the Title property.</param>
		''' <param name="fileName">Initial value of the FileName property.</param>
		''' <param name="fileExtension">Initial value of the FileExtension property.</param>
		''' <param name="revision">Initial value of the Revision property.</param>
		''' <param name="changeNumber">Initial value of the ChangeNumber property.</param>
		''' <param name="status">Initial value of the Status property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateDocument(ByVal documentID As Global.System.Int32, ByVal title As Global.System.String, ByVal fileName As Global.System.String, ByVal fileExtension As Global.System.String, ByVal revision As Global.System.String, ByVal changeNumber As Global.System.Int32, ByVal status As Global.System.Byte, ByVal modifiedDate As Global.System.DateTime) As Document
			Dim document As New Document()
			document.DocumentID = documentID
			document.Title = title
			document.FileName = fileName
			document.FileExtension = fileExtension
			document.Revision = revision
			document.ChangeNumber = changeNumber
			document.Status = status
			document.ModifiedDate = modifiedDate
			Return document
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property DocumentID() As Global.System.Int32
			Get
				Return _DocumentID
			End Get
			Set(ByVal value As System.Int32)
				If _DocumentID <> value Then
					OnDocumentIDChanging(value)
					ReportPropertyChanging("DocumentID")
					_DocumentID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("DocumentID")
					OnDocumentIDChanged()
				End If
			End Set
		End Property
		Private _DocumentID As Global.System.Int32
		Partial Private Sub OnDocumentIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnDocumentIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Title() As Global.System.String
			Get
				Return _Title
			End Get
			Set(ByVal value As System.String)
				OnTitleChanging(value)
				ReportPropertyChanging("Title")
				_Title = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Title")
				OnTitleChanged()
			End Set
		End Property
		Private _Title As Global.System.String
		Partial Private Sub OnTitleChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnTitleChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property FileName() As Global.System.String
			Get
				Return _FileName
			End Get
			Set(ByVal value As System.String)
				OnFileNameChanging(value)
				ReportPropertyChanging("FileName")
				_FileName = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("FileName")
				OnFileNameChanged()
			End Set
		End Property
		Private _FileName As Global.System.String
		Partial Private Sub OnFileNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnFileNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property FileExtension() As Global.System.String
			Get
				Return _FileExtension
			End Get
			Set(ByVal value As System.String)
				OnFileExtensionChanging(value)
				ReportPropertyChanging("FileExtension")
				_FileExtension = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("FileExtension")
				OnFileExtensionChanged()
			End Set
		End Property
		Private _FileExtension As Global.System.String
		Partial Private Sub OnFileExtensionChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnFileExtensionChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Revision() As Global.System.String
			Get
				Return _Revision
			End Get
			Set(ByVal value As System.String)
				OnRevisionChanging(value)
				ReportPropertyChanging("Revision")
				_Revision = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Revision")
				OnRevisionChanged()
			End Set
		End Property
		Private _Revision As Global.System.String
		Partial Private Sub OnRevisionChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnRevisionChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ChangeNumber() As Global.System.Int32
			Get
				Return _ChangeNumber
			End Get
			Set(ByVal value As System.Int32)
				OnChangeNumberChanging(value)
				ReportPropertyChanging("ChangeNumber")
				_ChangeNumber = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ChangeNumber")
				OnChangeNumberChanged()
			End Set
		End Property
		Private _ChangeNumber As Global.System.Int32
		Partial Private Sub OnChangeNumberChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnChangeNumberChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Status() As Global.System.Byte
			Get
				Return _Status
			End Get
			Set(ByVal value As System.Byte)
				OnStatusChanging(value)
				ReportPropertyChanging("Status")
				_Status = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("Status")
				OnStatusChanged()
			End Set
		End Property
		Private _Status As Global.System.Byte
		Partial Private Sub OnStatusChanging(ByVal value As Global.System.Byte)
		End Sub
		Partial Private Sub OnStatusChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property DocumentSummary() As Global.System.String
			Get
				Return _DocumentSummary
			End Get
			Set(ByVal value As System.String)
				OnDocumentSummaryChanging(value)
				ReportPropertyChanging("DocumentSummary")
				_DocumentSummary = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("DocumentSummary")
				OnDocumentSummaryChanged()
			End Set
		End Property
		Private _DocumentSummary As Global.System.String
		Partial Private Sub OnDocumentSummaryChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnDocumentSummaryChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property Document1() As Global.System.Byte()
			Get
				Return StructuralObject.GetValidValue(_Document1)
			End Get
			Set(ByVal value As System.Byte())
				OnDocument1Changing(value)
				ReportPropertyChanging("Document1")
				_Document1 = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("Document1")
				OnDocument1Changed()
			End Set
		End Property
		Private _Document1() As Global.System.Byte
		Partial Private Sub OnDocument1Changing(ByVal value() As Global.System.Byte)
		End Sub
		Partial Private Sub OnDocument1Changed()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductDocument_Document_DocumentID", "ProductDocument")> _
		Public Property ProductDocument() As EntityCollection(Of ProductDocument)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of ProductDocument)("AdventureWorksModel.FK_ProductDocument_Document_DocumentID", "ProductDocument")
			End Get
			Set(ByVal value As EntityCollection(Of ProductDocument))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ProductDocument)("AdventureWorksModel.FK_ProductDocument_Document_DocumentID", "ProductDocument", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="Employee"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class Employee
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new Employee object.
		''' </summary>
		''' <param name="employeeID">Initial value of the EmployeeID property.</param>
		''' <param name="nationalIDNumber">Initial value of the NationalIDNumber property.</param>
		''' <param name="contactID">Initial value of the ContactID property.</param>
		''' <param name="loginID">Initial value of the LoginID property.</param>
		''' <param name="title">Initial value of the Title property.</param>
		''' <param name="birthDate">Initial value of the BirthDate property.</param>
		''' <param name="maritalStatus">Initial value of the MaritalStatus property.</param>
		''' <param name="gender">Initial value of the Gender property.</param>
		''' <param name="hireDate">Initial value of the HireDate property.</param>
		''' <param name="salariedFlag">Initial value of the SalariedFlag property.</param>
		''' <param name="vacationHours">Initial value of the VacationHours property.</param>
		''' <param name="sickLeaveHours">Initial value of the SickLeaveHours property.</param>
		''' <param name="currentFlag">Initial value of the CurrentFlag property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateEmployee(ByVal employeeID As Global.System.Int32, ByVal nationalIDNumber As Global.System.String, ByVal contactID As Global.System.Int32, ByVal loginID As Global.System.String, ByVal title As Global.System.String, ByVal birthDate As Global.System.DateTime, ByVal maritalStatus As Global.System.String, ByVal gender As Global.System.String, ByVal hireDate As Global.System.DateTime, ByVal salariedFlag As Global.System.Boolean, ByVal vacationHours As Global.System.Int16, ByVal sickLeaveHours As Global.System.Int16, ByVal currentFlag As Global.System.Boolean, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As Employee
			Dim employee As New Employee()
			employee.EmployeeID = employeeID
			employee.NationalIDNumber = nationalIDNumber
			employee.ContactID = contactID
			employee.LoginID = loginID
			employee.Title = title
			employee.BirthDate = birthDate
			employee.MaritalStatus = maritalStatus
			employee.Gender = gender
			employee.HireDate = hireDate
			employee.SalariedFlag = salariedFlag
			employee.VacationHours = vacationHours
			employee.SickLeaveHours = sickLeaveHours
			employee.CurrentFlag = currentFlag
			employee.rowguid = rowguid
			employee.ModifiedDate = modifiedDate
			Return employee
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property EmployeeID() As Global.System.Int32
			Get
				Return _EmployeeID
			End Get
			Set(ByVal value As System.Int32)
				If _EmployeeID <> value Then
					OnEmployeeIDChanging(value)
					ReportPropertyChanging("EmployeeID")
					_EmployeeID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("EmployeeID")
					OnEmployeeIDChanged()
				End If
			End Set
		End Property
		Private _EmployeeID As Global.System.Int32
		Partial Private Sub OnEmployeeIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnEmployeeIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property NationalIDNumber() As Global.System.String
			Get
				Return _NationalIDNumber
			End Get
			Set(ByVal value As System.String)
				OnNationalIDNumberChanging(value)
				ReportPropertyChanging("NationalIDNumber")
				_NationalIDNumber = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("NationalIDNumber")
				OnNationalIDNumberChanged()
			End Set
		End Property
		Private _NationalIDNumber As Global.System.String
		Partial Private Sub OnNationalIDNumberChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnNationalIDNumberChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ContactID() As Global.System.Int32
			Get
				Return _ContactID
			End Get
			Set(ByVal value As System.Int32)
				OnContactIDChanging(value)
				ReportPropertyChanging("ContactID")
				_ContactID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ContactID")
				OnContactIDChanged()
			End Set
		End Property
		Private _ContactID As Global.System.Int32
		Partial Private Sub OnContactIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnContactIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property LoginID() As Global.System.String
			Get
				Return _LoginID
			End Get
			Set(ByVal value As System.String)
				OnLoginIDChanging(value)
				ReportPropertyChanging("LoginID")
				_LoginID = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("LoginID")
				OnLoginIDChanged()
			End Set
		End Property
		Private _LoginID As Global.System.String
		Partial Private Sub OnLoginIDChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnLoginIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property ManagerID() As Global.System.Int32?
			Get
				Return _ManagerID
			End Get
			Set(ByVal value? As System.Int32)
				OnManagerIDChanging(value)
				ReportPropertyChanging("ManagerID")
				_ManagerID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ManagerID")
				OnManagerIDChanged()
			End Set
		End Property
		Private _ManagerID? As Global.System.Int32
		Partial Private Sub OnManagerIDChanging(ByVal value? As Global.System.Int32)
		End Sub
		Partial Private Sub OnManagerIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Title() As Global.System.String
			Get
				Return _Title
			End Get
			Set(ByVal value As System.String)
				OnTitleChanging(value)
				ReportPropertyChanging("Title")
				_Title = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Title")
				OnTitleChanged()
			End Set
		End Property
		Private _Title As Global.System.String
		Partial Private Sub OnTitleChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnTitleChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property BirthDate() As Global.System.DateTime
			Get
				Return _BirthDate
			End Get
			Set(ByVal value As System.DateTime)
				OnBirthDateChanging(value)
				ReportPropertyChanging("BirthDate")
				_BirthDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("BirthDate")
				OnBirthDateChanged()
			End Set
		End Property
		Private _BirthDate As Global.System.DateTime
		Partial Private Sub OnBirthDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnBirthDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property MaritalStatus() As Global.System.String
			Get
				Return _MaritalStatus
			End Get
			Set(ByVal value As System.String)
				OnMaritalStatusChanging(value)
				ReportPropertyChanging("MaritalStatus")
				_MaritalStatus = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("MaritalStatus")
				OnMaritalStatusChanged()
			End Set
		End Property
		Private _MaritalStatus As Global.System.String
		Partial Private Sub OnMaritalStatusChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnMaritalStatusChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Gender() As Global.System.String
			Get
				Return _Gender
			End Get
			Set(ByVal value As System.String)
				OnGenderChanging(value)
				ReportPropertyChanging("Gender")
				_Gender = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Gender")
				OnGenderChanged()
			End Set
		End Property
		Private _Gender As Global.System.String
		Partial Private Sub OnGenderChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnGenderChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property HireDate() As Global.System.DateTime
			Get
				Return _HireDate
			End Get
			Set(ByVal value As System.DateTime)
				OnHireDateChanging(value)
				ReportPropertyChanging("HireDate")
				_HireDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("HireDate")
				OnHireDateChanged()
			End Set
		End Property
		Private _HireDate As Global.System.DateTime
		Partial Private Sub OnHireDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnHireDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property SalariedFlag() As Global.System.Boolean
			Get
				Return _SalariedFlag
			End Get
			Set(ByVal value As System.Boolean)
				OnSalariedFlagChanging(value)
				ReportPropertyChanging("SalariedFlag")
				_SalariedFlag = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("SalariedFlag")
				OnSalariedFlagChanged()
			End Set
		End Property
		Private _SalariedFlag As Global.System.Boolean
		Partial Private Sub OnSalariedFlagChanging(ByVal value As Global.System.Boolean)
		End Sub
		Partial Private Sub OnSalariedFlagChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property VacationHours() As Global.System.Int16
			Get
				Return _VacationHours
			End Get
			Set(ByVal value As System.Int16)
				OnVacationHoursChanging(value)
				ReportPropertyChanging("VacationHours")
				_VacationHours = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("VacationHours")
				OnVacationHoursChanged()
			End Set
		End Property
		Private _VacationHours As Global.System.Int16
		Partial Private Sub OnVacationHoursChanging(ByVal value As Global.System.Int16)
		End Sub
		Partial Private Sub OnVacationHoursChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property SickLeaveHours() As Global.System.Int16
			Get
				Return _SickLeaveHours
			End Get
			Set(ByVal value As System.Int16)
				OnSickLeaveHoursChanging(value)
				ReportPropertyChanging("SickLeaveHours")
				_SickLeaveHours = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("SickLeaveHours")
				OnSickLeaveHoursChanged()
			End Set
		End Property
		Private _SickLeaveHours As Global.System.Int16
		Partial Private Sub OnSickLeaveHoursChanging(ByVal value As Global.System.Int16)
		End Sub
		Partial Private Sub OnSickLeaveHoursChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property CurrentFlag() As Global.System.Boolean
			Get
				Return _CurrentFlag
			End Get
			Set(ByVal value As System.Boolean)
				OnCurrentFlagChanging(value)
				ReportPropertyChanging("CurrentFlag")
				_CurrentFlag = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("CurrentFlag")
				OnCurrentFlagChanged()
			End Set
		End Property
		Private _CurrentFlag As Global.System.Boolean
		Partial Private Sub OnCurrentFlagChanging(ByVal value As Global.System.Boolean)
		End Sub
		Partial Private Sub OnCurrentFlagChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Employee_Contact_ContactID", "Contact")> _
		Public Property Contact() As Contact
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Contact)("AdventureWorksModel.FK_Employee_Contact_ContactID", "Contact").Value
			End Get
			Set(ByVal value As Contact)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Contact)("AdventureWorksModel.FK_Employee_Contact_ContactID", "Contact").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ContactReference() As EntityReference(Of Contact)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Contact)("AdventureWorksModel.FK_Employee_Contact_ContactID", "Contact")
			End Get
			Set(ByVal value As EntityReference(Of Contact))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Contact)("AdventureWorksModel.FK_Employee_Contact_ContactID", "Contact", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Employee_Employee_ManagerID", "Employee1")> _
		Public Property Employee1() As EntityCollection(Of Employee)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of Employee)("AdventureWorksModel.FK_Employee_Employee_ManagerID", "Employee1")
			End Get
			Set(ByVal value As EntityCollection(Of Employee))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Employee)("AdventureWorksModel.FK_Employee_Employee_ManagerID", "Employee1", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Employee_Employee_ManagerID", "Employee")> _
		Public Property Employee2() As Employee
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Employee)("AdventureWorksModel.FK_Employee_Employee_ManagerID", "Employee").Value
			End Get
			Set(ByVal value As Employee)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Employee)("AdventureWorksModel.FK_Employee_Employee_ManagerID", "Employee").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property Employee2Reference() As EntityReference(Of Employee)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Employee)("AdventureWorksModel.FK_Employee_Employee_ManagerID", "Employee")
			End Get
			Set(ByVal value As EntityReference(Of Employee))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Employee)("AdventureWorksModel.FK_Employee_Employee_ManagerID", "Employee", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_EmployeeAddress_Employee_EmployeeID", "EmployeeAddress")> _
		Public Property EmployeeAddress() As EntityCollection(Of EmployeeAddress)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of EmployeeAddress)("AdventureWorksModel.FK_EmployeeAddress_Employee_EmployeeID", "EmployeeAddress")
			End Get
			Set(ByVal value As EntityCollection(Of EmployeeAddress))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of EmployeeAddress)("AdventureWorksModel.FK_EmployeeAddress_Employee_EmployeeID", "EmployeeAddress", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_EmployeeDepartmentHistory_Employee_EmployeeID", "EmployeeDepartmentHistory")> _
		Public Property EmployeeDepartmentHistory() As EntityCollection(Of EmployeeDepartmentHistory)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of EmployeeDepartmentHistory)("AdventureWorksModel.FK_EmployeeDepartmentHistory_Employee_EmployeeID", "EmployeeDepartmentHistory")
			End Get
			Set(ByVal value As EntityCollection(Of EmployeeDepartmentHistory))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of EmployeeDepartmentHistory)("AdventureWorksModel.FK_EmployeeDepartmentHistory_Employee_EmployeeID", "EmployeeDepartmentHistory", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_EmployeePayHistory_Employee_EmployeeID", "EmployeePayHistory")> _
		Public Property EmployeePayHistory() As EntityCollection(Of EmployeePayHistory)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of EmployeePayHistory)("AdventureWorksModel.FK_EmployeePayHistory_Employee_EmployeeID", "EmployeePayHistory")
			End Get
			Set(ByVal value As EntityCollection(Of EmployeePayHistory))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of EmployeePayHistory)("AdventureWorksModel.FK_EmployeePayHistory_Employee_EmployeeID", "EmployeePayHistory", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_JobCandidate_Employee_EmployeeID", "JobCandidate")> _
		Public Property JobCandidate() As EntityCollection(Of JobCandidate)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of JobCandidate)("AdventureWorksModel.FK_JobCandidate_Employee_EmployeeID", "JobCandidate")
			End Get
			Set(ByVal value As EntityCollection(Of JobCandidate))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of JobCandidate)("AdventureWorksModel.FK_JobCandidate_Employee_EmployeeID", "JobCandidate", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_PurchaseOrderHeader_Employee_EmployeeID", "PurchaseOrderHeader")> _
		Public Property PurchaseOrderHeader() As EntityCollection(Of PurchaseOrderHeader)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of PurchaseOrderHeader)("AdventureWorksModel.FK_PurchaseOrderHeader_Employee_EmployeeID", "PurchaseOrderHeader")
			End Get
			Set(ByVal value As EntityCollection(Of PurchaseOrderHeader))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of PurchaseOrderHeader)("AdventureWorksModel.FK_PurchaseOrderHeader_Employee_EmployeeID", "PurchaseOrderHeader", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesPerson_Employee_SalesPersonID", "SalesPerson")> _
		Public Property SalesPerson() As SalesPerson
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesPerson)("AdventureWorksModel.FK_SalesPerson_Employee_SalesPersonID", "SalesPerson").Value
			End Get
			Set(ByVal value As SalesPerson)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SalesPerson)("AdventureWorksModel.FK_SalesPerson_Employee_SalesPersonID", "SalesPerson").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property SalesPersonReference() As EntityReference(Of SalesPerson)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesPerson)("AdventureWorksModel.FK_SalesPerson_Employee_SalesPersonID", "SalesPerson")
			End Get
			Set(ByVal value As EntityReference(Of SalesPerson))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of SalesPerson)("AdventureWorksModel.FK_SalesPerson_Employee_SalesPersonID", "SalesPerson", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="EmployeeAddress"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class EmployeeAddress
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new EmployeeAddress object.
		''' </summary>
		''' <param name="employeeID">Initial value of the EmployeeID property.</param>
		''' <param name="addressID">Initial value of the AddressID property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateEmployeeAddress(ByVal employeeID As Global.System.Int32, ByVal addressID As Global.System.Int32, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As EmployeeAddress
			Dim employeeAddress As New EmployeeAddress()
			employeeAddress.EmployeeID = employeeID
			employeeAddress.AddressID = addressID
			employeeAddress.rowguid = rowguid
			employeeAddress.ModifiedDate = modifiedDate
			Return employeeAddress
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property EmployeeID() As Global.System.Int32
			Get
				Return _EmployeeID
			End Get
			Set(ByVal value As System.Int32)
				If _EmployeeID <> value Then
					OnEmployeeIDChanging(value)
					ReportPropertyChanging("EmployeeID")
					_EmployeeID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("EmployeeID")
					OnEmployeeIDChanged()
				End If
			End Set
		End Property
		Private _EmployeeID As Global.System.Int32
		Partial Private Sub OnEmployeeIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnEmployeeIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property AddressID() As Global.System.Int32
			Get
				Return _AddressID
			End Get
			Set(ByVal value As System.Int32)
				If _AddressID <> value Then
					OnAddressIDChanging(value)
					ReportPropertyChanging("AddressID")
					_AddressID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("AddressID")
					OnAddressIDChanged()
				End If
			End Set
		End Property
		Private _AddressID As Global.System.Int32
		Partial Private Sub OnAddressIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnAddressIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_EmployeeAddress_Employee_EmployeeID", "Employee")> _
		Public Property Employee() As Employee
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Employee)("AdventureWorksModel.FK_EmployeeAddress_Employee_EmployeeID", "Employee").Value
			End Get
			Set(ByVal value As Employee)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Employee)("AdventureWorksModel.FK_EmployeeAddress_Employee_EmployeeID", "Employee").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property EmployeeReference() As EntityReference(Of Employee)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Employee)("AdventureWorksModel.FK_EmployeeAddress_Employee_EmployeeID", "Employee")
			End Get
			Set(ByVal value As EntityReference(Of Employee))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Employee)("AdventureWorksModel.FK_EmployeeAddress_Employee_EmployeeID", "Employee", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_EmployeeAddress_Address_AddressID", "Address")> _
		Public Property Address() As Address
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Address)("AdventureWorksModel.FK_EmployeeAddress_Address_AddressID", "Address").Value
			End Get
			Set(ByVal value As Address)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Address)("AdventureWorksModel.FK_EmployeeAddress_Address_AddressID", "Address").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property AddressReference() As EntityReference(Of Address)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Address)("AdventureWorksModel.FK_EmployeeAddress_Address_AddressID", "Address")
			End Get
			Set(ByVal value As EntityReference(Of Address))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Address)("AdventureWorksModel.FK_EmployeeAddress_Address_AddressID", "Address", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="EmployeeDepartmentHistory"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class EmployeeDepartmentHistory
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new EmployeeDepartmentHistory object.
		''' </summary>
		''' <param name="employeeID">Initial value of the EmployeeID property.</param>
		''' <param name="departmentID">Initial value of the DepartmentID property.</param>
		''' <param name="shiftID">Initial value of the ShiftID property.</param>
		''' <param name="startDate">Initial value of the StartDate property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateEmployeeDepartmentHistory(ByVal employeeID As Global.System.Int32, ByVal departmentID As Global.System.Int16, ByVal shiftID As Global.System.Byte, ByVal startDate As Global.System.DateTime, ByVal modifiedDate As Global.System.DateTime) As EmployeeDepartmentHistory
			Dim employeeDepartmentHistory As New EmployeeDepartmentHistory()
			employeeDepartmentHistory.EmployeeID = employeeID
			employeeDepartmentHistory.DepartmentID = departmentID
			employeeDepartmentHistory.ShiftID = shiftID
			employeeDepartmentHistory.StartDate = startDate
			employeeDepartmentHistory.ModifiedDate = modifiedDate
			Return employeeDepartmentHistory
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property EmployeeID() As Global.System.Int32
			Get
				Return _EmployeeID
			End Get
			Set(ByVal value As System.Int32)
				If _EmployeeID <> value Then
					OnEmployeeIDChanging(value)
					ReportPropertyChanging("EmployeeID")
					_EmployeeID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("EmployeeID")
					OnEmployeeIDChanged()
				End If
			End Set
		End Property
		Private _EmployeeID As Global.System.Int32
		Partial Private Sub OnEmployeeIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnEmployeeIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property DepartmentID() As Global.System.Int16
			Get
				Return _DepartmentID
			End Get
			Set(ByVal value As System.Int16)
				If _DepartmentID <> value Then
					OnDepartmentIDChanging(value)
					ReportPropertyChanging("DepartmentID")
					_DepartmentID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("DepartmentID")
					OnDepartmentIDChanged()
				End If
			End Set
		End Property
		Private _DepartmentID As Global.System.Int16
		Partial Private Sub OnDepartmentIDChanging(ByVal value As Global.System.Int16)
		End Sub
		Partial Private Sub OnDepartmentIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ShiftID() As Global.System.Byte
			Get
				Return _ShiftID
			End Get
			Set(ByVal value As System.Byte)
				If _ShiftID <> value Then
					OnShiftIDChanging(value)
					ReportPropertyChanging("ShiftID")
					_ShiftID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ShiftID")
					OnShiftIDChanged()
				End If
			End Set
		End Property
		Private _ShiftID As Global.System.Byte
		Partial Private Sub OnShiftIDChanging(ByVal value As Global.System.Byte)
		End Sub
		Partial Private Sub OnShiftIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property StartDate() As Global.System.DateTime
			Get
				Return _StartDate
			End Get
			Set(ByVal value As System.DateTime)
				If _StartDate <> value Then
					OnStartDateChanging(value)
					ReportPropertyChanging("StartDate")
					_StartDate = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("StartDate")
					OnStartDateChanged()
				End If
			End Set
		End Property
		Private _StartDate As Global.System.DateTime
		Partial Private Sub OnStartDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnStartDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property EndDate() As Global.System.DateTime?
			Get
				Return _EndDate
			End Get
			Set(ByVal value? As System.DateTime)
				OnEndDateChanging(value)
				ReportPropertyChanging("EndDate")
				_EndDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("EndDate")
				OnEndDateChanged()
			End Set
		End Property
		Private _EndDate? As Global.System.DateTime
		Partial Private Sub OnEndDateChanging(ByVal value? As Global.System.DateTime)
		End Sub
		Partial Private Sub OnEndDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_EmployeeDepartmentHistory_Department_DepartmentID", "Department")> _
		Public Property Department() As Department
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Department)("AdventureWorksModel.FK_EmployeeDepartmentHistory_Department_DepartmentID", "Department").Value
			End Get
			Set(ByVal value As Department)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Department)("AdventureWorksModel.FK_EmployeeDepartmentHistory_Department_DepartmentID", "Department").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property DepartmentReference() As EntityReference(Of Department)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Department)("AdventureWorksModel.FK_EmployeeDepartmentHistory_Department_DepartmentID", "Department")
			End Get
			Set(ByVal value As EntityReference(Of Department))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Department)("AdventureWorksModel.FK_EmployeeDepartmentHistory_Department_DepartmentID", "Department", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_EmployeeDepartmentHistory_Employee_EmployeeID", "Employee")> _
		Public Property Employee() As Employee
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Employee)("AdventureWorksModel.FK_EmployeeDepartmentHistory_Employee_EmployeeID", "Employee").Value
			End Get
			Set(ByVal value As Employee)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Employee)("AdventureWorksModel.FK_EmployeeDepartmentHistory_Employee_EmployeeID", "Employee").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property EmployeeReference() As EntityReference(Of Employee)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Employee)("AdventureWorksModel.FK_EmployeeDepartmentHistory_Employee_EmployeeID", "Employee")
			End Get
			Set(ByVal value As EntityReference(Of Employee))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Employee)("AdventureWorksModel.FK_EmployeeDepartmentHistory_Employee_EmployeeID", "Employee", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_EmployeeDepartmentHistory_Shift_ShiftID", "Shift")> _
		Public Property Shift() As Shift
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Shift)("AdventureWorksModel.FK_EmployeeDepartmentHistory_Shift_ShiftID", "Shift").Value
			End Get
			Set(ByVal value As Shift)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Shift)("AdventureWorksModel.FK_EmployeeDepartmentHistory_Shift_ShiftID", "Shift").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ShiftReference() As EntityReference(Of Shift)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Shift)("AdventureWorksModel.FK_EmployeeDepartmentHistory_Shift_ShiftID", "Shift")
			End Get
			Set(ByVal value As EntityReference(Of Shift))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Shift)("AdventureWorksModel.FK_EmployeeDepartmentHistory_Shift_ShiftID", "Shift", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="EmployeePayHistory"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class EmployeePayHistory
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new EmployeePayHistory object.
		''' </summary>
		''' <param name="employeeID">Initial value of the EmployeeID property.</param>
		''' <param name="rateChangeDate">Initial value of the RateChangeDate property.</param>
		''' <param name="rate">Initial value of the Rate property.</param>
		''' <param name="payFrequency">Initial value of the PayFrequency property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateEmployeePayHistory(ByVal employeeID As Global.System.Int32, ByVal rateChangeDate As Global.System.DateTime, ByVal rate As Global.System.Decimal, ByVal payFrequency As Global.System.Byte, ByVal modifiedDate As Global.System.DateTime) As EmployeePayHistory
			Dim employeePayHistory As New EmployeePayHistory()
			employeePayHistory.EmployeeID = employeeID
			employeePayHistory.RateChangeDate = rateChangeDate
			employeePayHistory.Rate = rate
			employeePayHistory.PayFrequency = payFrequency
			employeePayHistory.ModifiedDate = modifiedDate
			Return employeePayHistory
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property EmployeeID() As Global.System.Int32
			Get
				Return _EmployeeID
			End Get
			Set(ByVal value As System.Int32)
				If _EmployeeID <> value Then
					OnEmployeeIDChanging(value)
					ReportPropertyChanging("EmployeeID")
					_EmployeeID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("EmployeeID")
					OnEmployeeIDChanged()
				End If
			End Set
		End Property
		Private _EmployeeID As Global.System.Int32
		Partial Private Sub OnEmployeeIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnEmployeeIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property RateChangeDate() As Global.System.DateTime
			Get
				Return _RateChangeDate
			End Get
			Set(ByVal value As System.DateTime)
				If _RateChangeDate <> value Then
					OnRateChangeDateChanging(value)
					ReportPropertyChanging("RateChangeDate")
					_RateChangeDate = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("RateChangeDate")
					OnRateChangeDateChanged()
				End If
			End Set
		End Property
		Private _RateChangeDate As Global.System.DateTime
		Partial Private Sub OnRateChangeDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnRateChangeDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Rate() As Global.System.Decimal
			Get
				Return _Rate
			End Get
			Set(ByVal value As System.Decimal)
				OnRateChanging(value)
				ReportPropertyChanging("Rate")
				_Rate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("Rate")
				OnRateChanged()
			End Set
		End Property
		Private _Rate As Global.System.Decimal
		Partial Private Sub OnRateChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnRateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property PayFrequency() As Global.System.Byte
			Get
				Return _PayFrequency
			End Get
			Set(ByVal value As System.Byte)
				OnPayFrequencyChanging(value)
				ReportPropertyChanging("PayFrequency")
				_PayFrequency = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("PayFrequency")
				OnPayFrequencyChanged()
			End Set
		End Property
		Private _PayFrequency As Global.System.Byte
		Partial Private Sub OnPayFrequencyChanging(ByVal value As Global.System.Byte)
		End Sub
		Partial Private Sub OnPayFrequencyChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_EmployeePayHistory_Employee_EmployeeID", "Employee")> _
		Public Property Employee() As Employee
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Employee)("AdventureWorksModel.FK_EmployeePayHistory_Employee_EmployeeID", "Employee").Value
			End Get
			Set(ByVal value As Employee)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Employee)("AdventureWorksModel.FK_EmployeePayHistory_Employee_EmployeeID", "Employee").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property EmployeeReference() As EntityReference(Of Employee)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Employee)("AdventureWorksModel.FK_EmployeePayHistory_Employee_EmployeeID", "Employee")
			End Get
			Set(ByVal value As EntityReference(Of Employee))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Employee)("AdventureWorksModel.FK_EmployeePayHistory_Employee_EmployeeID", "Employee", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="ErrorLog"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class ErrorLog
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new ErrorLog object.
		''' </summary>
		''' <param name="errorLogID">Initial value of the ErrorLogID property.</param>
		''' <param name="errorTime">Initial value of the ErrorTime property.</param>
		''' <param name="userName">Initial value of the UserName property.</param>
		''' <param name="errorNumber">Initial value of the ErrorNumber property.</param>
		''' <param name="errorMessage">Initial value of the ErrorMessage property.</param>
		Public Shared Function CreateErrorLog(ByVal errorLogID As Global.System.Int32, ByVal errorTime As Global.System.DateTime, ByVal userName As Global.System.String, ByVal errorNumber As Global.System.Int32, ByVal errorMessage As Global.System.String) As ErrorLog
			Dim errorLog As New ErrorLog()
			errorLog.ErrorLogID = errorLogID
			errorLog.ErrorTime = errorTime
			errorLog.UserName = userName
			errorLog.ErrorNumber = errorNumber
			errorLog.ErrorMessage = errorMessage
			Return errorLog
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ErrorLogID() As Global.System.Int32
			Get
				Return _ErrorLogID
			End Get
			Set(ByVal value As System.Int32)
				If _ErrorLogID <> value Then
					OnErrorLogIDChanging(value)
					ReportPropertyChanging("ErrorLogID")
					_ErrorLogID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ErrorLogID")
					OnErrorLogIDChanged()
				End If
			End Set
		End Property
		Private _ErrorLogID As Global.System.Int32
		Partial Private Sub OnErrorLogIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnErrorLogIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ErrorTime() As Global.System.DateTime
			Get
				Return _ErrorTime
			End Get
			Set(ByVal value As System.DateTime)
				OnErrorTimeChanging(value)
				ReportPropertyChanging("ErrorTime")
				_ErrorTime = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ErrorTime")
				OnErrorTimeChanged()
			End Set
		End Property
		Private _ErrorTime As Global.System.DateTime
		Partial Private Sub OnErrorTimeChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnErrorTimeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property UserName() As Global.System.String
			Get
				Return _UserName
			End Get
			Set(ByVal value As System.String)
				OnUserNameChanging(value)
				ReportPropertyChanging("UserName")
				_UserName = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("UserName")
				OnUserNameChanged()
			End Set
		End Property
		Private _UserName As Global.System.String
		Partial Private Sub OnUserNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnUserNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ErrorNumber() As Global.System.Int32
			Get
				Return _ErrorNumber
			End Get
			Set(ByVal value As System.Int32)
				OnErrorNumberChanging(value)
				ReportPropertyChanging("ErrorNumber")
				_ErrorNumber = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ErrorNumber")
				OnErrorNumberChanged()
			End Set
		End Property
		Private _ErrorNumber As Global.System.Int32
		Partial Private Sub OnErrorNumberChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnErrorNumberChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property ErrorSeverity() As Global.System.Int32?
			Get
				Return _ErrorSeverity
			End Get
			Set(ByVal value? As System.Int32)
				OnErrorSeverityChanging(value)
				ReportPropertyChanging("ErrorSeverity")
				_ErrorSeverity = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ErrorSeverity")
				OnErrorSeverityChanged()
			End Set
		End Property
		Private _ErrorSeverity? As Global.System.Int32
		Partial Private Sub OnErrorSeverityChanging(ByVal value? As Global.System.Int32)
		End Sub
		Partial Private Sub OnErrorSeverityChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property ErrorState() As Global.System.Int32?
			Get
				Return _ErrorState
			End Get
			Set(ByVal value? As System.Int32)
				OnErrorStateChanging(value)
				ReportPropertyChanging("ErrorState")
				_ErrorState = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ErrorState")
				OnErrorStateChanged()
			End Set
		End Property
		Private _ErrorState? As Global.System.Int32
		Partial Private Sub OnErrorStateChanging(ByVal value? As Global.System.Int32)
		End Sub
		Partial Private Sub OnErrorStateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property ErrorProcedure() As Global.System.String
			Get
				Return _ErrorProcedure
			End Get
			Set(ByVal value As System.String)
				OnErrorProcedureChanging(value)
				ReportPropertyChanging("ErrorProcedure")
				_ErrorProcedure = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("ErrorProcedure")
				OnErrorProcedureChanged()
			End Set
		End Property
		Private _ErrorProcedure As Global.System.String
		Partial Private Sub OnErrorProcedureChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnErrorProcedureChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property ErrorLine() As Global.System.Int32?
			Get
				Return _ErrorLine
			End Get
			Set(ByVal value? As System.Int32)
				OnErrorLineChanging(value)
				ReportPropertyChanging("ErrorLine")
				_ErrorLine = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ErrorLine")
				OnErrorLineChanged()
			End Set
		End Property
		Private _ErrorLine? As Global.System.Int32
		Partial Private Sub OnErrorLineChanging(ByVal value? As Global.System.Int32)
		End Sub
		Partial Private Sub OnErrorLineChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ErrorMessage() As Global.System.String
			Get
				Return _ErrorMessage
			End Get
			Set(ByVal value As System.String)
				OnErrorMessageChanging(value)
				ReportPropertyChanging("ErrorMessage")
				_ErrorMessage = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("ErrorMessage")
				OnErrorMessageChanged()
			End Set
		End Property
		Private _ErrorMessage As Global.System.String
		Partial Private Sub OnErrorMessageChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnErrorMessageChanged()
		End Sub

		#End Region

	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="Illustration"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class Illustration
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new Illustration object.
		''' </summary>
		''' <param name="illustrationID">Initial value of the IllustrationID property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateIllustration(ByVal illustrationID As Global.System.Int32, ByVal modifiedDate As Global.System.DateTime) As Illustration
			Dim illustration As New Illustration()
			illustration.IllustrationID = illustrationID
			illustration.ModifiedDate = modifiedDate
			Return illustration
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property IllustrationID() As Global.System.Int32
			Get
				Return _IllustrationID
			End Get
			Set(ByVal value As System.Int32)
				If _IllustrationID <> value Then
					OnIllustrationIDChanging(value)
					ReportPropertyChanging("IllustrationID")
					_IllustrationID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("IllustrationID")
					OnIllustrationIDChanged()
				End If
			End Set
		End Property
		Private _IllustrationID As Global.System.Int32
		Partial Private Sub OnIllustrationIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnIllustrationIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property Diagram() As Global.System.String
			Get
				Return _Diagram
			End Get
			Set(ByVal value As System.String)
				OnDiagramChanging(value)
				ReportPropertyChanging("Diagram")
				_Diagram = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("Diagram")
				OnDiagramChanged()
			End Set
		End Property
		Private _Diagram As Global.System.String
		Partial Private Sub OnDiagramChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnDiagramChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductModelIllustration_Illustration_IllustrationID", "ProductModelIllustration")> _
		Public Property ProductModelIllustration() As EntityCollection(Of ProductModelIllustration)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of ProductModelIllustration)("AdventureWorksModel.FK_ProductModelIllustration_Illustration_IllustrationID", "ProductModelIllustration")
			End Get
			Set(ByVal value As EntityCollection(Of ProductModelIllustration))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ProductModelIllustration)("AdventureWorksModel.FK_ProductModelIllustration_Illustration_IllustrationID", "ProductModelIllustration", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="Individual"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class Individual
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new Individual object.
		''' </summary>
		''' <param name="customerID">Initial value of the CustomerID property.</param>
		''' <param name="contactID">Initial value of the ContactID property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateIndividual(ByVal customerID As Global.System.Int32, ByVal contactID As Global.System.Int32, ByVal modifiedDate As Global.System.DateTime) As Individual
			Dim individual As New Individual()
			individual.CustomerID = customerID
			individual.ContactID = contactID
			individual.ModifiedDate = modifiedDate
			Return individual
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property CustomerID() As Global.System.Int32
			Get
				Return _CustomerID
			End Get
			Set(ByVal value As System.Int32)
				If _CustomerID <> value Then
					OnCustomerIDChanging(value)
					ReportPropertyChanging("CustomerID")
					_CustomerID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("CustomerID")
					OnCustomerIDChanged()
				End If
			End Set
		End Property
		Private _CustomerID As Global.System.Int32
		Partial Private Sub OnCustomerIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnCustomerIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ContactID() As Global.System.Int32
			Get
				Return _ContactID
			End Get
			Set(ByVal value As System.Int32)
				OnContactIDChanging(value)
				ReportPropertyChanging("ContactID")
				_ContactID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ContactID")
				OnContactIDChanged()
			End Set
		End Property
		Private _ContactID As Global.System.Int32
		Partial Private Sub OnContactIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnContactIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property Demographics() As Global.System.String
			Get
				Return _Demographics
			End Get
			Set(ByVal value As System.String)
				OnDemographicsChanging(value)
				ReportPropertyChanging("Demographics")
				_Demographics = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("Demographics")
				OnDemographicsChanged()
			End Set
		End Property
		Private _Demographics As Global.System.String
		Partial Private Sub OnDemographicsChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnDemographicsChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Individual_Contact_ContactID", "Contact")> _
		Public Property Contact() As Contact
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Contact)("AdventureWorksModel.FK_Individual_Contact_ContactID", "Contact").Value
			End Get
			Set(ByVal value As Contact)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Contact)("AdventureWorksModel.FK_Individual_Contact_ContactID", "Contact").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ContactReference() As EntityReference(Of Contact)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Contact)("AdventureWorksModel.FK_Individual_Contact_ContactID", "Contact")
			End Get
			Set(ByVal value As EntityReference(Of Contact))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Contact)("AdventureWorksModel.FK_Individual_Contact_ContactID", "Contact", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Individual_Customer_CustomerID", "Customer")> _
		Public Property Customer() As Customer
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Customer)("AdventureWorksModel.FK_Individual_Customer_CustomerID", "Customer").Value
			End Get
			Set(ByVal value As Customer)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Customer)("AdventureWorksModel.FK_Individual_Customer_CustomerID", "Customer").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property CustomerReference() As EntityReference(Of Customer)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Customer)("AdventureWorksModel.FK_Individual_Customer_CustomerID", "Customer")
			End Get
			Set(ByVal value As EntityReference(Of Customer))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Customer)("AdventureWorksModel.FK_Individual_Customer_CustomerID", "Customer", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="JobCandidate"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class JobCandidate
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new JobCandidate object.
		''' </summary>
		''' <param name="jobCandidateID">Initial value of the JobCandidateID property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateJobCandidate(ByVal jobCandidateID As Global.System.Int32, ByVal modifiedDate As Global.System.DateTime) As JobCandidate
			Dim jobCandidate As New JobCandidate()
			jobCandidate.JobCandidateID = jobCandidateID
			jobCandidate.ModifiedDate = modifiedDate
			Return jobCandidate
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property JobCandidateID() As Global.System.Int32
			Get
				Return _JobCandidateID
			End Get
			Set(ByVal value As System.Int32)
				If _JobCandidateID <> value Then
					OnJobCandidateIDChanging(value)
					ReportPropertyChanging("JobCandidateID")
					_JobCandidateID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("JobCandidateID")
					OnJobCandidateIDChanged()
				End If
			End Set
		End Property
		Private _JobCandidateID As Global.System.Int32
		Partial Private Sub OnJobCandidateIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnJobCandidateIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property EmployeeID() As Global.System.Int32?
			Get
				Return _EmployeeID
			End Get
			Set(ByVal value? As System.Int32)
				OnEmployeeIDChanging(value)
				ReportPropertyChanging("EmployeeID")
				_EmployeeID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("EmployeeID")
				OnEmployeeIDChanged()
			End Set
		End Property
		Private _EmployeeID? As Global.System.Int32
		Partial Private Sub OnEmployeeIDChanging(ByVal value? As Global.System.Int32)
		End Sub
		Partial Private Sub OnEmployeeIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property [Resume]() As Global.System.String
			Get
				Return _Resume
			End Get
			Set(ByVal value As System.String)
				OnResumeChanging(value)
				ReportPropertyChanging("Resume")
				_Resume = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("Resume")
				OnResumeChanged()
			End Set
		End Property
		Private _Resume As Global.System.String
		Partial Private Sub OnResumeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnResumeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_JobCandidate_Employee_EmployeeID", "Employee")> _
		Public Property Employee() As Employee
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Employee)("AdventureWorksModel.FK_JobCandidate_Employee_EmployeeID", "Employee").Value
			End Get
			Set(ByVal value As Employee)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Employee)("AdventureWorksModel.FK_JobCandidate_Employee_EmployeeID", "Employee").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property EmployeeReference() As EntityReference(Of Employee)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Employee)("AdventureWorksModel.FK_JobCandidate_Employee_EmployeeID", "Employee")
			End Get
			Set(ByVal value As EntityReference(Of Employee))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Employee)("AdventureWorksModel.FK_JobCandidate_Employee_EmployeeID", "Employee", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="Location"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class Location
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new Location object.
		''' </summary>
		''' <param name="locationID">Initial value of the LocationID property.</param>
		''' <param name="name">Initial value of the Name property.</param>
		''' <param name="costRate">Initial value of the CostRate property.</param>
		''' <param name="availability">Initial value of the Availability property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateLocation(ByVal locationID As Global.System.Int16, ByVal name As Global.System.String, ByVal costRate As Global.System.Decimal, ByVal availability As Global.System.Decimal, ByVal modifiedDate As Global.System.DateTime) As Location
			Dim location As New Location()
			location.LocationID = locationID
			location.Name = name
			location.CostRate = costRate
			location.Availability = availability
			location.ModifiedDate = modifiedDate
			Return location
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property LocationID() As Global.System.Int16
			Get
				Return _LocationID
			End Get
			Set(ByVal value As System.Int16)
				If _LocationID <> value Then
					OnLocationIDChanging(value)
					ReportPropertyChanging("LocationID")
					_LocationID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("LocationID")
					OnLocationIDChanged()
				End If
			End Set
		End Property
		Private _LocationID As Global.System.Int16
		Partial Private Sub OnLocationIDChanging(ByVal value As Global.System.Int16)
		End Sub
		Partial Private Sub OnLocationIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Name() As Global.System.String
			Get
				Return _Name
			End Get
			Set(ByVal value As System.String)
				OnNameChanging(value)
				ReportPropertyChanging("Name")
				_Name = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Name")
				OnNameChanged()
			End Set
		End Property
		Private _Name As Global.System.String
		Partial Private Sub OnNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property CostRate() As Global.System.Decimal
			Get
				Return _CostRate
			End Get
			Set(ByVal value As System.Decimal)
				OnCostRateChanging(value)
				ReportPropertyChanging("CostRate")
				_CostRate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("CostRate")
				OnCostRateChanged()
			End Set
		End Property
		Private _CostRate As Global.System.Decimal
		Partial Private Sub OnCostRateChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnCostRateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Availability() As Global.System.Decimal
			Get
				Return _Availability
			End Get
			Set(ByVal value As System.Decimal)
				OnAvailabilityChanging(value)
				ReportPropertyChanging("Availability")
				_Availability = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("Availability")
				OnAvailabilityChanged()
			End Set
		End Property
		Private _Availability As Global.System.Decimal
		Partial Private Sub OnAvailabilityChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnAvailabilityChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductInventory_Location_LocationID", "ProductInventory")> _
		Public Property ProductInventory() As EntityCollection(Of ProductInventory)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of ProductInventory)("AdventureWorksModel.FK_ProductInventory_Location_LocationID", "ProductInventory")
			End Get
			Set(ByVal value As EntityCollection(Of ProductInventory))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ProductInventory)("AdventureWorksModel.FK_ProductInventory_Location_LocationID", "ProductInventory", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_WorkOrderRouting_Location_LocationID", "WorkOrderRouting")> _
		Public Property WorkOrderRouting() As EntityCollection(Of WorkOrderRouting)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of WorkOrderRouting)("AdventureWorksModel.FK_WorkOrderRouting_Location_LocationID", "WorkOrderRouting")
			End Get
			Set(ByVal value As EntityCollection(Of WorkOrderRouting))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of WorkOrderRouting)("AdventureWorksModel.FK_WorkOrderRouting_Location_LocationID", "WorkOrderRouting", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="Product"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class Product
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new Product object.
		''' </summary>
		''' <param name="productID">Initial value of the ProductID property.</param>
		''' <param name="name">Initial value of the Name property.</param>
		''' <param name="productNumber">Initial value of the ProductNumber property.</param>
		''' <param name="makeFlag">Initial value of the MakeFlag property.</param>
		''' <param name="finishedGoodsFlag">Initial value of the FinishedGoodsFlag property.</param>
		''' <param name="safetyStockLevel">Initial value of the SafetyStockLevel property.</param>
		''' <param name="reorderPoint">Initial value of the ReorderPoint property.</param>
		''' <param name="standardCost">Initial value of the StandardCost property.</param>
		''' <param name="listPrice">Initial value of the ListPrice property.</param>
		''' <param name="daysToManufacture">Initial value of the DaysToManufacture property.</param>
		''' <param name="sellStartDate">Initial value of the SellStartDate property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateProduct(ByVal productID As Global.System.Int32, ByVal name As Global.System.String, ByVal productNumber As Global.System.String, ByVal makeFlag As Global.System.Boolean, ByVal finishedGoodsFlag As Global.System.Boolean, ByVal safetyStockLevel As Global.System.Int16, ByVal reorderPoint As Global.System.Int16, ByVal standardCost As Global.System.Decimal, ByVal listPrice As Global.System.Decimal, ByVal daysToManufacture As Global.System.Int32, ByVal sellStartDate As Global.System.DateTime, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As Product
			Dim product As New Product()
			product.ProductID = productID
			product.Name = name
			product.ProductNumber = productNumber
			product.MakeFlag = makeFlag
			product.FinishedGoodsFlag = finishedGoodsFlag
			product.SafetyStockLevel = safetyStockLevel
			product.ReorderPoint = reorderPoint
			product.StandardCost = standardCost
			product.ListPrice = listPrice
			product.DaysToManufacture = daysToManufacture
			product.SellStartDate = sellStartDate
			product.rowguid = rowguid
			product.ModifiedDate = modifiedDate
			Return product
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductID() As Global.System.Int32
			Get
				Return _ProductID
			End Get
			Set(ByVal value As System.Int32)
				If _ProductID <> value Then
					OnProductIDChanging(value)
					ReportPropertyChanging("ProductID")
					_ProductID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ProductID")
					OnProductIDChanged()
				End If
			End Set
		End Property
		Private _ProductID As Global.System.Int32
		Partial Private Sub OnProductIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Name() As Global.System.String
			Get
				Return _Name
			End Get
			Set(ByVal value As System.String)
				OnNameChanging(value)
				ReportPropertyChanging("Name")
				_Name = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Name")
				OnNameChanged()
			End Set
		End Property
		Private _Name As Global.System.String
		Partial Private Sub OnNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductNumber() As Global.System.String
			Get
				Return _ProductNumber
			End Get
			Set(ByVal value As System.String)
				OnProductNumberChanging(value)
				ReportPropertyChanging("ProductNumber")
				_ProductNumber = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("ProductNumber")
				OnProductNumberChanged()
			End Set
		End Property
		Private _ProductNumber As Global.System.String
		Partial Private Sub OnProductNumberChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnProductNumberChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property MakeFlag() As Global.System.Boolean
			Get
				Return _MakeFlag
			End Get
			Set(ByVal value As System.Boolean)
				OnMakeFlagChanging(value)
				ReportPropertyChanging("MakeFlag")
				_MakeFlag = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("MakeFlag")
				OnMakeFlagChanged()
			End Set
		End Property
		Private _MakeFlag As Global.System.Boolean
		Partial Private Sub OnMakeFlagChanging(ByVal value As Global.System.Boolean)
		End Sub
		Partial Private Sub OnMakeFlagChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property FinishedGoodsFlag() As Global.System.Boolean
			Get
				Return _FinishedGoodsFlag
			End Get
			Set(ByVal value As System.Boolean)
				OnFinishedGoodsFlagChanging(value)
				ReportPropertyChanging("FinishedGoodsFlag")
				_FinishedGoodsFlag = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("FinishedGoodsFlag")
				OnFinishedGoodsFlagChanged()
			End Set
		End Property
		Private _FinishedGoodsFlag As Global.System.Boolean
		Partial Private Sub OnFinishedGoodsFlagChanging(ByVal value As Global.System.Boolean)
		End Sub
		Partial Private Sub OnFinishedGoodsFlagChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property Color() As Global.System.String
			Get
				Return _Color
			End Get
			Set(ByVal value As System.String)
				OnColorChanging(value)
				ReportPropertyChanging("Color")
				_Color = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("Color")
				OnColorChanged()
			End Set
		End Property
		Private _Color As Global.System.String
		Partial Private Sub OnColorChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnColorChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property SafetyStockLevel() As Global.System.Int16
			Get
				Return _SafetyStockLevel
			End Get
			Set(ByVal value As System.Int16)
				OnSafetyStockLevelChanging(value)
				ReportPropertyChanging("SafetyStockLevel")
				_SafetyStockLevel = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("SafetyStockLevel")
				OnSafetyStockLevelChanged()
			End Set
		End Property
		Private _SafetyStockLevel As Global.System.Int16
		Partial Private Sub OnSafetyStockLevelChanging(ByVal value As Global.System.Int16)
		End Sub
		Partial Private Sub OnSafetyStockLevelChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ReorderPoint() As Global.System.Int16
			Get
				Return _ReorderPoint
			End Get
			Set(ByVal value As System.Int16)
				OnReorderPointChanging(value)
				ReportPropertyChanging("ReorderPoint")
				_ReorderPoint = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ReorderPoint")
				OnReorderPointChanged()
			End Set
		End Property
		Private _ReorderPoint As Global.System.Int16
		Partial Private Sub OnReorderPointChanging(ByVal value As Global.System.Int16)
		End Sub
		Partial Private Sub OnReorderPointChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property StandardCost() As Global.System.Decimal
			Get
				Return _StandardCost
			End Get
			Set(ByVal value As System.Decimal)
				OnStandardCostChanging(value)
				ReportPropertyChanging("StandardCost")
				_StandardCost = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("StandardCost")
				OnStandardCostChanged()
			End Set
		End Property
		Private _StandardCost As Global.System.Decimal
		Partial Private Sub OnStandardCostChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnStandardCostChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ListPrice() As Global.System.Decimal
			Get
				Return _ListPrice
			End Get
			Set(ByVal value As System.Decimal)
				OnListPriceChanging(value)
				ReportPropertyChanging("ListPrice")
				_ListPrice = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ListPrice")
				OnListPriceChanged()
			End Set
		End Property
		Private _ListPrice As Global.System.Decimal
		Partial Private Sub OnListPriceChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnListPriceChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property Size() As Global.System.String
			Get
				Return _Size
			End Get
			Set(ByVal value As System.String)
				OnSizeChanging(value)
				ReportPropertyChanging("Size")
				_Size = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("Size")
				OnSizeChanged()
			End Set
		End Property
		Private _Size As Global.System.String
		Partial Private Sub OnSizeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnSizeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property SizeUnitMeasureCode() As Global.System.String
			Get
				Return _SizeUnitMeasureCode
			End Get
			Set(ByVal value As System.String)
				OnSizeUnitMeasureCodeChanging(value)
				ReportPropertyChanging("SizeUnitMeasureCode")
				_SizeUnitMeasureCode = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("SizeUnitMeasureCode")
				OnSizeUnitMeasureCodeChanged()
			End Set
		End Property
		Private _SizeUnitMeasureCode As Global.System.String
		Partial Private Sub OnSizeUnitMeasureCodeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnSizeUnitMeasureCodeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property WeightUnitMeasureCode() As Global.System.String
			Get
				Return _WeightUnitMeasureCode
			End Get
			Set(ByVal value As System.String)
				OnWeightUnitMeasureCodeChanging(value)
				ReportPropertyChanging("WeightUnitMeasureCode")
				_WeightUnitMeasureCode = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("WeightUnitMeasureCode")
				OnWeightUnitMeasureCodeChanged()
			End Set
		End Property
		Private _WeightUnitMeasureCode As Global.System.String
		Partial Private Sub OnWeightUnitMeasureCodeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnWeightUnitMeasureCodeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property Weight() As Global.System.Decimal?
			Get
				Return _Weight
			End Get
			Set(ByVal value? As System.Decimal)
				OnWeightChanging(value)
				ReportPropertyChanging("Weight")
				_Weight = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("Weight")
				OnWeightChanged()
			End Set
		End Property
		Private _Weight? As Global.System.Decimal
		Partial Private Sub OnWeightChanging(ByVal value? As Global.System.Decimal)
		End Sub
		Partial Private Sub OnWeightChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property DaysToManufacture() As Global.System.Int32
			Get
				Return _DaysToManufacture
			End Get
			Set(ByVal value As System.Int32)
				OnDaysToManufactureChanging(value)
				ReportPropertyChanging("DaysToManufacture")
				_DaysToManufacture = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("DaysToManufacture")
				OnDaysToManufactureChanged()
			End Set
		End Property
		Private _DaysToManufacture As Global.System.Int32
		Partial Private Sub OnDaysToManufactureChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnDaysToManufactureChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property ProductLine() As Global.System.String
			Get
				Return _ProductLine
			End Get
			Set(ByVal value As System.String)
				OnProductLineChanging(value)
				ReportPropertyChanging("ProductLine")
				_ProductLine = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("ProductLine")
				OnProductLineChanged()
			End Set
		End Property
		Private _ProductLine As Global.System.String
		Partial Private Sub OnProductLineChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnProductLineChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property [Class]() As Global.System.String
			Get
				Return _Class
			End Get
			Set(ByVal value As System.String)
				OnClassChanging(value)
				ReportPropertyChanging("Class")
				_Class = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("Class")
				OnClassChanged()
			End Set
		End Property
		Private _Class As Global.System.String
		Partial Private Sub OnClassChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnClassChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property Style() As Global.System.String
			Get
				Return _Style
			End Get
			Set(ByVal value As System.String)
				OnStyleChanging(value)
				ReportPropertyChanging("Style")
				_Style = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("Style")
				OnStyleChanged()
			End Set
		End Property
		Private _Style As Global.System.String
		Partial Private Sub OnStyleChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnStyleChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property ProductSubcategoryID() As Global.System.Int32?
			Get
				Return _ProductSubcategoryID
			End Get
			Set(ByVal value? As System.Int32)
				OnProductSubcategoryIDChanging(value)
				ReportPropertyChanging("ProductSubcategoryID")
				_ProductSubcategoryID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ProductSubcategoryID")
				OnProductSubcategoryIDChanged()
			End Set
		End Property
		Private _ProductSubcategoryID? As Global.System.Int32
		Partial Private Sub OnProductSubcategoryIDChanging(ByVal value? As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductSubcategoryIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property ProductModelID() As Global.System.Int32?
			Get
				Return _ProductModelID
			End Get
			Set(ByVal value? As System.Int32)
				OnProductModelIDChanging(value)
				ReportPropertyChanging("ProductModelID")
				_ProductModelID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ProductModelID")
				OnProductModelIDChanged()
			End Set
		End Property
		Private _ProductModelID? As Global.System.Int32
		Partial Private Sub OnProductModelIDChanging(ByVal value? As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductModelIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property SellStartDate() As Global.System.DateTime
			Get
				Return _SellStartDate
			End Get
			Set(ByVal value As System.DateTime)
				OnSellStartDateChanging(value)
				ReportPropertyChanging("SellStartDate")
				_SellStartDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("SellStartDate")
				OnSellStartDateChanged()
			End Set
		End Property
		Private _SellStartDate As Global.System.DateTime
		Partial Private Sub OnSellStartDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnSellStartDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property SellEndDate() As Global.System.DateTime?
			Get
				Return _SellEndDate
			End Get
			Set(ByVal value? As System.DateTime)
				OnSellEndDateChanging(value)
				ReportPropertyChanging("SellEndDate")
				_SellEndDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("SellEndDate")
				OnSellEndDateChanged()
			End Set
		End Property
		Private _SellEndDate? As Global.System.DateTime
		Partial Private Sub OnSellEndDateChanging(ByVal value? As Global.System.DateTime)
		End Sub
		Partial Private Sub OnSellEndDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property DiscontinuedDate() As Global.System.DateTime?
			Get
				Return _DiscontinuedDate
			End Get
			Set(ByVal value? As System.DateTime)
				OnDiscontinuedDateChanging(value)
				ReportPropertyChanging("DiscontinuedDate")
				_DiscontinuedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("DiscontinuedDate")
				OnDiscontinuedDateChanged()
			End Set
		End Property
		Private _DiscontinuedDate? As Global.System.DateTime
		Partial Private Sub OnDiscontinuedDateChanging(ByVal value? As Global.System.DateTime)
		End Sub
		Partial Private Sub OnDiscontinuedDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_BillOfMaterials_Product_ComponentID", "BillOfMaterials")> _
		Public Property BillOfMaterials() As EntityCollection(Of BillOfMaterials)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of BillOfMaterials)("AdventureWorksModel.FK_BillOfMaterials_Product_ComponentID", "BillOfMaterials")
			End Get
			Set(ByVal value As EntityCollection(Of BillOfMaterials))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of BillOfMaterials)("AdventureWorksModel.FK_BillOfMaterials_Product_ComponentID", "BillOfMaterials", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_BillOfMaterials_Product_ProductAssemblyID", "BillOfMaterials")> _
		Public Property BillOfMaterials1() As EntityCollection(Of BillOfMaterials)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of BillOfMaterials)("AdventureWorksModel.FK_BillOfMaterials_Product_ProductAssemblyID", "BillOfMaterials")
			End Get
			Set(ByVal value As EntityCollection(Of BillOfMaterials))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of BillOfMaterials)("AdventureWorksModel.FK_BillOfMaterials_Product_ProductAssemblyID", "BillOfMaterials", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Product_ProductModel_ProductModelID", "ProductModel")> _
		Public Property ProductModel() As ProductModel
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ProductModel)("AdventureWorksModel.FK_Product_ProductModel_ProductModelID", "ProductModel").Value
			End Get
			Set(ByVal value As ProductModel)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of ProductModel)("AdventureWorksModel.FK_Product_ProductModel_ProductModelID", "ProductModel").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ProductModelReference() As EntityReference(Of ProductModel)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ProductModel)("AdventureWorksModel.FK_Product_ProductModel_ProductModelID", "ProductModel")
			End Get
			Set(ByVal value As EntityReference(Of ProductModel))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of ProductModel)("AdventureWorksModel.FK_Product_ProductModel_ProductModelID", "ProductModel", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Product_ProductSubcategory_ProductSubcategoryID", "ProductSubcategory")> _
		Public Property ProductSubcategory() As ProductSubcategory
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ProductSubcategory)("AdventureWorksModel.FK_Product_ProductSubcategory_ProductSubcategoryID", "ProductSubcategory").Value
			End Get
			Set(ByVal value As ProductSubcategory)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of ProductSubcategory)("AdventureWorksModel.FK_Product_ProductSubcategory_ProductSubcategoryID", "ProductSubcategory").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ProductSubcategoryReference() As EntityReference(Of ProductSubcategory)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ProductSubcategory)("AdventureWorksModel.FK_Product_ProductSubcategory_ProductSubcategoryID", "ProductSubcategory")
			End Get
			Set(ByVal value As EntityReference(Of ProductSubcategory))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of ProductSubcategory)("AdventureWorksModel.FK_Product_ProductSubcategory_ProductSubcategoryID", "ProductSubcategory", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Product_UnitMeasure_SizeUnitMeasureCode", "UnitMeasure")> _
		Public Property UnitMeasure() As UnitMeasure
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of UnitMeasure)("AdventureWorksModel.FK_Product_UnitMeasure_SizeUnitMeasureCode", "UnitMeasure").Value
			End Get
			Set(ByVal value As UnitMeasure)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of UnitMeasure)("AdventureWorksModel.FK_Product_UnitMeasure_SizeUnitMeasureCode", "UnitMeasure").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property UnitMeasureReference() As EntityReference(Of UnitMeasure)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of UnitMeasure)("AdventureWorksModel.FK_Product_UnitMeasure_SizeUnitMeasureCode", "UnitMeasure")
			End Get
			Set(ByVal value As EntityReference(Of UnitMeasure))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of UnitMeasure)("AdventureWorksModel.FK_Product_UnitMeasure_SizeUnitMeasureCode", "UnitMeasure", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Product_UnitMeasure_WeightUnitMeasureCode", "UnitMeasure")> _
		Public Property UnitMeasure1() As UnitMeasure
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of UnitMeasure)("AdventureWorksModel.FK_Product_UnitMeasure_WeightUnitMeasureCode", "UnitMeasure").Value
			End Get
			Set(ByVal value As UnitMeasure)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of UnitMeasure)("AdventureWorksModel.FK_Product_UnitMeasure_WeightUnitMeasureCode", "UnitMeasure").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property UnitMeasure1Reference() As EntityReference(Of UnitMeasure)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of UnitMeasure)("AdventureWorksModel.FK_Product_UnitMeasure_WeightUnitMeasureCode", "UnitMeasure")
			End Get
			Set(ByVal value As EntityReference(Of UnitMeasure))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of UnitMeasure)("AdventureWorksModel.FK_Product_UnitMeasure_WeightUnitMeasureCode", "UnitMeasure", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductCostHistory_Product_ProductID", "ProductCostHistory")> _
		Public Property ProductCostHistory() As EntityCollection(Of ProductCostHistory)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of ProductCostHistory)("AdventureWorksModel.FK_ProductCostHistory_Product_ProductID", "ProductCostHistory")
			End Get
			Set(ByVal value As EntityCollection(Of ProductCostHistory))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ProductCostHistory)("AdventureWorksModel.FK_ProductCostHistory_Product_ProductID", "ProductCostHistory", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductDocument_Product_ProductID", "ProductDocument")> _
		Public Property ProductDocument() As EntityCollection(Of ProductDocument)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of ProductDocument)("AdventureWorksModel.FK_ProductDocument_Product_ProductID", "ProductDocument")
			End Get
			Set(ByVal value As EntityCollection(Of ProductDocument))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ProductDocument)("AdventureWorksModel.FK_ProductDocument_Product_ProductID", "ProductDocument", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductInventory_Product_ProductID", "ProductInventory")> _
		Public Property ProductInventory() As EntityCollection(Of ProductInventory)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of ProductInventory)("AdventureWorksModel.FK_ProductInventory_Product_ProductID", "ProductInventory")
			End Get
			Set(ByVal value As EntityCollection(Of ProductInventory))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ProductInventory)("AdventureWorksModel.FK_ProductInventory_Product_ProductID", "ProductInventory", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductListPriceHistory_Product_ProductID", "ProductListPriceHistory")> _
		Public Property ProductListPriceHistory() As EntityCollection(Of ProductListPriceHistory)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of ProductListPriceHistory)("AdventureWorksModel.FK_ProductListPriceHistory_Product_ProductID", "ProductListPriceHistory")
			End Get
			Set(ByVal value As EntityCollection(Of ProductListPriceHistory))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ProductListPriceHistory)("AdventureWorksModel.FK_ProductListPriceHistory_Product_ProductID", "ProductListPriceHistory", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductProductPhoto_Product_ProductID", "ProductProductPhoto")> _
		Public Property ProductProductPhoto() As EntityCollection(Of ProductProductPhoto)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of ProductProductPhoto)("AdventureWorksModel.FK_ProductProductPhoto_Product_ProductID", "ProductProductPhoto")
			End Get
			Set(ByVal value As EntityCollection(Of ProductProductPhoto))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ProductProductPhoto)("AdventureWorksModel.FK_ProductProductPhoto_Product_ProductID", "ProductProductPhoto", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductReview_Product_ProductID", "ProductReview")> _
		Public Property ProductReview() As EntityCollection(Of ProductReview)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of ProductReview)("AdventureWorksModel.FK_ProductReview_Product_ProductID", "ProductReview")
			End Get
			Set(ByVal value As EntityCollection(Of ProductReview))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ProductReview)("AdventureWorksModel.FK_ProductReview_Product_ProductID", "ProductReview", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductVendor_Product_ProductID", "ProductVendor")> _
		Public Property ProductVendor() As EntityCollection(Of ProductVendor)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of ProductVendor)("AdventureWorksModel.FK_ProductVendor_Product_ProductID", "ProductVendor")
			End Get
			Set(ByVal value As EntityCollection(Of ProductVendor))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ProductVendor)("AdventureWorksModel.FK_ProductVendor_Product_ProductID", "ProductVendor", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_PurchaseOrderDetail_Product_ProductID", "PurchaseOrderDetail")> _
		Public Property PurchaseOrderDetail() As EntityCollection(Of PurchaseOrderDetail)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of PurchaseOrderDetail)("AdventureWorksModel.FK_PurchaseOrderDetail_Product_ProductID", "PurchaseOrderDetail")
			End Get
			Set(ByVal value As EntityCollection(Of PurchaseOrderDetail))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of PurchaseOrderDetail)("AdventureWorksModel.FK_PurchaseOrderDetail_Product_ProductID", "PurchaseOrderDetail", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ShoppingCartItem_Product_ProductID", "ShoppingCartItem")> _
		Public Property ShoppingCartItem() As EntityCollection(Of ShoppingCartItem)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of ShoppingCartItem)("AdventureWorksModel.FK_ShoppingCartItem_Product_ProductID", "ShoppingCartItem")
			End Get
			Set(ByVal value As EntityCollection(Of ShoppingCartItem))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ShoppingCartItem)("AdventureWorksModel.FK_ShoppingCartItem_Product_ProductID", "ShoppingCartItem", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SpecialOfferProduct_Product_ProductID", "SpecialOfferProduct")> _
		Public Property SpecialOfferProduct() As EntityCollection(Of SpecialOfferProduct)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of SpecialOfferProduct)("AdventureWorksModel.FK_SpecialOfferProduct_Product_ProductID", "SpecialOfferProduct")
			End Get
			Set(ByVal value As EntityCollection(Of SpecialOfferProduct))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SpecialOfferProduct)("AdventureWorksModel.FK_SpecialOfferProduct_Product_ProductID", "SpecialOfferProduct", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_TransactionHistory_Product_ProductID", "TransactionHistory")> _
		Public Property TransactionHistory() As EntityCollection(Of TransactionHistory)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of TransactionHistory)("AdventureWorksModel.FK_TransactionHistory_Product_ProductID", "TransactionHistory")
			End Get
			Set(ByVal value As EntityCollection(Of TransactionHistory))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of TransactionHistory)("AdventureWorksModel.FK_TransactionHistory_Product_ProductID", "TransactionHistory", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_WorkOrder_Product_ProductID", "WorkOrder")> _
		Public Property WorkOrder() As EntityCollection(Of WorkOrder)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of WorkOrder)("AdventureWorksModel.FK_WorkOrder_Product_ProductID", "WorkOrder")
			End Get
			Set(ByVal value As EntityCollection(Of WorkOrder))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of WorkOrder)("AdventureWorksModel.FK_WorkOrder_Product_ProductID", "WorkOrder", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="ProductCategory"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class ProductCategory
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new ProductCategory object.
		''' </summary>
		''' <param name="productCategoryID">Initial value of the ProductCategoryID property.</param>
		''' <param name="name">Initial value of the Name property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateProductCategory(ByVal productCategoryID As Global.System.Int32, ByVal name As Global.System.String, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As ProductCategory
			Dim productCategory As New ProductCategory()
			productCategory.ProductCategoryID = productCategoryID
			productCategory.Name = name
			productCategory.rowguid = rowguid
			productCategory.ModifiedDate = modifiedDate
			Return productCategory
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductCategoryID() As Global.System.Int32
			Get
				Return _ProductCategoryID
			End Get
			Set(ByVal value As System.Int32)
				If _ProductCategoryID <> value Then
					OnProductCategoryIDChanging(value)
					ReportPropertyChanging("ProductCategoryID")
					_ProductCategoryID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ProductCategoryID")
					OnProductCategoryIDChanged()
				End If
			End Set
		End Property
		Private _ProductCategoryID As Global.System.Int32
		Partial Private Sub OnProductCategoryIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductCategoryIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Name() As Global.System.String
			Get
				Return _Name
			End Get
			Set(ByVal value As System.String)
				OnNameChanging(value)
				ReportPropertyChanging("Name")
				_Name = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Name")
				OnNameChanged()
			End Set
		End Property
		Private _Name As Global.System.String
		Partial Private Sub OnNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductSubcategory_ProductCategory_ProductCategoryID", "ProductSubcategory")> _
		Public Property ProductSubcategory() As EntityCollection(Of ProductSubcategory)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of ProductSubcategory)("AdventureWorksModel.FK_ProductSubcategory_ProductCategory_ProductCategoryID", "ProductSubcategory")
			End Get
			Set(ByVal value As EntityCollection(Of ProductSubcategory))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ProductSubcategory)("AdventureWorksModel.FK_ProductSubcategory_ProductCategory_ProductCategoryID", "ProductSubcategory", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="ProductCostHistory"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class ProductCostHistory
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new ProductCostHistory object.
		''' </summary>
		''' <param name="productID">Initial value of the ProductID property.</param>
		''' <param name="startDate">Initial value of the StartDate property.</param>
		''' <param name="standardCost">Initial value of the StandardCost property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateProductCostHistory(ByVal productID As Global.System.Int32, ByVal startDate As Global.System.DateTime, ByVal standardCost As Global.System.Decimal, ByVal modifiedDate As Global.System.DateTime) As ProductCostHistory
			Dim productCostHistory As New ProductCostHistory()
			productCostHistory.ProductID = productID
			productCostHistory.StartDate = startDate
			productCostHistory.StandardCost = standardCost
			productCostHistory.ModifiedDate = modifiedDate
			Return productCostHistory
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductID() As Global.System.Int32
			Get
				Return _ProductID
			End Get
			Set(ByVal value As System.Int32)
				If _ProductID <> value Then
					OnProductIDChanging(value)
					ReportPropertyChanging("ProductID")
					_ProductID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ProductID")
					OnProductIDChanged()
				End If
			End Set
		End Property
		Private _ProductID As Global.System.Int32
		Partial Private Sub OnProductIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property StartDate() As Global.System.DateTime
			Get
				Return _StartDate
			End Get
			Set(ByVal value As System.DateTime)
				If _StartDate <> value Then
					OnStartDateChanging(value)
					ReportPropertyChanging("StartDate")
					_StartDate = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("StartDate")
					OnStartDateChanged()
				End If
			End Set
		End Property
		Private _StartDate As Global.System.DateTime
		Partial Private Sub OnStartDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnStartDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property EndDate() As Global.System.DateTime?
			Get
				Return _EndDate
			End Get
			Set(ByVal value? As System.DateTime)
				OnEndDateChanging(value)
				ReportPropertyChanging("EndDate")
				_EndDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("EndDate")
				OnEndDateChanged()
			End Set
		End Property
		Private _EndDate? As Global.System.DateTime
		Partial Private Sub OnEndDateChanging(ByVal value? As Global.System.DateTime)
		End Sub
		Partial Private Sub OnEndDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property StandardCost() As Global.System.Decimal
			Get
				Return _StandardCost
			End Get
			Set(ByVal value As System.Decimal)
				OnStandardCostChanging(value)
				ReportPropertyChanging("StandardCost")
				_StandardCost = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("StandardCost")
				OnStandardCostChanged()
			End Set
		End Property
		Private _StandardCost As Global.System.Decimal
		Partial Private Sub OnStandardCostChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnStandardCostChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductCostHistory_Product_ProductID", "Product")> _
		Public Property Product() As Product
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ProductCostHistory_Product_ProductID", "Product").Value
			End Get
			Set(ByVal value As Product)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ProductCostHistory_Product_ProductID", "Product").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ProductReference() As EntityReference(Of Product)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ProductCostHistory_Product_ProductID", "Product")
			End Get
			Set(ByVal value As EntityReference(Of Product))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Product)("AdventureWorksModel.FK_ProductCostHistory_Product_ProductID", "Product", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="ProductDescription"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class ProductDescription
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new ProductDescription object.
		''' </summary>
		''' <param name="productDescriptionID">Initial value of the ProductDescriptionID property.</param>
		''' <param name="description">Initial value of the Description property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateProductDescription(ByVal productDescriptionID As Global.System.Int32, ByVal description As Global.System.String, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As ProductDescription
			Dim productDescription As New ProductDescription()
			productDescription.ProductDescriptionID = productDescriptionID
			productDescription.Description = description
			productDescription.rowguid = rowguid
			productDescription.ModifiedDate = modifiedDate
			Return productDescription
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductDescriptionID() As Global.System.Int32
			Get
				Return _ProductDescriptionID
			End Get
			Set(ByVal value As System.Int32)
				If _ProductDescriptionID <> value Then
					OnProductDescriptionIDChanging(value)
					ReportPropertyChanging("ProductDescriptionID")
					_ProductDescriptionID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ProductDescriptionID")
					OnProductDescriptionIDChanged()
				End If
			End Set
		End Property
		Private _ProductDescriptionID As Global.System.Int32
		Partial Private Sub OnProductDescriptionIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductDescriptionIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Description() As Global.System.String
			Get
				Return _Description
			End Get
			Set(ByVal value As System.String)
				OnDescriptionChanging(value)
				ReportPropertyChanging("Description")
				_Description = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Description")
				OnDescriptionChanged()
			End Set
		End Property
		Private _Description As Global.System.String
		Partial Private Sub OnDescriptionChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnDescriptionChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID", "ProductModelProductDescriptionCulture")> _
		Public Property ProductModelProductDescriptionCulture() As EntityCollection(Of ProductModelProductDescriptionCulture)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of ProductModelProductDescriptionCulture)("AdventureWorksModel.FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID", "ProductModelProductDescriptionCulture")
			End Get
			Set(ByVal value As EntityCollection(Of ProductModelProductDescriptionCulture))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ProductModelProductDescriptionCulture)("AdventureWorksModel.FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID", "ProductModelProductDescriptionCulture", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="ProductDocument"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class ProductDocument
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new ProductDocument object.
		''' </summary>
		''' <param name="productID">Initial value of the ProductID property.</param>
		''' <param name="documentID">Initial value of the DocumentID property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateProductDocument(ByVal productID As Global.System.Int32, ByVal documentID As Global.System.Int32, ByVal modifiedDate As Global.System.DateTime) As ProductDocument
			Dim productDocument As New ProductDocument()
			productDocument.ProductID = productID
			productDocument.DocumentID = documentID
			productDocument.ModifiedDate = modifiedDate
			Return productDocument
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductID() As Global.System.Int32
			Get
				Return _ProductID
			End Get
			Set(ByVal value As System.Int32)
				If _ProductID <> value Then
					OnProductIDChanging(value)
					ReportPropertyChanging("ProductID")
					_ProductID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ProductID")
					OnProductIDChanged()
				End If
			End Set
		End Property
		Private _ProductID As Global.System.Int32
		Partial Private Sub OnProductIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property DocumentID() As Global.System.Int32
			Get
				Return _DocumentID
			End Get
			Set(ByVal value As System.Int32)
				If _DocumentID <> value Then
					OnDocumentIDChanging(value)
					ReportPropertyChanging("DocumentID")
					_DocumentID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("DocumentID")
					OnDocumentIDChanged()
				End If
			End Set
		End Property
		Private _DocumentID As Global.System.Int32
		Partial Private Sub OnDocumentIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnDocumentIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductDocument_Document_DocumentID", "Document")> _
		Public Property Document() As Document
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Document)("AdventureWorksModel.FK_ProductDocument_Document_DocumentID", "Document").Value
			End Get
			Set(ByVal value As Document)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Document)("AdventureWorksModel.FK_ProductDocument_Document_DocumentID", "Document").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property DocumentReference() As EntityReference(Of Document)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Document)("AdventureWorksModel.FK_ProductDocument_Document_DocumentID", "Document")
			End Get
			Set(ByVal value As EntityReference(Of Document))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Document)("AdventureWorksModel.FK_ProductDocument_Document_DocumentID", "Document", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductDocument_Product_ProductID", "Product")> _
		Public Property Product() As Product
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ProductDocument_Product_ProductID", "Product").Value
			End Get
			Set(ByVal value As Product)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ProductDocument_Product_ProductID", "Product").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ProductReference() As EntityReference(Of Product)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ProductDocument_Product_ProductID", "Product")
			End Get
			Set(ByVal value As EntityReference(Of Product))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Product)("AdventureWorksModel.FK_ProductDocument_Product_ProductID", "Product", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="ProductInventory"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class ProductInventory
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new ProductInventory object.
		''' </summary>
		''' <param name="productID">Initial value of the ProductID property.</param>
		''' <param name="locationID">Initial value of the LocationID property.</param>
		''' <param name="shelf">Initial value of the Shelf property.</param>
		''' <param name="bin">Initial value of the Bin property.</param>
		''' <param name="quantity">Initial value of the Quantity property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateProductInventory(ByVal productID As Global.System.Int32, ByVal locationID As Global.System.Int16, ByVal shelf As Global.System.String, ByVal bin As Global.System.Byte, ByVal quantity As Global.System.Int16, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As ProductInventory
			Dim productInventory As New ProductInventory()
			productInventory.ProductID = productID
			productInventory.LocationID = locationID
			productInventory.Shelf = shelf
			productInventory.Bin = bin
			productInventory.Quantity = quantity
			productInventory.rowguid = rowguid
			productInventory.ModifiedDate = modifiedDate
			Return productInventory
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductID() As Global.System.Int32
			Get
				Return _ProductID
			End Get
			Set(ByVal value As System.Int32)
				If _ProductID <> value Then
					OnProductIDChanging(value)
					ReportPropertyChanging("ProductID")
					_ProductID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ProductID")
					OnProductIDChanged()
				End If
			End Set
		End Property
		Private _ProductID As Global.System.Int32
		Partial Private Sub OnProductIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property LocationID() As Global.System.Int16
			Get
				Return _LocationID
			End Get
			Set(ByVal value As System.Int16)
				If _LocationID <> value Then
					OnLocationIDChanging(value)
					ReportPropertyChanging("LocationID")
					_LocationID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("LocationID")
					OnLocationIDChanged()
				End If
			End Set
		End Property
		Private _LocationID As Global.System.Int16
		Partial Private Sub OnLocationIDChanging(ByVal value As Global.System.Int16)
		End Sub
		Partial Private Sub OnLocationIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Shelf() As Global.System.String
			Get
				Return _Shelf
			End Get
			Set(ByVal value As System.String)
				OnShelfChanging(value)
				ReportPropertyChanging("Shelf")
				_Shelf = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Shelf")
				OnShelfChanged()
			End Set
		End Property
		Private _Shelf As Global.System.String
		Partial Private Sub OnShelfChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnShelfChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Bin() As Global.System.Byte
			Get
				Return _Bin
			End Get
			Set(ByVal value As System.Byte)
				OnBinChanging(value)
				ReportPropertyChanging("Bin")
				_Bin = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("Bin")
				OnBinChanged()
			End Set
		End Property
		Private _Bin As Global.System.Byte
		Partial Private Sub OnBinChanging(ByVal value As Global.System.Byte)
		End Sub
		Partial Private Sub OnBinChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Quantity() As Global.System.Int16
			Get
				Return _Quantity
			End Get
			Set(ByVal value As System.Int16)
				OnQuantityChanging(value)
				ReportPropertyChanging("Quantity")
				_Quantity = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("Quantity")
				OnQuantityChanged()
			End Set
		End Property
		Private _Quantity As Global.System.Int16
		Partial Private Sub OnQuantityChanging(ByVal value As Global.System.Int16)
		End Sub
		Partial Private Sub OnQuantityChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductInventory_Location_LocationID", "Location")> _
		Public Property Location() As Location
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Location)("AdventureWorksModel.FK_ProductInventory_Location_LocationID", "Location").Value
			End Get
			Set(ByVal value As Location)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Location)("AdventureWorksModel.FK_ProductInventory_Location_LocationID", "Location").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property LocationReference() As EntityReference(Of Location)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Location)("AdventureWorksModel.FK_ProductInventory_Location_LocationID", "Location")
			End Get
			Set(ByVal value As EntityReference(Of Location))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Location)("AdventureWorksModel.FK_ProductInventory_Location_LocationID", "Location", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductInventory_Product_ProductID", "Product")> _
		Public Property Product() As Product
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ProductInventory_Product_ProductID", "Product").Value
			End Get
			Set(ByVal value As Product)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ProductInventory_Product_ProductID", "Product").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ProductReference() As EntityReference(Of Product)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ProductInventory_Product_ProductID", "Product")
			End Get
			Set(ByVal value As EntityReference(Of Product))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Product)("AdventureWorksModel.FK_ProductInventory_Product_ProductID", "Product", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="ProductListPriceHistory"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class ProductListPriceHistory
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new ProductListPriceHistory object.
		''' </summary>
		''' <param name="productID">Initial value of the ProductID property.</param>
		''' <param name="startDate">Initial value of the StartDate property.</param>
		''' <param name="listPrice">Initial value of the ListPrice property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateProductListPriceHistory(ByVal productID As Global.System.Int32, ByVal startDate As Global.System.DateTime, ByVal listPrice As Global.System.Decimal, ByVal modifiedDate As Global.System.DateTime) As ProductListPriceHistory
			Dim productListPriceHistory As New ProductListPriceHistory()
			productListPriceHistory.ProductID = productID
			productListPriceHistory.StartDate = startDate
			productListPriceHistory.ListPrice = listPrice
			productListPriceHistory.ModifiedDate = modifiedDate
			Return productListPriceHistory
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductID() As Global.System.Int32
			Get
				Return _ProductID
			End Get
			Set(ByVal value As System.Int32)
				If _ProductID <> value Then
					OnProductIDChanging(value)
					ReportPropertyChanging("ProductID")
					_ProductID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ProductID")
					OnProductIDChanged()
				End If
			End Set
		End Property
		Private _ProductID As Global.System.Int32
		Partial Private Sub OnProductIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property StartDate() As Global.System.DateTime
			Get
				Return _StartDate
			End Get
			Set(ByVal value As System.DateTime)
				If _StartDate <> value Then
					OnStartDateChanging(value)
					ReportPropertyChanging("StartDate")
					_StartDate = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("StartDate")
					OnStartDateChanged()
				End If
			End Set
		End Property
		Private _StartDate As Global.System.DateTime
		Partial Private Sub OnStartDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnStartDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property EndDate() As Global.System.DateTime?
			Get
				Return _EndDate
			End Get
			Set(ByVal value? As System.DateTime)
				OnEndDateChanging(value)
				ReportPropertyChanging("EndDate")
				_EndDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("EndDate")
				OnEndDateChanged()
			End Set
		End Property
		Private _EndDate? As Global.System.DateTime
		Partial Private Sub OnEndDateChanging(ByVal value? As Global.System.DateTime)
		End Sub
		Partial Private Sub OnEndDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ListPrice() As Global.System.Decimal
			Get
				Return _ListPrice
			End Get
			Set(ByVal value As System.Decimal)
				OnListPriceChanging(value)
				ReportPropertyChanging("ListPrice")
				_ListPrice = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ListPrice")
				OnListPriceChanged()
			End Set
		End Property
		Private _ListPrice As Global.System.Decimal
		Partial Private Sub OnListPriceChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnListPriceChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductListPriceHistory_Product_ProductID", "Product")> _
		Public Property Product() As Product
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ProductListPriceHistory_Product_ProductID", "Product").Value
			End Get
			Set(ByVal value As Product)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ProductListPriceHistory_Product_ProductID", "Product").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ProductReference() As EntityReference(Of Product)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ProductListPriceHistory_Product_ProductID", "Product")
			End Get
			Set(ByVal value As EntityReference(Of Product))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Product)("AdventureWorksModel.FK_ProductListPriceHistory_Product_ProductID", "Product", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="ProductModel"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class ProductModel
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new ProductModel object.
		''' </summary>
		''' <param name="productModelID">Initial value of the ProductModelID property.</param>
		''' <param name="name">Initial value of the Name property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateProductModel(ByVal productModelID As Global.System.Int32, ByVal name As Global.System.String, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As ProductModel
			Dim productModel As New ProductModel()
			productModel.ProductModelID = productModelID
			productModel.Name = name
			productModel.rowguid = rowguid
			productModel.ModifiedDate = modifiedDate
			Return productModel
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductModelID() As Global.System.Int32
			Get
				Return _ProductModelID
			End Get
			Set(ByVal value As System.Int32)
				If _ProductModelID <> value Then
					OnProductModelIDChanging(value)
					ReportPropertyChanging("ProductModelID")
					_ProductModelID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ProductModelID")
					OnProductModelIDChanged()
				End If
			End Set
		End Property
		Private _ProductModelID As Global.System.Int32
		Partial Private Sub OnProductModelIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductModelIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Name() As Global.System.String
			Get
				Return _Name
			End Get
			Set(ByVal value As System.String)
				OnNameChanging(value)
				ReportPropertyChanging("Name")
				_Name = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Name")
				OnNameChanged()
			End Set
		End Property
		Private _Name As Global.System.String
		Partial Private Sub OnNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property CatalogDescription() As Global.System.String
			Get
				Return _CatalogDescription
			End Get
			Set(ByVal value As System.String)
				OnCatalogDescriptionChanging(value)
				ReportPropertyChanging("CatalogDescription")
				_CatalogDescription = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("CatalogDescription")
				OnCatalogDescriptionChanged()
			End Set
		End Property
		Private _CatalogDescription As Global.System.String
		Partial Private Sub OnCatalogDescriptionChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnCatalogDescriptionChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property Instructions() As Global.System.String
			Get
				Return _Instructions
			End Get
			Set(ByVal value As System.String)
				OnInstructionsChanging(value)
				ReportPropertyChanging("Instructions")
				_Instructions = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("Instructions")
				OnInstructionsChanged()
			End Set
		End Property
		Private _Instructions As Global.System.String
		Partial Private Sub OnInstructionsChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnInstructionsChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Product_ProductModel_ProductModelID", "Product")> _
		Public Property Product() As EntityCollection(Of Product)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of Product)("AdventureWorksModel.FK_Product_ProductModel_ProductModelID", "Product")
			End Get
			Set(ByVal value As EntityCollection(Of Product))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Product)("AdventureWorksModel.FK_Product_ProductModel_ProductModelID", "Product", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductModelIllustration_ProductModel_ProductModelID", "ProductModelIllustration")> _
		Public Property ProductModelIllustration() As EntityCollection(Of ProductModelIllustration)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of ProductModelIllustration)("AdventureWorksModel.FK_ProductModelIllustration_ProductModel_ProductModelID", "ProductModelIllustration")
			End Get
			Set(ByVal value As EntityCollection(Of ProductModelIllustration))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ProductModelIllustration)("AdventureWorksModel.FK_ProductModelIllustration_ProductModel_ProductModelID", "ProductModelIllustration", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID", "ProductModelProductDescriptionCulture")> _
		Public Property ProductModelProductDescriptionCulture() As EntityCollection(Of ProductModelProductDescriptionCulture)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of ProductModelProductDescriptionCulture)("AdventureWorksModel.FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID", "ProductModelProductDescriptionCulture")
			End Get
			Set(ByVal value As EntityCollection(Of ProductModelProductDescriptionCulture))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ProductModelProductDescriptionCulture)("AdventureWorksModel.FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID", "ProductModelProductDescriptionCulture", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="ProductModelIllustration"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class ProductModelIllustration
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new ProductModelIllustration object.
		''' </summary>
		''' <param name="productModelID">Initial value of the ProductModelID property.</param>
		''' <param name="illustrationID">Initial value of the IllustrationID property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateProductModelIllustration(ByVal productModelID As Global.System.Int32, ByVal illustrationID As Global.System.Int32, ByVal modifiedDate As Global.System.DateTime) As ProductModelIllustration
			Dim productModelIllustration As New ProductModelIllustration()
			productModelIllustration.ProductModelID = productModelID
			productModelIllustration.IllustrationID = illustrationID
			productModelIllustration.ModifiedDate = modifiedDate
			Return productModelIllustration
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductModelID() As Global.System.Int32
			Get
				Return _ProductModelID
			End Get
			Set(ByVal value As System.Int32)
				If _ProductModelID <> value Then
					OnProductModelIDChanging(value)
					ReportPropertyChanging("ProductModelID")
					_ProductModelID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ProductModelID")
					OnProductModelIDChanged()
				End If
			End Set
		End Property
		Private _ProductModelID As Global.System.Int32
		Partial Private Sub OnProductModelIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductModelIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property IllustrationID() As Global.System.Int32
			Get
				Return _IllustrationID
			End Get
			Set(ByVal value As System.Int32)
				If _IllustrationID <> value Then
					OnIllustrationIDChanging(value)
					ReportPropertyChanging("IllustrationID")
					_IllustrationID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("IllustrationID")
					OnIllustrationIDChanged()
				End If
			End Set
		End Property
		Private _IllustrationID As Global.System.Int32
		Partial Private Sub OnIllustrationIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnIllustrationIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductModelIllustration_Illustration_IllustrationID", "Illustration")> _
		Public Property Illustration() As Illustration
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Illustration)("AdventureWorksModel.FK_ProductModelIllustration_Illustration_IllustrationID", "Illustration").Value
			End Get
			Set(ByVal value As Illustration)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Illustration)("AdventureWorksModel.FK_ProductModelIllustration_Illustration_IllustrationID", "Illustration").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property IllustrationReference() As EntityReference(Of Illustration)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Illustration)("AdventureWorksModel.FK_ProductModelIllustration_Illustration_IllustrationID", "Illustration")
			End Get
			Set(ByVal value As EntityReference(Of Illustration))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Illustration)("AdventureWorksModel.FK_ProductModelIllustration_Illustration_IllustrationID", "Illustration", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductModelIllustration_ProductModel_ProductModelID", "ProductModel")> _
		Public Property ProductModel() As ProductModel
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ProductModel)("AdventureWorksModel.FK_ProductModelIllustration_ProductModel_ProductModelID", "ProductModel").Value
			End Get
			Set(ByVal value As ProductModel)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of ProductModel)("AdventureWorksModel.FK_ProductModelIllustration_ProductModel_ProductModelID", "ProductModel").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ProductModelReference() As EntityReference(Of ProductModel)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ProductModel)("AdventureWorksModel.FK_ProductModelIllustration_ProductModel_ProductModelID", "ProductModel")
			End Get
			Set(ByVal value As EntityReference(Of ProductModel))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of ProductModel)("AdventureWorksModel.FK_ProductModelIllustration_ProductModel_ProductModelID", "ProductModel", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="ProductModelProductDescriptionCulture"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class ProductModelProductDescriptionCulture
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new ProductModelProductDescriptionCulture object.
		''' </summary>
		''' <param name="productModelID">Initial value of the ProductModelID property.</param>
		''' <param name="productDescriptionID">Initial value of the ProductDescriptionID property.</param>
		''' <param name="cultureID">Initial value of the CultureID property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateProductModelProductDescriptionCulture(ByVal productModelID As Global.System.Int32, ByVal productDescriptionID As Global.System.Int32, ByVal cultureID As Global.System.String, ByVal modifiedDate As Global.System.DateTime) As ProductModelProductDescriptionCulture
			Dim productModelProductDescriptionCulture As New ProductModelProductDescriptionCulture()
			productModelProductDescriptionCulture.ProductModelID = productModelID
			productModelProductDescriptionCulture.ProductDescriptionID = productDescriptionID
			productModelProductDescriptionCulture.CultureID = cultureID
			productModelProductDescriptionCulture.ModifiedDate = modifiedDate
			Return productModelProductDescriptionCulture
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductModelID() As Global.System.Int32
			Get
				Return _ProductModelID
			End Get
			Set(ByVal value As System.Int32)
				If _ProductModelID <> value Then
					OnProductModelIDChanging(value)
					ReportPropertyChanging("ProductModelID")
					_ProductModelID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ProductModelID")
					OnProductModelIDChanged()
				End If
			End Set
		End Property
		Private _ProductModelID As Global.System.Int32
		Partial Private Sub OnProductModelIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductModelIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductDescriptionID() As Global.System.Int32
			Get
				Return _ProductDescriptionID
			End Get
			Set(ByVal value As System.Int32)
				If _ProductDescriptionID <> value Then
					OnProductDescriptionIDChanging(value)
					ReportPropertyChanging("ProductDescriptionID")
					_ProductDescriptionID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ProductDescriptionID")
					OnProductDescriptionIDChanged()
				End If
			End Set
		End Property
		Private _ProductDescriptionID As Global.System.Int32
		Partial Private Sub OnProductDescriptionIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductDescriptionIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property CultureID() As Global.System.String
			Get
				Return _CultureID
			End Get
			Set(ByVal value As System.String)
				If _CultureID <> value Then
					OnCultureIDChanging(value)
					ReportPropertyChanging("CultureID")
					_CultureID = StructuralObject.SetValidValue(value, False)
					ReportPropertyChanged("CultureID")
					OnCultureIDChanged()
				End If
			End Set
		End Property
		Private _CultureID As Global.System.String
		Partial Private Sub OnCultureIDChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnCultureIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductModelProductDescriptionCulture_Culture_CultureID", "Culture")> _
		Public Property Culture() As Culture
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Culture)("AdventureWorksModel.FK_ProductModelProductDescriptionCulture_Culture_CultureID", "Culture").Value
			End Get
			Set(ByVal value As Culture)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Culture)("AdventureWorksModel.FK_ProductModelProductDescriptionCulture_Culture_CultureID", "Culture").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property CultureReference() As EntityReference(Of Culture)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Culture)("AdventureWorksModel.FK_ProductModelProductDescriptionCulture_Culture_CultureID", "Culture")
			End Get
			Set(ByVal value As EntityReference(Of Culture))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Culture)("AdventureWorksModel.FK_ProductModelProductDescriptionCulture_Culture_CultureID", "Culture", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID", "ProductDescription")> _
		Public Property ProductDescription() As ProductDescription
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ProductDescription)("AdventureWorksModel.FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID", "ProductDescription").Value
			End Get
			Set(ByVal value As ProductDescription)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of ProductDescription)("AdventureWorksModel.FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID", "ProductDescription").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ProductDescriptionReference() As EntityReference(Of ProductDescription)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ProductDescription)("AdventureWorksModel.FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID", "ProductDescription")
			End Get
			Set(ByVal value As EntityReference(Of ProductDescription))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of ProductDescription)("AdventureWorksModel.FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID", "ProductDescription", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID", "ProductModel")> _
		Public Property ProductModel() As ProductModel
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ProductModel)("AdventureWorksModel.FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID", "ProductModel").Value
			End Get
			Set(ByVal value As ProductModel)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of ProductModel)("AdventureWorksModel.FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID", "ProductModel").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ProductModelReference() As EntityReference(Of ProductModel)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ProductModel)("AdventureWorksModel.FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID", "ProductModel")
			End Get
			Set(ByVal value As EntityReference(Of ProductModel))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of ProductModel)("AdventureWorksModel.FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID", "ProductModel", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="ProductPhoto"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class ProductPhoto
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new ProductPhoto object.
		''' </summary>
		''' <param name="productPhotoID">Initial value of the ProductPhotoID property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateProductPhoto(ByVal productPhotoID As Global.System.Int32, ByVal modifiedDate As Global.System.DateTime) As ProductPhoto
			Dim productPhoto As New ProductPhoto()
			productPhoto.ProductPhotoID = productPhotoID
			productPhoto.ModifiedDate = modifiedDate
			Return productPhoto
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductPhotoID() As Global.System.Int32
			Get
				Return _ProductPhotoID
			End Get
			Set(ByVal value As System.Int32)
				If _ProductPhotoID <> value Then
					OnProductPhotoIDChanging(value)
					ReportPropertyChanging("ProductPhotoID")
					_ProductPhotoID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ProductPhotoID")
					OnProductPhotoIDChanged()
				End If
			End Set
		End Property
		Private _ProductPhotoID As Global.System.Int32
		Partial Private Sub OnProductPhotoIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductPhotoIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property ThumbNailPhoto() As Global.System.Byte()
			Get
				Return StructuralObject.GetValidValue(_ThumbNailPhoto)
			End Get
			Set(ByVal value As System.Byte())
				OnThumbNailPhotoChanging(value)
				ReportPropertyChanging("ThumbNailPhoto")
				_ThumbNailPhoto = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("ThumbNailPhoto")
				OnThumbNailPhotoChanged()
			End Set
		End Property
		Private _ThumbNailPhoto() As Global.System.Byte
		Partial Private Sub OnThumbNailPhotoChanging(ByVal value() As Global.System.Byte)
		End Sub
		Partial Private Sub OnThumbNailPhotoChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property ThumbnailPhotoFileName() As Global.System.String
			Get
				Return _ThumbnailPhotoFileName
			End Get
			Set(ByVal value As System.String)
				OnThumbnailPhotoFileNameChanging(value)
				ReportPropertyChanging("ThumbnailPhotoFileName")
				_ThumbnailPhotoFileName = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("ThumbnailPhotoFileName")
				OnThumbnailPhotoFileNameChanged()
			End Set
		End Property
		Private _ThumbnailPhotoFileName As Global.System.String
		Partial Private Sub OnThumbnailPhotoFileNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnThumbnailPhotoFileNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property LargePhoto() As Global.System.Byte()
			Get
				Return StructuralObject.GetValidValue(_LargePhoto)
			End Get
			Set(ByVal value As System.Byte())
				OnLargePhotoChanging(value)
				ReportPropertyChanging("LargePhoto")
				_LargePhoto = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("LargePhoto")
				OnLargePhotoChanged()
			End Set
		End Property
		Private _LargePhoto() As Global.System.Byte
		Partial Private Sub OnLargePhotoChanging(ByVal value() As Global.System.Byte)
		End Sub
		Partial Private Sub OnLargePhotoChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property LargePhotoFileName() As Global.System.String
			Get
				Return _LargePhotoFileName
			End Get
			Set(ByVal value As System.String)
				OnLargePhotoFileNameChanging(value)
				ReportPropertyChanging("LargePhotoFileName")
				_LargePhotoFileName = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("LargePhotoFileName")
				OnLargePhotoFileNameChanged()
			End Set
		End Property
		Private _LargePhotoFileName As Global.System.String
		Partial Private Sub OnLargePhotoFileNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnLargePhotoFileNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductProductPhoto_ProductPhoto_ProductPhotoID", "ProductProductPhoto")> _
		Public Property ProductProductPhoto() As EntityCollection(Of ProductProductPhoto)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of ProductProductPhoto)("AdventureWorksModel.FK_ProductProductPhoto_ProductPhoto_ProductPhotoID", "ProductProductPhoto")
			End Get
			Set(ByVal value As EntityCollection(Of ProductProductPhoto))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ProductProductPhoto)("AdventureWorksModel.FK_ProductProductPhoto_ProductPhoto_ProductPhotoID", "ProductProductPhoto", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="ProductProductPhoto"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class ProductProductPhoto
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new ProductProductPhoto object.
		''' </summary>
		''' <param name="productID">Initial value of the ProductID property.</param>
		''' <param name="productPhotoID">Initial value of the ProductPhotoID property.</param>
		''' <param name="primary">Initial value of the Primary property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateProductProductPhoto(ByVal productID As Global.System.Int32, ByVal productPhotoID As Global.System.Int32, ByVal primary As Global.System.Boolean, ByVal modifiedDate As Global.System.DateTime) As ProductProductPhoto
			Dim productProductPhoto As New ProductProductPhoto()
			productProductPhoto.ProductID = productID
			productProductPhoto.ProductPhotoID = productPhotoID
			productProductPhoto.Primary = primary
			productProductPhoto.ModifiedDate = modifiedDate
			Return productProductPhoto
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductID() As Global.System.Int32
			Get
				Return _ProductID
			End Get
			Set(ByVal value As System.Int32)
				If _ProductID <> value Then
					OnProductIDChanging(value)
					ReportPropertyChanging("ProductID")
					_ProductID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ProductID")
					OnProductIDChanged()
				End If
			End Set
		End Property
		Private _ProductID As Global.System.Int32
		Partial Private Sub OnProductIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductPhotoID() As Global.System.Int32
			Get
				Return _ProductPhotoID
			End Get
			Set(ByVal value As System.Int32)
				If _ProductPhotoID <> value Then
					OnProductPhotoIDChanging(value)
					ReportPropertyChanging("ProductPhotoID")
					_ProductPhotoID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ProductPhotoID")
					OnProductPhotoIDChanged()
				End If
			End Set
		End Property
		Private _ProductPhotoID As Global.System.Int32
		Partial Private Sub OnProductPhotoIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductPhotoIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Primary() As Global.System.Boolean
			Get
				Return _Primary
			End Get
			Set(ByVal value As System.Boolean)
				OnPrimaryChanging(value)
				ReportPropertyChanging("Primary")
				_Primary = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("Primary")
				OnPrimaryChanged()
			End Set
		End Property
		Private _Primary As Global.System.Boolean
		Partial Private Sub OnPrimaryChanging(ByVal value As Global.System.Boolean)
		End Sub
		Partial Private Sub OnPrimaryChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductProductPhoto_Product_ProductID", "Product")> _
		Public Property Product() As Product
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ProductProductPhoto_Product_ProductID", "Product").Value
			End Get
			Set(ByVal value As Product)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ProductProductPhoto_Product_ProductID", "Product").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ProductReference() As EntityReference(Of Product)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ProductProductPhoto_Product_ProductID", "Product")
			End Get
			Set(ByVal value As EntityReference(Of Product))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Product)("AdventureWorksModel.FK_ProductProductPhoto_Product_ProductID", "Product", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductProductPhoto_ProductPhoto_ProductPhotoID", "ProductPhoto")> _
		Public Property ProductPhoto() As ProductPhoto
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ProductPhoto)("AdventureWorksModel.FK_ProductProductPhoto_ProductPhoto_ProductPhotoID", "ProductPhoto").Value
			End Get
			Set(ByVal value As ProductPhoto)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of ProductPhoto)("AdventureWorksModel.FK_ProductProductPhoto_ProductPhoto_ProductPhotoID", "ProductPhoto").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ProductPhotoReference() As EntityReference(Of ProductPhoto)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ProductPhoto)("AdventureWorksModel.FK_ProductProductPhoto_ProductPhoto_ProductPhotoID", "ProductPhoto")
			End Get
			Set(ByVal value As EntityReference(Of ProductPhoto))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of ProductPhoto)("AdventureWorksModel.FK_ProductProductPhoto_ProductPhoto_ProductPhotoID", "ProductPhoto", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="ProductReview"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class ProductReview
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new ProductReview object.
		''' </summary>
		''' <param name="productReviewID">Initial value of the ProductReviewID property.</param>
		''' <param name="productID">Initial value of the ProductID property.</param>
		''' <param name="reviewerName">Initial value of the ReviewerName property.</param>
		''' <param name="reviewDate">Initial value of the ReviewDate property.</param>
		''' <param name="emailAddress">Initial value of the EmailAddress property.</param>
		''' <param name="rating">Initial value of the Rating property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateProductReview(ByVal productReviewID As Global.System.Int32, ByVal productID As Global.System.Int32, ByVal reviewerName As Global.System.String, ByVal reviewDate As Global.System.DateTime, ByVal emailAddress As Global.System.String, ByVal rating As Global.System.Int32, ByVal modifiedDate As Global.System.DateTime) As ProductReview
			Dim productReview As New ProductReview()
			productReview.ProductReviewID = productReviewID
			productReview.ProductID = productID
			productReview.ReviewerName = reviewerName
			productReview.ReviewDate = reviewDate
			productReview.EmailAddress = emailAddress
			productReview.Rating = rating
			productReview.ModifiedDate = modifiedDate
			Return productReview
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductReviewID() As Global.System.Int32
			Get
				Return _ProductReviewID
			End Get
			Set(ByVal value As System.Int32)
				If _ProductReviewID <> value Then
					OnProductReviewIDChanging(value)
					ReportPropertyChanging("ProductReviewID")
					_ProductReviewID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ProductReviewID")
					OnProductReviewIDChanged()
				End If
			End Set
		End Property
		Private _ProductReviewID As Global.System.Int32
		Partial Private Sub OnProductReviewIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductReviewIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductID() As Global.System.Int32
			Get
				Return _ProductID
			End Get
			Set(ByVal value As System.Int32)
				OnProductIDChanging(value)
				ReportPropertyChanging("ProductID")
				_ProductID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ProductID")
				OnProductIDChanged()
			End Set
		End Property
		Private _ProductID As Global.System.Int32
		Partial Private Sub OnProductIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ReviewerName() As Global.System.String
			Get
				Return _ReviewerName
			End Get
			Set(ByVal value As System.String)
				OnReviewerNameChanging(value)
				ReportPropertyChanging("ReviewerName")
				_ReviewerName = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("ReviewerName")
				OnReviewerNameChanged()
			End Set
		End Property
		Private _ReviewerName As Global.System.String
		Partial Private Sub OnReviewerNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnReviewerNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ReviewDate() As Global.System.DateTime
			Get
				Return _ReviewDate
			End Get
			Set(ByVal value As System.DateTime)
				OnReviewDateChanging(value)
				ReportPropertyChanging("ReviewDate")
				_ReviewDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ReviewDate")
				OnReviewDateChanged()
			End Set
		End Property
		Private _ReviewDate As Global.System.DateTime
		Partial Private Sub OnReviewDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnReviewDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property EmailAddress() As Global.System.String
			Get
				Return _EmailAddress
			End Get
			Set(ByVal value As System.String)
				OnEmailAddressChanging(value)
				ReportPropertyChanging("EmailAddress")
				_EmailAddress = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("EmailAddress")
				OnEmailAddressChanged()
			End Set
		End Property
		Private _EmailAddress As Global.System.String
		Partial Private Sub OnEmailAddressChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnEmailAddressChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Rating() As Global.System.Int32
			Get
				Return _Rating
			End Get
			Set(ByVal value As System.Int32)
				OnRatingChanging(value)
				ReportPropertyChanging("Rating")
				_Rating = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("Rating")
				OnRatingChanged()
			End Set
		End Property
		Private _Rating As Global.System.Int32
		Partial Private Sub OnRatingChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnRatingChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property Comments() As Global.System.String
			Get
				Return _Comments
			End Get
			Set(ByVal value As System.String)
				OnCommentsChanging(value)
				ReportPropertyChanging("Comments")
				_Comments = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("Comments")
				OnCommentsChanged()
			End Set
		End Property
		Private _Comments As Global.System.String
		Partial Private Sub OnCommentsChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnCommentsChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductReview_Product_ProductID", "Product")> _
		Public Property Product() As Product
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ProductReview_Product_ProductID", "Product").Value
			End Get
			Set(ByVal value As Product)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ProductReview_Product_ProductID", "Product").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ProductReference() As EntityReference(Of Product)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ProductReview_Product_ProductID", "Product")
			End Get
			Set(ByVal value As EntityReference(Of Product))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Product)("AdventureWorksModel.FK_ProductReview_Product_ProductID", "Product", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="ProductSubcategory"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class ProductSubcategory
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new ProductSubcategory object.
		''' </summary>
		''' <param name="productSubcategoryID">Initial value of the ProductSubcategoryID property.</param>
		''' <param name="productCategoryID">Initial value of the ProductCategoryID property.</param>
		''' <param name="name">Initial value of the Name property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateProductSubcategory(ByVal productSubcategoryID As Global.System.Int32, ByVal productCategoryID As Global.System.Int32, ByVal name As Global.System.String, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As ProductSubcategory
			Dim productSubcategory As New ProductSubcategory()
			productSubcategory.ProductSubcategoryID = productSubcategoryID
			productSubcategory.ProductCategoryID = productCategoryID
			productSubcategory.Name = name
			productSubcategory.rowguid = rowguid
			productSubcategory.ModifiedDate = modifiedDate
			Return productSubcategory
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductSubcategoryID() As Global.System.Int32
			Get
				Return _ProductSubcategoryID
			End Get
			Set(ByVal value As System.Int32)
				If _ProductSubcategoryID <> value Then
					OnProductSubcategoryIDChanging(value)
					ReportPropertyChanging("ProductSubcategoryID")
					_ProductSubcategoryID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ProductSubcategoryID")
					OnProductSubcategoryIDChanged()
				End If
			End Set
		End Property
		Private _ProductSubcategoryID As Global.System.Int32
		Partial Private Sub OnProductSubcategoryIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductSubcategoryIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductCategoryID() As Global.System.Int32
			Get
				Return _ProductCategoryID
			End Get
			Set(ByVal value As System.Int32)
				OnProductCategoryIDChanging(value)
				ReportPropertyChanging("ProductCategoryID")
				_ProductCategoryID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ProductCategoryID")
				OnProductCategoryIDChanged()
			End Set
		End Property
		Private _ProductCategoryID As Global.System.Int32
		Partial Private Sub OnProductCategoryIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductCategoryIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Name() As Global.System.String
			Get
				Return _Name
			End Get
			Set(ByVal value As System.String)
				OnNameChanging(value)
				ReportPropertyChanging("Name")
				_Name = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Name")
				OnNameChanged()
			End Set
		End Property
		Private _Name As Global.System.String
		Partial Private Sub OnNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Product_ProductSubcategory_ProductSubcategoryID", "Product")> _
		Public Property Product() As EntityCollection(Of Product)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of Product)("AdventureWorksModel.FK_Product_ProductSubcategory_ProductSubcategoryID", "Product")
			End Get
			Set(ByVal value As EntityCollection(Of Product))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Product)("AdventureWorksModel.FK_Product_ProductSubcategory_ProductSubcategoryID", "Product", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductSubcategory_ProductCategory_ProductCategoryID", "ProductCategory")> _
		Public Property ProductCategory() As ProductCategory
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ProductCategory)("AdventureWorksModel.FK_ProductSubcategory_ProductCategory_ProductCategoryID", "ProductCategory").Value
			End Get
			Set(ByVal value As ProductCategory)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of ProductCategory)("AdventureWorksModel.FK_ProductSubcategory_ProductCategory_ProductCategoryID", "ProductCategory").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ProductCategoryReference() As EntityReference(Of ProductCategory)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ProductCategory)("AdventureWorksModel.FK_ProductSubcategory_ProductCategory_ProductCategoryID", "ProductCategory")
			End Get
			Set(ByVal value As EntityReference(Of ProductCategory))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of ProductCategory)("AdventureWorksModel.FK_ProductSubcategory_ProductCategory_ProductCategoryID", "ProductCategory", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="ProductVendor"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class ProductVendor
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new ProductVendor object.
		''' </summary>
		''' <param name="productID">Initial value of the ProductID property.</param>
		''' <param name="vendorID">Initial value of the VendorID property.</param>
		''' <param name="averageLeadTime">Initial value of the AverageLeadTime property.</param>
		''' <param name="standardPrice">Initial value of the StandardPrice property.</param>
		''' <param name="minOrderQty">Initial value of the MinOrderQty property.</param>
		''' <param name="maxOrderQty">Initial value of the MaxOrderQty property.</param>
		''' <param name="unitMeasureCode">Initial value of the UnitMeasureCode property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateProductVendor(ByVal productID As Global.System.Int32, ByVal vendorID As Global.System.Int32, ByVal averageLeadTime As Global.System.Int32, ByVal standardPrice As Global.System.Decimal, ByVal minOrderQty As Global.System.Int32, ByVal maxOrderQty As Global.System.Int32, ByVal unitMeasureCode As Global.System.String, ByVal modifiedDate As Global.System.DateTime) As ProductVendor
			Dim productVendor As New ProductVendor()
			productVendor.ProductID = productID
			productVendor.VendorID = vendorID
			productVendor.AverageLeadTime = averageLeadTime
			productVendor.StandardPrice = standardPrice
			productVendor.MinOrderQty = minOrderQty
			productVendor.MaxOrderQty = maxOrderQty
			productVendor.UnitMeasureCode = unitMeasureCode
			productVendor.ModifiedDate = modifiedDate
			Return productVendor
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductID() As Global.System.Int32
			Get
				Return _ProductID
			End Get
			Set(ByVal value As System.Int32)
				If _ProductID <> value Then
					OnProductIDChanging(value)
					ReportPropertyChanging("ProductID")
					_ProductID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ProductID")
					OnProductIDChanged()
				End If
			End Set
		End Property
		Private _ProductID As Global.System.Int32
		Partial Private Sub OnProductIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property VendorID() As Global.System.Int32
			Get
				Return _VendorID
			End Get
			Set(ByVal value As System.Int32)
				If _VendorID <> value Then
					OnVendorIDChanging(value)
					ReportPropertyChanging("VendorID")
					_VendorID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("VendorID")
					OnVendorIDChanged()
				End If
			End Set
		End Property
		Private _VendorID As Global.System.Int32
		Partial Private Sub OnVendorIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnVendorIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property AverageLeadTime() As Global.System.Int32
			Get
				Return _AverageLeadTime
			End Get
			Set(ByVal value As System.Int32)
				OnAverageLeadTimeChanging(value)
				ReportPropertyChanging("AverageLeadTime")
				_AverageLeadTime = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("AverageLeadTime")
				OnAverageLeadTimeChanged()
			End Set
		End Property
		Private _AverageLeadTime As Global.System.Int32
		Partial Private Sub OnAverageLeadTimeChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnAverageLeadTimeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property StandardPrice() As Global.System.Decimal
			Get
				Return _StandardPrice
			End Get
			Set(ByVal value As System.Decimal)
				OnStandardPriceChanging(value)
				ReportPropertyChanging("StandardPrice")
				_StandardPrice = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("StandardPrice")
				OnStandardPriceChanged()
			End Set
		End Property
		Private _StandardPrice As Global.System.Decimal
		Partial Private Sub OnStandardPriceChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnStandardPriceChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property LastReceiptCost() As Global.System.Decimal?
			Get
				Return _LastReceiptCost
			End Get
			Set(ByVal value? As System.Decimal)
				OnLastReceiptCostChanging(value)
				ReportPropertyChanging("LastReceiptCost")
				_LastReceiptCost = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("LastReceiptCost")
				OnLastReceiptCostChanged()
			End Set
		End Property
		Private _LastReceiptCost? As Global.System.Decimal
		Partial Private Sub OnLastReceiptCostChanging(ByVal value? As Global.System.Decimal)
		End Sub
		Partial Private Sub OnLastReceiptCostChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property LastReceiptDate() As Global.System.DateTime?
			Get
				Return _LastReceiptDate
			End Get
			Set(ByVal value? As System.DateTime)
				OnLastReceiptDateChanging(value)
				ReportPropertyChanging("LastReceiptDate")
				_LastReceiptDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("LastReceiptDate")
				OnLastReceiptDateChanged()
			End Set
		End Property
		Private _LastReceiptDate? As Global.System.DateTime
		Partial Private Sub OnLastReceiptDateChanging(ByVal value? As Global.System.DateTime)
		End Sub
		Partial Private Sub OnLastReceiptDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property MinOrderQty() As Global.System.Int32
			Get
				Return _MinOrderQty
			End Get
			Set(ByVal value As System.Int32)
				OnMinOrderQtyChanging(value)
				ReportPropertyChanging("MinOrderQty")
				_MinOrderQty = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("MinOrderQty")
				OnMinOrderQtyChanged()
			End Set
		End Property
		Private _MinOrderQty As Global.System.Int32
		Partial Private Sub OnMinOrderQtyChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnMinOrderQtyChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property MaxOrderQty() As Global.System.Int32
			Get
				Return _MaxOrderQty
			End Get
			Set(ByVal value As System.Int32)
				OnMaxOrderQtyChanging(value)
				ReportPropertyChanging("MaxOrderQty")
				_MaxOrderQty = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("MaxOrderQty")
				OnMaxOrderQtyChanged()
			End Set
		End Property
		Private _MaxOrderQty As Global.System.Int32
		Partial Private Sub OnMaxOrderQtyChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnMaxOrderQtyChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property OnOrderQty() As Global.System.Int32?
			Get
				Return _OnOrderQty
			End Get
			Set(ByVal value? As System.Int32)
				OnOnOrderQtyChanging(value)
				ReportPropertyChanging("OnOrderQty")
				_OnOrderQty = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("OnOrderQty")
				OnOnOrderQtyChanged()
			End Set
		End Property
		Private _OnOrderQty? As Global.System.Int32
		Partial Private Sub OnOnOrderQtyChanging(ByVal value? As Global.System.Int32)
		End Sub
		Partial Private Sub OnOnOrderQtyChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property UnitMeasureCode() As Global.System.String
			Get
				Return _UnitMeasureCode
			End Get
			Set(ByVal value As System.String)
				OnUnitMeasureCodeChanging(value)
				ReportPropertyChanging("UnitMeasureCode")
				_UnitMeasureCode = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("UnitMeasureCode")
				OnUnitMeasureCodeChanged()
			End Set
		End Property
		Private _UnitMeasureCode As Global.System.String
		Partial Private Sub OnUnitMeasureCodeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnUnitMeasureCodeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductVendor_Product_ProductID", "Product")> _
		Public Property Product() As Product
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ProductVendor_Product_ProductID", "Product").Value
			End Get
			Set(ByVal value As Product)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ProductVendor_Product_ProductID", "Product").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ProductReference() As EntityReference(Of Product)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ProductVendor_Product_ProductID", "Product")
			End Get
			Set(ByVal value As EntityReference(Of Product))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Product)("AdventureWorksModel.FK_ProductVendor_Product_ProductID", "Product", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductVendor_UnitMeasure_UnitMeasureCode", "UnitMeasure")> _
		Public Property UnitMeasure() As UnitMeasure
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of UnitMeasure)("AdventureWorksModel.FK_ProductVendor_UnitMeasure_UnitMeasureCode", "UnitMeasure").Value
			End Get
			Set(ByVal value As UnitMeasure)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of UnitMeasure)("AdventureWorksModel.FK_ProductVendor_UnitMeasure_UnitMeasureCode", "UnitMeasure").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property UnitMeasureReference() As EntityReference(Of UnitMeasure)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of UnitMeasure)("AdventureWorksModel.FK_ProductVendor_UnitMeasure_UnitMeasureCode", "UnitMeasure")
			End Get
			Set(ByVal value As EntityReference(Of UnitMeasure))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of UnitMeasure)("AdventureWorksModel.FK_ProductVendor_UnitMeasure_UnitMeasureCode", "UnitMeasure", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductVendor_Vendor_VendorID", "Vendor")> _
		Public Property Vendor() As Vendor
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Vendor)("AdventureWorksModel.FK_ProductVendor_Vendor_VendorID", "Vendor").Value
			End Get
			Set(ByVal value As Vendor)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Vendor)("AdventureWorksModel.FK_ProductVendor_Vendor_VendorID", "Vendor").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property VendorReference() As EntityReference(Of Vendor)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Vendor)("AdventureWorksModel.FK_ProductVendor_Vendor_VendorID", "Vendor")
			End Get
			Set(ByVal value As EntityReference(Of Vendor))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Vendor)("AdventureWorksModel.FK_ProductVendor_Vendor_VendorID", "Vendor", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="PurchaseOrderDetail"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class PurchaseOrderDetail
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new PurchaseOrderDetail object.
		''' </summary>
		''' <param name="purchaseOrderID">Initial value of the PurchaseOrderID property.</param>
		''' <param name="purchaseOrderDetailID">Initial value of the PurchaseOrderDetailID property.</param>
		''' <param name="dueDate">Initial value of the DueDate property.</param>
		''' <param name="orderQty">Initial value of the OrderQty property.</param>
		''' <param name="productID">Initial value of the ProductID property.</param>
		''' <param name="unitPrice">Initial value of the UnitPrice property.</param>
		''' <param name="lineTotal">Initial value of the LineTotal property.</param>
		''' <param name="receivedQty">Initial value of the ReceivedQty property.</param>
		''' <param name="rejectedQty">Initial value of the RejectedQty property.</param>
		''' <param name="stockedQty">Initial value of the StockedQty property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreatePurchaseOrderDetail(ByVal purchaseOrderID As Global.System.Int32, ByVal purchaseOrderDetailID As Global.System.Int32, ByVal dueDate As Global.System.DateTime, ByVal orderQty As Global.System.Int16, ByVal productID As Global.System.Int32, ByVal unitPrice As Global.System.Decimal, ByVal lineTotal As Global.System.Decimal, ByVal receivedQty As Global.System.Decimal, ByVal rejectedQty As Global.System.Decimal, ByVal stockedQty As Global.System.Decimal, ByVal modifiedDate As Global.System.DateTime) As PurchaseOrderDetail
			Dim purchaseOrderDetail As New PurchaseOrderDetail()
			purchaseOrderDetail.PurchaseOrderID = purchaseOrderID
			purchaseOrderDetail.PurchaseOrderDetailID = purchaseOrderDetailID
			purchaseOrderDetail.DueDate = dueDate
			purchaseOrderDetail.OrderQty = orderQty
			purchaseOrderDetail.ProductID = productID
			purchaseOrderDetail.UnitPrice = unitPrice
			purchaseOrderDetail.LineTotal = lineTotal
			purchaseOrderDetail.ReceivedQty = receivedQty
			purchaseOrderDetail.RejectedQty = rejectedQty
			purchaseOrderDetail.StockedQty = stockedQty
			purchaseOrderDetail.ModifiedDate = modifiedDate
			Return purchaseOrderDetail
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property PurchaseOrderID() As Global.System.Int32
			Get
				Return _PurchaseOrderID
			End Get
			Set(ByVal value As System.Int32)
				If _PurchaseOrderID <> value Then
					OnPurchaseOrderIDChanging(value)
					ReportPropertyChanging("PurchaseOrderID")
					_PurchaseOrderID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("PurchaseOrderID")
					OnPurchaseOrderIDChanged()
				End If
			End Set
		End Property
		Private _PurchaseOrderID As Global.System.Int32
		Partial Private Sub OnPurchaseOrderIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnPurchaseOrderIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property PurchaseOrderDetailID() As Global.System.Int32
			Get
				Return _PurchaseOrderDetailID
			End Get
			Set(ByVal value As System.Int32)
				If _PurchaseOrderDetailID <> value Then
					OnPurchaseOrderDetailIDChanging(value)
					ReportPropertyChanging("PurchaseOrderDetailID")
					_PurchaseOrderDetailID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("PurchaseOrderDetailID")
					OnPurchaseOrderDetailIDChanged()
				End If
			End Set
		End Property
		Private _PurchaseOrderDetailID As Global.System.Int32
		Partial Private Sub OnPurchaseOrderDetailIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnPurchaseOrderDetailIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property DueDate() As Global.System.DateTime
			Get
				Return _DueDate
			End Get
			Set(ByVal value As System.DateTime)
				OnDueDateChanging(value)
				ReportPropertyChanging("DueDate")
				_DueDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("DueDate")
				OnDueDateChanged()
			End Set
		End Property
		Private _DueDate As Global.System.DateTime
		Partial Private Sub OnDueDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnDueDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property OrderQty() As Global.System.Int16
			Get
				Return _OrderQty
			End Get
			Set(ByVal value As System.Int16)
				OnOrderQtyChanging(value)
				ReportPropertyChanging("OrderQty")
				_OrderQty = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("OrderQty")
				OnOrderQtyChanged()
			End Set
		End Property
		Private _OrderQty As Global.System.Int16
		Partial Private Sub OnOrderQtyChanging(ByVal value As Global.System.Int16)
		End Sub
		Partial Private Sub OnOrderQtyChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductID() As Global.System.Int32
			Get
				Return _ProductID
			End Get
			Set(ByVal value As System.Int32)
				OnProductIDChanging(value)
				ReportPropertyChanging("ProductID")
				_ProductID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ProductID")
				OnProductIDChanged()
			End Set
		End Property
		Private _ProductID As Global.System.Int32
		Partial Private Sub OnProductIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property UnitPrice() As Global.System.Decimal
			Get
				Return _UnitPrice
			End Get
			Set(ByVal value As System.Decimal)
				OnUnitPriceChanging(value)
				ReportPropertyChanging("UnitPrice")
				_UnitPrice = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("UnitPrice")
				OnUnitPriceChanged()
			End Set
		End Property
		Private _UnitPrice As Global.System.Decimal
		Partial Private Sub OnUnitPriceChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnUnitPriceChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property LineTotal() As Global.System.Decimal
			Get
				Return _LineTotal
			End Get
			Set(ByVal value As System.Decimal)
				OnLineTotalChanging(value)
				ReportPropertyChanging("LineTotal")
				_LineTotal = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("LineTotal")
				OnLineTotalChanged()
			End Set
		End Property
		Private _LineTotal As Global.System.Decimal
		Partial Private Sub OnLineTotalChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnLineTotalChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ReceivedQty() As Global.System.Decimal
			Get
				Return _ReceivedQty
			End Get
			Set(ByVal value As System.Decimal)
				OnReceivedQtyChanging(value)
				ReportPropertyChanging("ReceivedQty")
				_ReceivedQty = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ReceivedQty")
				OnReceivedQtyChanged()
			End Set
		End Property
		Private _ReceivedQty As Global.System.Decimal
		Partial Private Sub OnReceivedQtyChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnReceivedQtyChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property RejectedQty() As Global.System.Decimal
			Get
				Return _RejectedQty
			End Get
			Set(ByVal value As System.Decimal)
				OnRejectedQtyChanging(value)
				ReportPropertyChanging("RejectedQty")
				_RejectedQty = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("RejectedQty")
				OnRejectedQtyChanged()
			End Set
		End Property
		Private _RejectedQty As Global.System.Decimal
		Partial Private Sub OnRejectedQtyChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnRejectedQtyChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property StockedQty() As Global.System.Decimal
			Get
				Return _StockedQty
			End Get
			Set(ByVal value As System.Decimal)
				OnStockedQtyChanging(value)
				ReportPropertyChanging("StockedQty")
				_StockedQty = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("StockedQty")
				OnStockedQtyChanged()
			End Set
		End Property
		Private _StockedQty As Global.System.Decimal
		Partial Private Sub OnStockedQtyChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnStockedQtyChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_PurchaseOrderDetail_Product_ProductID", "Product")> _
		Public Property Product() As Product
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_PurchaseOrderDetail_Product_ProductID", "Product").Value
			End Get
			Set(ByVal value As Product)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_PurchaseOrderDetail_Product_ProductID", "Product").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ProductReference() As EntityReference(Of Product)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_PurchaseOrderDetail_Product_ProductID", "Product")
			End Get
			Set(ByVal value As EntityReference(Of Product))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Product)("AdventureWorksModel.FK_PurchaseOrderDetail_Product_ProductID", "Product", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID", "PurchaseOrderHeader")> _
		Public Property PurchaseOrderHeader() As PurchaseOrderHeader
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of PurchaseOrderHeader)("AdventureWorksModel.FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID", "PurchaseOrderHeader").Value
			End Get
			Set(ByVal value As PurchaseOrderHeader)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PurchaseOrderHeader)("AdventureWorksModel.FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID", "PurchaseOrderHeader").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property PurchaseOrderHeaderReference() As EntityReference(Of PurchaseOrderHeader)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of PurchaseOrderHeader)("AdventureWorksModel.FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID", "PurchaseOrderHeader")
			End Get
			Set(ByVal value As EntityReference(Of PurchaseOrderHeader))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of PurchaseOrderHeader)("AdventureWorksModel.FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID", "PurchaseOrderHeader", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="PurchaseOrderHeader"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class PurchaseOrderHeader
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new PurchaseOrderHeader object.
		''' </summary>
		''' <param name="purchaseOrderID">Initial value of the PurchaseOrderID property.</param>
		''' <param name="revisionNumber">Initial value of the RevisionNumber property.</param>
		''' <param name="status">Initial value of the Status property.</param>
		''' <param name="employeeID">Initial value of the EmployeeID property.</param>
		''' <param name="vendorID">Initial value of the VendorID property.</param>
		''' <param name="shipMethodID">Initial value of the ShipMethodID property.</param>
		''' <param name="orderDate">Initial value of the OrderDate property.</param>
		''' <param name="subTotal">Initial value of the SubTotal property.</param>
		''' <param name="taxAmt">Initial value of the TaxAmt property.</param>
		''' <param name="freight">Initial value of the Freight property.</param>
		''' <param name="totalDue">Initial value of the TotalDue property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreatePurchaseOrderHeader(ByVal purchaseOrderID As Global.System.Int32, ByVal revisionNumber As Global.System.Byte, ByVal status As Global.System.Byte, ByVal employeeID As Global.System.Int32, ByVal vendorID As Global.System.Int32, ByVal shipMethodID As Global.System.Int32, ByVal orderDate As Global.System.DateTime, ByVal subTotal As Global.System.Decimal, ByVal taxAmt As Global.System.Decimal, ByVal freight As Global.System.Decimal, ByVal totalDue As Global.System.Decimal, ByVal modifiedDate As Global.System.DateTime) As PurchaseOrderHeader
			Dim purchaseOrderHeader As New PurchaseOrderHeader()
			purchaseOrderHeader.PurchaseOrderID = purchaseOrderID
			purchaseOrderHeader.RevisionNumber = revisionNumber
			purchaseOrderHeader.Status = status
			purchaseOrderHeader.EmployeeID = employeeID
			purchaseOrderHeader.VendorID = vendorID
			purchaseOrderHeader.ShipMethodID = shipMethodID
			purchaseOrderHeader.OrderDate = orderDate
			purchaseOrderHeader.SubTotal = subTotal
			purchaseOrderHeader.TaxAmt = taxAmt
			purchaseOrderHeader.Freight = freight
			purchaseOrderHeader.TotalDue = totalDue
			purchaseOrderHeader.ModifiedDate = modifiedDate
			Return purchaseOrderHeader
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property PurchaseOrderID() As Global.System.Int32
			Get
				Return _PurchaseOrderID
			End Get
			Set(ByVal value As System.Int32)
				If _PurchaseOrderID <> value Then
					OnPurchaseOrderIDChanging(value)
					ReportPropertyChanging("PurchaseOrderID")
					_PurchaseOrderID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("PurchaseOrderID")
					OnPurchaseOrderIDChanged()
				End If
			End Set
		End Property
		Private _PurchaseOrderID As Global.System.Int32
		Partial Private Sub OnPurchaseOrderIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnPurchaseOrderIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property RevisionNumber() As Global.System.Byte
			Get
				Return _RevisionNumber
			End Get
			Set(ByVal value As System.Byte)
				OnRevisionNumberChanging(value)
				ReportPropertyChanging("RevisionNumber")
				_RevisionNumber = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("RevisionNumber")
				OnRevisionNumberChanged()
			End Set
		End Property
		Private _RevisionNumber As Global.System.Byte
		Partial Private Sub OnRevisionNumberChanging(ByVal value As Global.System.Byte)
		End Sub
		Partial Private Sub OnRevisionNumberChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Status() As Global.System.Byte
			Get
				Return _Status
			End Get
			Set(ByVal value As System.Byte)
				OnStatusChanging(value)
				ReportPropertyChanging("Status")
				_Status = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("Status")
				OnStatusChanged()
			End Set
		End Property
		Private _Status As Global.System.Byte
		Partial Private Sub OnStatusChanging(ByVal value As Global.System.Byte)
		End Sub
		Partial Private Sub OnStatusChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property EmployeeID() As Global.System.Int32
			Get
				Return _EmployeeID
			End Get
			Set(ByVal value As System.Int32)
				OnEmployeeIDChanging(value)
				ReportPropertyChanging("EmployeeID")
				_EmployeeID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("EmployeeID")
				OnEmployeeIDChanged()
			End Set
		End Property
		Private _EmployeeID As Global.System.Int32
		Partial Private Sub OnEmployeeIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnEmployeeIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property VendorID() As Global.System.Int32
			Get
				Return _VendorID
			End Get
			Set(ByVal value As System.Int32)
				OnVendorIDChanging(value)
				ReportPropertyChanging("VendorID")
				_VendorID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("VendorID")
				OnVendorIDChanged()
			End Set
		End Property
		Private _VendorID As Global.System.Int32
		Partial Private Sub OnVendorIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnVendorIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ShipMethodID() As Global.System.Int32
			Get
				Return _ShipMethodID
			End Get
			Set(ByVal value As System.Int32)
				OnShipMethodIDChanging(value)
				ReportPropertyChanging("ShipMethodID")
				_ShipMethodID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ShipMethodID")
				OnShipMethodIDChanged()
			End Set
		End Property
		Private _ShipMethodID As Global.System.Int32
		Partial Private Sub OnShipMethodIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnShipMethodIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property OrderDate() As Global.System.DateTime
			Get
				Return _OrderDate
			End Get
			Set(ByVal value As System.DateTime)
				OnOrderDateChanging(value)
				ReportPropertyChanging("OrderDate")
				_OrderDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("OrderDate")
				OnOrderDateChanged()
			End Set
		End Property
		Private _OrderDate As Global.System.DateTime
		Partial Private Sub OnOrderDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnOrderDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property ShipDate() As Global.System.DateTime?
			Get
				Return _ShipDate
			End Get
			Set(ByVal value? As System.DateTime)
				OnShipDateChanging(value)
				ReportPropertyChanging("ShipDate")
				_ShipDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ShipDate")
				OnShipDateChanged()
			End Set
		End Property
		Private _ShipDate? As Global.System.DateTime
		Partial Private Sub OnShipDateChanging(ByVal value? As Global.System.DateTime)
		End Sub
		Partial Private Sub OnShipDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property SubTotal() As Global.System.Decimal
			Get
				Return _SubTotal
			End Get
			Set(ByVal value As System.Decimal)
				OnSubTotalChanging(value)
				ReportPropertyChanging("SubTotal")
				_SubTotal = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("SubTotal")
				OnSubTotalChanged()
			End Set
		End Property
		Private _SubTotal As Global.System.Decimal
		Partial Private Sub OnSubTotalChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnSubTotalChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property TaxAmt() As Global.System.Decimal
			Get
				Return _TaxAmt
			End Get
			Set(ByVal value As System.Decimal)
				OnTaxAmtChanging(value)
				ReportPropertyChanging("TaxAmt")
				_TaxAmt = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("TaxAmt")
				OnTaxAmtChanged()
			End Set
		End Property
		Private _TaxAmt As Global.System.Decimal
		Partial Private Sub OnTaxAmtChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnTaxAmtChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Freight() As Global.System.Decimal
			Get
				Return _Freight
			End Get
			Set(ByVal value As System.Decimal)
				OnFreightChanging(value)
				ReportPropertyChanging("Freight")
				_Freight = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("Freight")
				OnFreightChanged()
			End Set
		End Property
		Private _Freight As Global.System.Decimal
		Partial Private Sub OnFreightChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnFreightChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property TotalDue() As Global.System.Decimal
			Get
				Return _TotalDue
			End Get
			Set(ByVal value As System.Decimal)
				OnTotalDueChanging(value)
				ReportPropertyChanging("TotalDue")
				_TotalDue = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("TotalDue")
				OnTotalDueChanged()
			End Set
		End Property
		Private _TotalDue As Global.System.Decimal
		Partial Private Sub OnTotalDueChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnTotalDueChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_PurchaseOrderHeader_Employee_EmployeeID", "Employee")> _
		Public Property Employee() As Employee
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Employee)("AdventureWorksModel.FK_PurchaseOrderHeader_Employee_EmployeeID", "Employee").Value
			End Get
			Set(ByVal value As Employee)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Employee)("AdventureWorksModel.FK_PurchaseOrderHeader_Employee_EmployeeID", "Employee").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property EmployeeReference() As EntityReference(Of Employee)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Employee)("AdventureWorksModel.FK_PurchaseOrderHeader_Employee_EmployeeID", "Employee")
			End Get
			Set(ByVal value As EntityReference(Of Employee))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Employee)("AdventureWorksModel.FK_PurchaseOrderHeader_Employee_EmployeeID", "Employee", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID", "PurchaseOrderDetail")> _
		Public Property PurchaseOrderDetail() As EntityCollection(Of PurchaseOrderDetail)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of PurchaseOrderDetail)("AdventureWorksModel.FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID", "PurchaseOrderDetail")
			End Get
			Set(ByVal value As EntityCollection(Of PurchaseOrderDetail))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of PurchaseOrderDetail)("AdventureWorksModel.FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID", "PurchaseOrderDetail", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_PurchaseOrderHeader_ShipMethod_ShipMethodID", "ShipMethod")> _
		Public Property ShipMethod() As ShipMethod
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ShipMethod)("AdventureWorksModel.FK_PurchaseOrderHeader_ShipMethod_ShipMethodID", "ShipMethod").Value
			End Get
			Set(ByVal value As ShipMethod)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of ShipMethod)("AdventureWorksModel.FK_PurchaseOrderHeader_ShipMethod_ShipMethodID", "ShipMethod").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ShipMethodReference() As EntityReference(Of ShipMethod)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ShipMethod)("AdventureWorksModel.FK_PurchaseOrderHeader_ShipMethod_ShipMethodID", "ShipMethod")
			End Get
			Set(ByVal value As EntityReference(Of ShipMethod))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of ShipMethod)("AdventureWorksModel.FK_PurchaseOrderHeader_ShipMethod_ShipMethodID", "ShipMethod", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_PurchaseOrderHeader_Vendor_VendorID", "Vendor")> _
		Public Property Vendor() As Vendor
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Vendor)("AdventureWorksModel.FK_PurchaseOrderHeader_Vendor_VendorID", "Vendor").Value
			End Get
			Set(ByVal value As Vendor)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Vendor)("AdventureWorksModel.FK_PurchaseOrderHeader_Vendor_VendorID", "Vendor").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property VendorReference() As EntityReference(Of Vendor)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Vendor)("AdventureWorksModel.FK_PurchaseOrderHeader_Vendor_VendorID", "Vendor")
			End Get
			Set(ByVal value As EntityReference(Of Vendor))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Vendor)("AdventureWorksModel.FK_PurchaseOrderHeader_Vendor_VendorID", "Vendor", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="SalesOrderDetail"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class SalesOrderDetail
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new SalesOrderDetail object.
		''' </summary>
		''' <param name="salesOrderID">Initial value of the SalesOrderID property.</param>
		''' <param name="salesOrderDetailID">Initial value of the SalesOrderDetailID property.</param>
		''' <param name="orderQty">Initial value of the OrderQty property.</param>
		''' <param name="productID">Initial value of the ProductID property.</param>
		''' <param name="specialOfferID">Initial value of the SpecialOfferID property.</param>
		''' <param name="unitPrice">Initial value of the UnitPrice property.</param>
		''' <param name="unitPriceDiscount">Initial value of the UnitPriceDiscount property.</param>
		''' <param name="lineTotal">Initial value of the LineTotal property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateSalesOrderDetail(ByVal salesOrderID As Global.System.Int32, ByVal salesOrderDetailID As Global.System.Int32, ByVal orderQty As Global.System.Int16, ByVal productID As Global.System.Int32, ByVal specialOfferID As Global.System.Int32, ByVal unitPrice As Global.System.Decimal, ByVal unitPriceDiscount As Global.System.Decimal, ByVal lineTotal As Global.System.Decimal, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As SalesOrderDetail
			Dim salesOrderDetail As New SalesOrderDetail()
			salesOrderDetail.SalesOrderID = salesOrderID
			salesOrderDetail.SalesOrderDetailID = salesOrderDetailID
			salesOrderDetail.OrderQty = orderQty
			salesOrderDetail.ProductID = productID
			salesOrderDetail.SpecialOfferID = specialOfferID
			salesOrderDetail.UnitPrice = unitPrice
			salesOrderDetail.UnitPriceDiscount = unitPriceDiscount
			salesOrderDetail.LineTotal = lineTotal
			salesOrderDetail.rowguid = rowguid
			salesOrderDetail.ModifiedDate = modifiedDate
			Return salesOrderDetail
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property SalesOrderID() As Global.System.Int32
			Get
				Return _SalesOrderID
			End Get
			Set(ByVal value As System.Int32)
				If _SalesOrderID <> value Then
					OnSalesOrderIDChanging(value)
					ReportPropertyChanging("SalesOrderID")
					_SalesOrderID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("SalesOrderID")
					OnSalesOrderIDChanged()
				End If
			End Set
		End Property
		Private _SalesOrderID As Global.System.Int32
		Partial Private Sub OnSalesOrderIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnSalesOrderIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property SalesOrderDetailID() As Global.System.Int32
			Get
				Return _SalesOrderDetailID
			End Get
			Set(ByVal value As System.Int32)
				If _SalesOrderDetailID <> value Then
					OnSalesOrderDetailIDChanging(value)
					ReportPropertyChanging("SalesOrderDetailID")
					_SalesOrderDetailID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("SalesOrderDetailID")
					OnSalesOrderDetailIDChanged()
				End If
			End Set
		End Property
		Private _SalesOrderDetailID As Global.System.Int32
		Partial Private Sub OnSalesOrderDetailIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnSalesOrderDetailIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property CarrierTrackingNumber() As Global.System.String
			Get
				Return _CarrierTrackingNumber
			End Get
			Set(ByVal value As System.String)
				OnCarrierTrackingNumberChanging(value)
				ReportPropertyChanging("CarrierTrackingNumber")
				_CarrierTrackingNumber = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("CarrierTrackingNumber")
				OnCarrierTrackingNumberChanged()
			End Set
		End Property
		Private _CarrierTrackingNumber As Global.System.String
		Partial Private Sub OnCarrierTrackingNumberChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnCarrierTrackingNumberChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property OrderQty() As Global.System.Int16
			Get
				Return _OrderQty
			End Get
			Set(ByVal value As System.Int16)
				OnOrderQtyChanging(value)
				ReportPropertyChanging("OrderQty")
				_OrderQty = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("OrderQty")
				OnOrderQtyChanged()
			End Set
		End Property
		Private _OrderQty As Global.System.Int16
		Partial Private Sub OnOrderQtyChanging(ByVal value As Global.System.Int16)
		End Sub
		Partial Private Sub OnOrderQtyChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductID() As Global.System.Int32
			Get
				Return _ProductID
			End Get
			Set(ByVal value As System.Int32)
				OnProductIDChanging(value)
				ReportPropertyChanging("ProductID")
				_ProductID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ProductID")
				OnProductIDChanged()
			End Set
		End Property
		Private _ProductID As Global.System.Int32
		Partial Private Sub OnProductIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property SpecialOfferID() As Global.System.Int32
			Get
				Return _SpecialOfferID
			End Get
			Set(ByVal value As System.Int32)
				OnSpecialOfferIDChanging(value)
				ReportPropertyChanging("SpecialOfferID")
				_SpecialOfferID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("SpecialOfferID")
				OnSpecialOfferIDChanged()
			End Set
		End Property
		Private _SpecialOfferID As Global.System.Int32
		Partial Private Sub OnSpecialOfferIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnSpecialOfferIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property UnitPrice() As Global.System.Decimal
			Get
				Return _UnitPrice
			End Get
			Set(ByVal value As System.Decimal)
				OnUnitPriceChanging(value)
				ReportPropertyChanging("UnitPrice")
				_UnitPrice = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("UnitPrice")
				OnUnitPriceChanged()
			End Set
		End Property
		Private _UnitPrice As Global.System.Decimal
		Partial Private Sub OnUnitPriceChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnUnitPriceChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property UnitPriceDiscount() As Global.System.Decimal
			Get
				Return _UnitPriceDiscount
			End Get
			Set(ByVal value As System.Decimal)
				OnUnitPriceDiscountChanging(value)
				ReportPropertyChanging("UnitPriceDiscount")
				_UnitPriceDiscount = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("UnitPriceDiscount")
				OnUnitPriceDiscountChanged()
			End Set
		End Property
		Private _UnitPriceDiscount As Global.System.Decimal
		Partial Private Sub OnUnitPriceDiscountChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnUnitPriceDiscountChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property LineTotal() As Global.System.Decimal
			Get
				Return _LineTotal
			End Get
			Set(ByVal value As System.Decimal)
				OnLineTotalChanging(value)
				ReportPropertyChanging("LineTotal")
				_LineTotal = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("LineTotal")
				OnLineTotalChanged()
			End Set
		End Property
		Private _LineTotal As Global.System.Decimal
		Partial Private Sub OnLineTotalChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnLineTotalChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID", "SalesOrderHeader")> _
		Public Property SalesOrderHeader() As SalesOrderHeader
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID", "SalesOrderHeader").Value
			End Get
			Set(ByVal value As SalesOrderHeader)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID", "SalesOrderHeader").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property SalesOrderHeaderReference() As EntityReference(Of SalesOrderHeader)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID", "SalesOrderHeader")
			End Get
			Set(ByVal value As EntityReference(Of SalesOrderHeader))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID", "SalesOrderHeader", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID", "SpecialOfferProduct")> _
		Public Property SpecialOfferProduct() As SpecialOfferProduct
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SpecialOfferProduct)("AdventureWorksModel.FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID", "SpecialOfferProduct").Value
			End Get
			Set(ByVal value As SpecialOfferProduct)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SpecialOfferProduct)("AdventureWorksModel.FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID", "SpecialOfferProduct").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property SpecialOfferProductReference() As EntityReference(Of SpecialOfferProduct)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SpecialOfferProduct)("AdventureWorksModel.FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID", "SpecialOfferProduct")
			End Get
			Set(ByVal value As EntityReference(Of SpecialOfferProduct))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of SpecialOfferProduct)("AdventureWorksModel.FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID", "SpecialOfferProduct", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="SalesOrderHeader"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class SalesOrderHeader
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new SalesOrderHeader object.
		''' </summary>
		''' <param name="salesOrderID">Initial value of the SalesOrderID property.</param>
		''' <param name="revisionNumber">Initial value of the RevisionNumber property.</param>
		''' <param name="orderDate">Initial value of the OrderDate property.</param>
		''' <param name="dueDate">Initial value of the DueDate property.</param>
		''' <param name="status">Initial value of the Status property.</param>
		''' <param name="onlineOrderFlag">Initial value of the OnlineOrderFlag property.</param>
		''' <param name="salesOrderNumber">Initial value of the SalesOrderNumber property.</param>
		''' <param name="customerID">Initial value of the CustomerID property.</param>
		''' <param name="contactID">Initial value of the ContactID property.</param>
		''' <param name="billToAddressID">Initial value of the BillToAddressID property.</param>
		''' <param name="shipToAddressID">Initial value of the ShipToAddressID property.</param>
		''' <param name="shipMethodID">Initial value of the ShipMethodID property.</param>
		''' <param name="subTotal">Initial value of the SubTotal property.</param>
		''' <param name="taxAmt">Initial value of the TaxAmt property.</param>
		''' <param name="freight">Initial value of the Freight property.</param>
		''' <param name="totalDue">Initial value of the TotalDue property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateSalesOrderHeader(ByVal salesOrderID As Global.System.Int32, ByVal revisionNumber As Global.System.Byte, ByVal orderDate As Global.System.DateTime, ByVal dueDate As Global.System.DateTime, ByVal status As Global.System.Byte, ByVal onlineOrderFlag As Global.System.Boolean, ByVal salesOrderNumber As Global.System.String, ByVal customerID As Global.System.Int32, ByVal contactID As Global.System.Int32, ByVal billToAddressID As Global.System.Int32, ByVal shipToAddressID As Global.System.Int32, ByVal shipMethodID As Global.System.Int32, ByVal subTotal As Global.System.Decimal, ByVal taxAmt As Global.System.Decimal, ByVal freight As Global.System.Decimal, ByVal totalDue As Global.System.Decimal, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As SalesOrderHeader
			Dim salesOrderHeader As New SalesOrderHeader()
			salesOrderHeader.SalesOrderID = salesOrderID
			salesOrderHeader.RevisionNumber = revisionNumber
			salesOrderHeader.OrderDate = orderDate
			salesOrderHeader.DueDate = dueDate
			salesOrderHeader.Status = status
			salesOrderHeader.OnlineOrderFlag = onlineOrderFlag
			salesOrderHeader.SalesOrderNumber = salesOrderNumber
			salesOrderHeader.CustomerID = customerID
			salesOrderHeader.ContactID = contactID
			salesOrderHeader.BillToAddressID = billToAddressID
			salesOrderHeader.ShipToAddressID = shipToAddressID
			salesOrderHeader.ShipMethodID = shipMethodID
			salesOrderHeader.SubTotal = subTotal
			salesOrderHeader.TaxAmt = taxAmt
			salesOrderHeader.Freight = freight
			salesOrderHeader.TotalDue = totalDue
			salesOrderHeader.rowguid = rowguid
			salesOrderHeader.ModifiedDate = modifiedDate
			Return salesOrderHeader
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property SalesOrderID() As Global.System.Int32
			Get
				Return _SalesOrderID
			End Get
			Set(ByVal value As System.Int32)
				If _SalesOrderID <> value Then
					OnSalesOrderIDChanging(value)
					ReportPropertyChanging("SalesOrderID")
					_SalesOrderID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("SalesOrderID")
					OnSalesOrderIDChanged()
				End If
			End Set
		End Property
		Private _SalesOrderID As Global.System.Int32
		Partial Private Sub OnSalesOrderIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnSalesOrderIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property RevisionNumber() As Global.System.Byte
			Get
				Return _RevisionNumber
			End Get
			Set(ByVal value As System.Byte)
				OnRevisionNumberChanging(value)
				ReportPropertyChanging("RevisionNumber")
				_RevisionNumber = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("RevisionNumber")
				OnRevisionNumberChanged()
			End Set
		End Property
		Private _RevisionNumber As Global.System.Byte
		Partial Private Sub OnRevisionNumberChanging(ByVal value As Global.System.Byte)
		End Sub
		Partial Private Sub OnRevisionNumberChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property OrderDate() As Global.System.DateTime
			Get
				Return _OrderDate
			End Get
			Set(ByVal value As System.DateTime)
				OnOrderDateChanging(value)
				ReportPropertyChanging("OrderDate")
				_OrderDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("OrderDate")
				OnOrderDateChanged()
			End Set
		End Property
		Private _OrderDate As Global.System.DateTime
		Partial Private Sub OnOrderDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnOrderDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property DueDate() As Global.System.DateTime
			Get
				Return _DueDate
			End Get
			Set(ByVal value As System.DateTime)
				OnDueDateChanging(value)
				ReportPropertyChanging("DueDate")
				_DueDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("DueDate")
				OnDueDateChanged()
			End Set
		End Property
		Private _DueDate As Global.System.DateTime
		Partial Private Sub OnDueDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnDueDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property ShipDate() As Global.System.DateTime?
			Get
				Return _ShipDate
			End Get
			Set(ByVal value? As System.DateTime)
				OnShipDateChanging(value)
				ReportPropertyChanging("ShipDate")
				_ShipDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ShipDate")
				OnShipDateChanged()
			End Set
		End Property
		Private _ShipDate? As Global.System.DateTime
		Partial Private Sub OnShipDateChanging(ByVal value? As Global.System.DateTime)
		End Sub
		Partial Private Sub OnShipDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Status() As Global.System.Byte
			Get
				Return _Status
			End Get
			Set(ByVal value As System.Byte)
				OnStatusChanging(value)
				ReportPropertyChanging("Status")
				_Status = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("Status")
				OnStatusChanged()
			End Set
		End Property
		Private _Status As Global.System.Byte
		Partial Private Sub OnStatusChanging(ByVal value As Global.System.Byte)
		End Sub
		Partial Private Sub OnStatusChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property OnlineOrderFlag() As Global.System.Boolean
			Get
				Return _OnlineOrderFlag
			End Get
			Set(ByVal value As System.Boolean)
				OnOnlineOrderFlagChanging(value)
				ReportPropertyChanging("OnlineOrderFlag")
				_OnlineOrderFlag = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("OnlineOrderFlag")
				OnOnlineOrderFlagChanged()
			End Set
		End Property
		Private _OnlineOrderFlag As Global.System.Boolean
		Partial Private Sub OnOnlineOrderFlagChanging(ByVal value As Global.System.Boolean)
		End Sub
		Partial Private Sub OnOnlineOrderFlagChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property SalesOrderNumber() As Global.System.String
			Get
				Return _SalesOrderNumber
			End Get
			Set(ByVal value As System.String)
				OnSalesOrderNumberChanging(value)
				ReportPropertyChanging("SalesOrderNumber")
				_SalesOrderNumber = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("SalesOrderNumber")
				OnSalesOrderNumberChanged()
			End Set
		End Property
		Private _SalesOrderNumber As Global.System.String
		Partial Private Sub OnSalesOrderNumberChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnSalesOrderNumberChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property PurchaseOrderNumber() As Global.System.String
			Get
				Return _PurchaseOrderNumber
			End Get
			Set(ByVal value As System.String)
				OnPurchaseOrderNumberChanging(value)
				ReportPropertyChanging("PurchaseOrderNumber")
				_PurchaseOrderNumber = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("PurchaseOrderNumber")
				OnPurchaseOrderNumberChanged()
			End Set
		End Property
		Private _PurchaseOrderNumber As Global.System.String
		Partial Private Sub OnPurchaseOrderNumberChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnPurchaseOrderNumberChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property AccountNumber() As Global.System.String
			Get
				Return _AccountNumber
			End Get
			Set(ByVal value As System.String)
				OnAccountNumberChanging(value)
				ReportPropertyChanging("AccountNumber")
				_AccountNumber = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("AccountNumber")
				OnAccountNumberChanged()
			End Set
		End Property
		Private _AccountNumber As Global.System.String
		Partial Private Sub OnAccountNumberChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnAccountNumberChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property CustomerID() As Global.System.Int32
			Get
				Return _CustomerID
			End Get
			Set(ByVal value As System.Int32)
				OnCustomerIDChanging(value)
				ReportPropertyChanging("CustomerID")
				_CustomerID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("CustomerID")
				OnCustomerIDChanged()
			End Set
		End Property
		Private _CustomerID As Global.System.Int32
		Partial Private Sub OnCustomerIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnCustomerIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ContactID() As Global.System.Int32
			Get
				Return _ContactID
			End Get
			Set(ByVal value As System.Int32)
				OnContactIDChanging(value)
				ReportPropertyChanging("ContactID")
				_ContactID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ContactID")
				OnContactIDChanged()
			End Set
		End Property
		Private _ContactID As Global.System.Int32
		Partial Private Sub OnContactIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnContactIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property SalesPersonID() As Global.System.Int32?
			Get
				Return _SalesPersonID
			End Get
			Set(ByVal value? As System.Int32)
				OnSalesPersonIDChanging(value)
				ReportPropertyChanging("SalesPersonID")
				_SalesPersonID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("SalesPersonID")
				OnSalesPersonIDChanged()
			End Set
		End Property
		Private _SalesPersonID? As Global.System.Int32
		Partial Private Sub OnSalesPersonIDChanging(ByVal value? As Global.System.Int32)
		End Sub
		Partial Private Sub OnSalesPersonIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property TerritoryID() As Global.System.Int32?
			Get
				Return _TerritoryID
			End Get
			Set(ByVal value? As System.Int32)
				OnTerritoryIDChanging(value)
				ReportPropertyChanging("TerritoryID")
				_TerritoryID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("TerritoryID")
				OnTerritoryIDChanged()
			End Set
		End Property
		Private _TerritoryID? As Global.System.Int32
		Partial Private Sub OnTerritoryIDChanging(ByVal value? As Global.System.Int32)
		End Sub
		Partial Private Sub OnTerritoryIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property BillToAddressID() As Global.System.Int32
			Get
				Return _BillToAddressID
			End Get
			Set(ByVal value As System.Int32)
				OnBillToAddressIDChanging(value)
				ReportPropertyChanging("BillToAddressID")
				_BillToAddressID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("BillToAddressID")
				OnBillToAddressIDChanged()
			End Set
		End Property
		Private _BillToAddressID As Global.System.Int32
		Partial Private Sub OnBillToAddressIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnBillToAddressIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ShipToAddressID() As Global.System.Int32
			Get
				Return _ShipToAddressID
			End Get
			Set(ByVal value As System.Int32)
				OnShipToAddressIDChanging(value)
				ReportPropertyChanging("ShipToAddressID")
				_ShipToAddressID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ShipToAddressID")
				OnShipToAddressIDChanged()
			End Set
		End Property
		Private _ShipToAddressID As Global.System.Int32
		Partial Private Sub OnShipToAddressIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnShipToAddressIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ShipMethodID() As Global.System.Int32
			Get
				Return _ShipMethodID
			End Get
			Set(ByVal value As System.Int32)
				OnShipMethodIDChanging(value)
				ReportPropertyChanging("ShipMethodID")
				_ShipMethodID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ShipMethodID")
				OnShipMethodIDChanged()
			End Set
		End Property
		Private _ShipMethodID As Global.System.Int32
		Partial Private Sub OnShipMethodIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnShipMethodIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property CreditCardID() As Global.System.Int32?
			Get
				Return _CreditCardID
			End Get
			Set(ByVal value? As System.Int32)
				OnCreditCardIDChanging(value)
				ReportPropertyChanging("CreditCardID")
				_CreditCardID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("CreditCardID")
				OnCreditCardIDChanged()
			End Set
		End Property
		Private _CreditCardID? As Global.System.Int32
		Partial Private Sub OnCreditCardIDChanging(ByVal value? As Global.System.Int32)
		End Sub
		Partial Private Sub OnCreditCardIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property CreditCardApprovalCode() As Global.System.String
			Get
				Return _CreditCardApprovalCode
			End Get
			Set(ByVal value As System.String)
				OnCreditCardApprovalCodeChanging(value)
				ReportPropertyChanging("CreditCardApprovalCode")
				_CreditCardApprovalCode = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("CreditCardApprovalCode")
				OnCreditCardApprovalCodeChanged()
			End Set
		End Property
		Private _CreditCardApprovalCode As Global.System.String
		Partial Private Sub OnCreditCardApprovalCodeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnCreditCardApprovalCodeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property CurrencyRateID() As Global.System.Int32?
			Get
				Return _CurrencyRateID
			End Get
			Set(ByVal value? As System.Int32)
				OnCurrencyRateIDChanging(value)
				ReportPropertyChanging("CurrencyRateID")
				_CurrencyRateID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("CurrencyRateID")
				OnCurrencyRateIDChanged()
			End Set
		End Property
		Private _CurrencyRateID? As Global.System.Int32
		Partial Private Sub OnCurrencyRateIDChanging(ByVal value? As Global.System.Int32)
		End Sub
		Partial Private Sub OnCurrencyRateIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property SubTotal() As Global.System.Decimal
			Get
				Return _SubTotal
			End Get
			Set(ByVal value As System.Decimal)
				OnSubTotalChanging(value)
				ReportPropertyChanging("SubTotal")
				_SubTotal = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("SubTotal")
				OnSubTotalChanged()
			End Set
		End Property
		Private _SubTotal As Global.System.Decimal
		Partial Private Sub OnSubTotalChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnSubTotalChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property TaxAmt() As Global.System.Decimal
			Get
				Return _TaxAmt
			End Get
			Set(ByVal value As System.Decimal)
				OnTaxAmtChanging(value)
				ReportPropertyChanging("TaxAmt")
				_TaxAmt = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("TaxAmt")
				OnTaxAmtChanged()
			End Set
		End Property
		Private _TaxAmt As Global.System.Decimal
		Partial Private Sub OnTaxAmtChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnTaxAmtChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Freight() As Global.System.Decimal
			Get
				Return _Freight
			End Get
			Set(ByVal value As System.Decimal)
				OnFreightChanging(value)
				ReportPropertyChanging("Freight")
				_Freight = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("Freight")
				OnFreightChanged()
			End Set
		End Property
		Private _Freight As Global.System.Decimal
		Partial Private Sub OnFreightChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnFreightChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property TotalDue() As Global.System.Decimal
			Get
				Return _TotalDue
			End Get
			Set(ByVal value As System.Decimal)
				OnTotalDueChanging(value)
				ReportPropertyChanging("TotalDue")
				_TotalDue = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("TotalDue")
				OnTotalDueChanged()
			End Set
		End Property
		Private _TotalDue As Global.System.Decimal
		Partial Private Sub OnTotalDueChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnTotalDueChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property Comment() As Global.System.String
			Get
				Return _Comment
			End Get
			Set(ByVal value As System.String)
				OnCommentChanging(value)
				ReportPropertyChanging("Comment")
				_Comment = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("Comment")
				OnCommentChanged()
			End Set
		End Property
		Private _Comment As Global.System.String
		Partial Private Sub OnCommentChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnCommentChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderHeader_Address_BillToAddressID", "Address")> _
		Public Property Address() As Address
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Address)("AdventureWorksModel.FK_SalesOrderHeader_Address_BillToAddressID", "Address").Value
			End Get
			Set(ByVal value As Address)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Address)("AdventureWorksModel.FK_SalesOrderHeader_Address_BillToAddressID", "Address").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property AddressReference() As EntityReference(Of Address)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Address)("AdventureWorksModel.FK_SalesOrderHeader_Address_BillToAddressID", "Address")
			End Get
			Set(ByVal value As EntityReference(Of Address))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Address)("AdventureWorksModel.FK_SalesOrderHeader_Address_BillToAddressID", "Address", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderHeader_Address_ShipToAddressID", "Address")> _
		Public Property Address1() As Address
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Address)("AdventureWorksModel.FK_SalesOrderHeader_Address_ShipToAddressID", "Address").Value
			End Get
			Set(ByVal value As Address)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Address)("AdventureWorksModel.FK_SalesOrderHeader_Address_ShipToAddressID", "Address").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property Address1Reference() As EntityReference(Of Address)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Address)("AdventureWorksModel.FK_SalesOrderHeader_Address_ShipToAddressID", "Address")
			End Get
			Set(ByVal value As EntityReference(Of Address))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Address)("AdventureWorksModel.FK_SalesOrderHeader_Address_ShipToAddressID", "Address", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderHeader_Contact_ContactID", "Contact")> _
		Public Property Contact() As Contact
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Contact)("AdventureWorksModel.FK_SalesOrderHeader_Contact_ContactID", "Contact").Value
			End Get
			Set(ByVal value As Contact)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Contact)("AdventureWorksModel.FK_SalesOrderHeader_Contact_ContactID", "Contact").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ContactReference() As EntityReference(Of Contact)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Contact)("AdventureWorksModel.FK_SalesOrderHeader_Contact_ContactID", "Contact")
			End Get
			Set(ByVal value As EntityReference(Of Contact))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Contact)("AdventureWorksModel.FK_SalesOrderHeader_Contact_ContactID", "Contact", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderHeader_ShipMethod_ShipMethodID", "ShipMethod")> _
		Public Property ShipMethod() As ShipMethod
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ShipMethod)("AdventureWorksModel.FK_SalesOrderHeader_ShipMethod_ShipMethodID", "ShipMethod").Value
			End Get
			Set(ByVal value As ShipMethod)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of ShipMethod)("AdventureWorksModel.FK_SalesOrderHeader_ShipMethod_ShipMethodID", "ShipMethod").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ShipMethodReference() As EntityReference(Of ShipMethod)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ShipMethod)("AdventureWorksModel.FK_SalesOrderHeader_ShipMethod_ShipMethodID", "ShipMethod")
			End Get
			Set(ByVal value As EntityReference(Of ShipMethod))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of ShipMethod)("AdventureWorksModel.FK_SalesOrderHeader_ShipMethod_ShipMethodID", "ShipMethod", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderHeader_CreditCard_CreditCardID", "CreditCard")> _
		Public Property CreditCard() As CreditCard
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of CreditCard)("AdventureWorksModel.FK_SalesOrderHeader_CreditCard_CreditCardID", "CreditCard").Value
			End Get
			Set(ByVal value As CreditCard)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of CreditCard)("AdventureWorksModel.FK_SalesOrderHeader_CreditCard_CreditCardID", "CreditCard").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property CreditCardReference() As EntityReference(Of CreditCard)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of CreditCard)("AdventureWorksModel.FK_SalesOrderHeader_CreditCard_CreditCardID", "CreditCard")
			End Get
			Set(ByVal value As EntityReference(Of CreditCard))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of CreditCard)("AdventureWorksModel.FK_SalesOrderHeader_CreditCard_CreditCardID", "CreditCard", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderHeader_CurrencyRate_CurrencyRateID", "CurrencyRate")> _
		Public Property CurrencyRate() As CurrencyRate
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of CurrencyRate)("AdventureWorksModel.FK_SalesOrderHeader_CurrencyRate_CurrencyRateID", "CurrencyRate").Value
			End Get
			Set(ByVal value As CurrencyRate)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of CurrencyRate)("AdventureWorksModel.FK_SalesOrderHeader_CurrencyRate_CurrencyRateID", "CurrencyRate").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property CurrencyRateReference() As EntityReference(Of CurrencyRate)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of CurrencyRate)("AdventureWorksModel.FK_SalesOrderHeader_CurrencyRate_CurrencyRateID", "CurrencyRate")
			End Get
			Set(ByVal value As EntityReference(Of CurrencyRate))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of CurrencyRate)("AdventureWorksModel.FK_SalesOrderHeader_CurrencyRate_CurrencyRateID", "CurrencyRate", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderHeader_Customer_CustomerID", "Customer")> _
		Public Property Customer() As Customer
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Customer)("AdventureWorksModel.FK_SalesOrderHeader_Customer_CustomerID", "Customer").Value
			End Get
			Set(ByVal value As Customer)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Customer)("AdventureWorksModel.FK_SalesOrderHeader_Customer_CustomerID", "Customer").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property CustomerReference() As EntityReference(Of Customer)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Customer)("AdventureWorksModel.FK_SalesOrderHeader_Customer_CustomerID", "Customer")
			End Get
			Set(ByVal value As EntityReference(Of Customer))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Customer)("AdventureWorksModel.FK_SalesOrderHeader_Customer_CustomerID", "Customer", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID", "SalesOrderDetail")> _
		Public Property SalesOrderDetail() As EntityCollection(Of SalesOrderDetail)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of SalesOrderDetail)("AdventureWorksModel.FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID", "SalesOrderDetail")
			End Get
			Set(ByVal value As EntityCollection(Of SalesOrderDetail))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SalesOrderDetail)("AdventureWorksModel.FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID", "SalesOrderDetail", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderHeader_SalesPerson_SalesPersonID", "SalesPerson")> _
		Public Property SalesPerson() As SalesPerson
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesPerson)("AdventureWorksModel.FK_SalesOrderHeader_SalesPerson_SalesPersonID", "SalesPerson").Value
			End Get
			Set(ByVal value As SalesPerson)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SalesPerson)("AdventureWorksModel.FK_SalesOrderHeader_SalesPerson_SalesPersonID", "SalesPerson").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property SalesPersonReference() As EntityReference(Of SalesPerson)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesPerson)("AdventureWorksModel.FK_SalesOrderHeader_SalesPerson_SalesPersonID", "SalesPerson")
			End Get
			Set(ByVal value As EntityReference(Of SalesPerson))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of SalesPerson)("AdventureWorksModel.FK_SalesOrderHeader_SalesPerson_SalesPersonID", "SalesPerson", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderHeader_SalesTerritory_TerritoryID", "SalesTerritory")> _
		Public Property SalesTerritory() As SalesTerritory
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesTerritory)("AdventureWorksModel.FK_SalesOrderHeader_SalesTerritory_TerritoryID", "SalesTerritory").Value
			End Get
			Set(ByVal value As SalesTerritory)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SalesTerritory)("AdventureWorksModel.FK_SalesOrderHeader_SalesTerritory_TerritoryID", "SalesTerritory").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property SalesTerritoryReference() As EntityReference(Of SalesTerritory)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesTerritory)("AdventureWorksModel.FK_SalesOrderHeader_SalesTerritory_TerritoryID", "SalesTerritory")
			End Get
			Set(ByVal value As EntityReference(Of SalesTerritory))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of SalesTerritory)("AdventureWorksModel.FK_SalesOrderHeader_SalesTerritory_TerritoryID", "SalesTerritory", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID", "SalesOrderHeaderSalesReason")> _
		Public Property SalesOrderHeaderSalesReason() As EntityCollection(Of SalesOrderHeaderSalesReason)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of SalesOrderHeaderSalesReason)("AdventureWorksModel.FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID", "SalesOrderHeaderSalesReason")
			End Get
			Set(ByVal value As EntityCollection(Of SalesOrderHeaderSalesReason))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SalesOrderHeaderSalesReason)("AdventureWorksModel.FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID", "SalesOrderHeaderSalesReason", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="SalesOrderHeaderSalesReason"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class SalesOrderHeaderSalesReason
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new SalesOrderHeaderSalesReason object.
		''' </summary>
		''' <param name="salesOrderID">Initial value of the SalesOrderID property.</param>
		''' <param name="salesReasonID">Initial value of the SalesReasonID property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateSalesOrderHeaderSalesReason(ByVal salesOrderID As Global.System.Int32, ByVal salesReasonID As Global.System.Int32, ByVal modifiedDate As Global.System.DateTime) As SalesOrderHeaderSalesReason
			Dim salesOrderHeaderSalesReason As New SalesOrderHeaderSalesReason()
			salesOrderHeaderSalesReason.SalesOrderID = salesOrderID
			salesOrderHeaderSalesReason.SalesReasonID = salesReasonID
			salesOrderHeaderSalesReason.ModifiedDate = modifiedDate
			Return salesOrderHeaderSalesReason
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property SalesOrderID() As Global.System.Int32
			Get
				Return _SalesOrderID
			End Get
			Set(ByVal value As System.Int32)
				If _SalesOrderID <> value Then
					OnSalesOrderIDChanging(value)
					ReportPropertyChanging("SalesOrderID")
					_SalesOrderID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("SalesOrderID")
					OnSalesOrderIDChanged()
				End If
			End Set
		End Property
		Private _SalesOrderID As Global.System.Int32
		Partial Private Sub OnSalesOrderIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnSalesOrderIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property SalesReasonID() As Global.System.Int32
			Get
				Return _SalesReasonID
			End Get
			Set(ByVal value As System.Int32)
				If _SalesReasonID <> value Then
					OnSalesReasonIDChanging(value)
					ReportPropertyChanging("SalesReasonID")
					_SalesReasonID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("SalesReasonID")
					OnSalesReasonIDChanged()
				End If
			End Set
		End Property
		Private _SalesReasonID As Global.System.Int32
		Partial Private Sub OnSalesReasonIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnSalesReasonIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID", "SalesOrderHeader")> _
		Public Property SalesOrderHeader() As SalesOrderHeader
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID", "SalesOrderHeader").Value
			End Get
			Set(ByVal value As SalesOrderHeader)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID", "SalesOrderHeader").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property SalesOrderHeaderReference() As EntityReference(Of SalesOrderHeader)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID", "SalesOrderHeader")
			End Get
			Set(ByVal value As EntityReference(Of SalesOrderHeader))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID", "SalesOrderHeader", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID", "SalesReason")> _
		Public Property SalesReason() As SalesReason
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesReason)("AdventureWorksModel.FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID", "SalesReason").Value
			End Get
			Set(ByVal value As SalesReason)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SalesReason)("AdventureWorksModel.FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID", "SalesReason").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property SalesReasonReference() As EntityReference(Of SalesReason)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesReason)("AdventureWorksModel.FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID", "SalesReason")
			End Get
			Set(ByVal value As EntityReference(Of SalesReason))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of SalesReason)("AdventureWorksModel.FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID", "SalesReason", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="SalesPerson"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class SalesPerson
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new SalesPerson object.
		''' </summary>
		''' <param name="salesPersonID">Initial value of the SalesPersonID property.</param>
		''' <param name="bonus">Initial value of the Bonus property.</param>
		''' <param name="commissionPct">Initial value of the CommissionPct property.</param>
		''' <param name="salesYTD">Initial value of the SalesYTD property.</param>
		''' <param name="salesLastYear">Initial value of the SalesLastYear property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateSalesPerson(ByVal salesPersonID As Global.System.Int32, ByVal bonus As Global.System.Decimal, ByVal commissionPct As Global.System.Decimal, ByVal salesYTD As Global.System.Decimal, ByVal salesLastYear As Global.System.Decimal, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As SalesPerson
			Dim salesPerson As New SalesPerson()
			salesPerson.SalesPersonID = salesPersonID
			salesPerson.Bonus = bonus
			salesPerson.CommissionPct = commissionPct
			salesPerson.SalesYTD = salesYTD
			salesPerson.SalesLastYear = salesLastYear
			salesPerson.rowguid = rowguid
			salesPerson.ModifiedDate = modifiedDate
			Return salesPerson
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property SalesPersonID() As Global.System.Int32
			Get
				Return _SalesPersonID
			End Get
			Set(ByVal value As System.Int32)
				If _SalesPersonID <> value Then
					OnSalesPersonIDChanging(value)
					ReportPropertyChanging("SalesPersonID")
					_SalesPersonID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("SalesPersonID")
					OnSalesPersonIDChanged()
				End If
			End Set
		End Property
		Private _SalesPersonID As Global.System.Int32
		Partial Private Sub OnSalesPersonIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnSalesPersonIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property TerritoryID() As Global.System.Int32?
			Get
				Return _TerritoryID
			End Get
			Set(ByVal value? As System.Int32)
				OnTerritoryIDChanging(value)
				ReportPropertyChanging("TerritoryID")
				_TerritoryID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("TerritoryID")
				OnTerritoryIDChanged()
			End Set
		End Property
		Private _TerritoryID? As Global.System.Int32
		Partial Private Sub OnTerritoryIDChanging(ByVal value? As Global.System.Int32)
		End Sub
		Partial Private Sub OnTerritoryIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property SalesQuota() As Global.System.Decimal?
			Get
				Return _SalesQuota
			End Get
			Set(ByVal value? As System.Decimal)
				OnSalesQuotaChanging(value)
				ReportPropertyChanging("SalesQuota")
				_SalesQuota = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("SalesQuota")
				OnSalesQuotaChanged()
			End Set
		End Property
		Private _SalesQuota? As Global.System.Decimal
		Partial Private Sub OnSalesQuotaChanging(ByVal value? As Global.System.Decimal)
		End Sub
		Partial Private Sub OnSalesQuotaChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Bonus() As Global.System.Decimal
			Get
				Return _Bonus
			End Get
			Set(ByVal value As System.Decimal)
				OnBonusChanging(value)
				ReportPropertyChanging("Bonus")
				_Bonus = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("Bonus")
				OnBonusChanged()
			End Set
		End Property
		Private _Bonus As Global.System.Decimal
		Partial Private Sub OnBonusChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnBonusChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property CommissionPct() As Global.System.Decimal
			Get
				Return _CommissionPct
			End Get
			Set(ByVal value As System.Decimal)
				OnCommissionPctChanging(value)
				ReportPropertyChanging("CommissionPct")
				_CommissionPct = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("CommissionPct")
				OnCommissionPctChanged()
			End Set
		End Property
		Private _CommissionPct As Global.System.Decimal
		Partial Private Sub OnCommissionPctChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnCommissionPctChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property SalesYTD() As Global.System.Decimal
			Get
				Return _SalesYTD
			End Get
			Set(ByVal value As System.Decimal)
				OnSalesYTDChanging(value)
				ReportPropertyChanging("SalesYTD")
				_SalesYTD = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("SalesYTD")
				OnSalesYTDChanged()
			End Set
		End Property
		Private _SalesYTD As Global.System.Decimal
		Partial Private Sub OnSalesYTDChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnSalesYTDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property SalesLastYear() As Global.System.Decimal
			Get
				Return _SalesLastYear
			End Get
			Set(ByVal value As System.Decimal)
				OnSalesLastYearChanging(value)
				ReportPropertyChanging("SalesLastYear")
				_SalesLastYear = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("SalesLastYear")
				OnSalesLastYearChanged()
			End Set
		End Property
		Private _SalesLastYear As Global.System.Decimal
		Partial Private Sub OnSalesLastYearChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnSalesLastYearChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesPerson_Employee_SalesPersonID", "Employee")> _
		Public Property Employee() As Employee
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Employee)("AdventureWorksModel.FK_SalesPerson_Employee_SalesPersonID", "Employee").Value
			End Get
			Set(ByVal value As Employee)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Employee)("AdventureWorksModel.FK_SalesPerson_Employee_SalesPersonID", "Employee").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property EmployeeReference() As EntityReference(Of Employee)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Employee)("AdventureWorksModel.FK_SalesPerson_Employee_SalesPersonID", "Employee")
			End Get
			Set(ByVal value As EntityReference(Of Employee))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Employee)("AdventureWorksModel.FK_SalesPerson_Employee_SalesPersonID", "Employee", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderHeader_SalesPerson_SalesPersonID", "SalesOrderHeader")> _
		Public Property SalesOrderHeader() As EntityCollection(Of SalesOrderHeader)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderHeader_SalesPerson_SalesPersonID", "SalesOrderHeader")
			End Get
			Set(ByVal value As EntityCollection(Of SalesOrderHeader))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderHeader_SalesPerson_SalesPersonID", "SalesOrderHeader", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesPerson_SalesTerritory_TerritoryID", "SalesTerritory")> _
		Public Property SalesTerritory() As SalesTerritory
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesTerritory)("AdventureWorksModel.FK_SalesPerson_SalesTerritory_TerritoryID", "SalesTerritory").Value
			End Get
			Set(ByVal value As SalesTerritory)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SalesTerritory)("AdventureWorksModel.FK_SalesPerson_SalesTerritory_TerritoryID", "SalesTerritory").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property SalesTerritoryReference() As EntityReference(Of SalesTerritory)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesTerritory)("AdventureWorksModel.FK_SalesPerson_SalesTerritory_TerritoryID", "SalesTerritory")
			End Get
			Set(ByVal value As EntityReference(Of SalesTerritory))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of SalesTerritory)("AdventureWorksModel.FK_SalesPerson_SalesTerritory_TerritoryID", "SalesTerritory", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesPersonQuotaHistory_SalesPerson_SalesPersonID", "SalesPersonQuotaHistory")> _
		Public Property SalesPersonQuotaHistory() As EntityCollection(Of SalesPersonQuotaHistory)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of SalesPersonQuotaHistory)("AdventureWorksModel.FK_SalesPersonQuotaHistory_SalesPerson_SalesPersonID", "SalesPersonQuotaHistory")
			End Get
			Set(ByVal value As EntityCollection(Of SalesPersonQuotaHistory))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SalesPersonQuotaHistory)("AdventureWorksModel.FK_SalesPersonQuotaHistory_SalesPerson_SalesPersonID", "SalesPersonQuotaHistory", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesTerritoryHistory_SalesPerson_SalesPersonID", "SalesTerritoryHistory")> _
		Public Property SalesTerritoryHistory() As EntityCollection(Of SalesTerritoryHistory)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of SalesTerritoryHistory)("AdventureWorksModel.FK_SalesTerritoryHistory_SalesPerson_SalesPersonID", "SalesTerritoryHistory")
			End Get
			Set(ByVal value As EntityCollection(Of SalesTerritoryHistory))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SalesTerritoryHistory)("AdventureWorksModel.FK_SalesTerritoryHistory_SalesPerson_SalesPersonID", "SalesTerritoryHistory", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Store_SalesPerson_SalesPersonID", "Store")> _
		Public Property Store() As EntityCollection(Of Store)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of Store)("AdventureWorksModel.FK_Store_SalesPerson_SalesPersonID", "Store")
			End Get
			Set(ByVal value As EntityCollection(Of Store))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Store)("AdventureWorksModel.FK_Store_SalesPerson_SalesPersonID", "Store", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="SalesPersonQuotaHistory"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class SalesPersonQuotaHistory
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new SalesPersonQuotaHistory object.
		''' </summary>
		''' <param name="salesPersonID">Initial value of the SalesPersonID property.</param>
		''' <param name="quotaDate">Initial value of the QuotaDate property.</param>
		''' <param name="salesQuota">Initial value of the SalesQuota property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateSalesPersonQuotaHistory(ByVal salesPersonID As Global.System.Int32, ByVal quotaDate As Global.System.DateTime, ByVal salesQuota As Global.System.Decimal, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As SalesPersonQuotaHistory
			Dim salesPersonQuotaHistory As New SalesPersonQuotaHistory()
			salesPersonQuotaHistory.SalesPersonID = salesPersonID
			salesPersonQuotaHistory.QuotaDate = quotaDate
			salesPersonQuotaHistory.SalesQuota = salesQuota
			salesPersonQuotaHistory.rowguid = rowguid
			salesPersonQuotaHistory.ModifiedDate = modifiedDate
			Return salesPersonQuotaHistory
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property SalesPersonID() As Global.System.Int32
			Get
				Return _SalesPersonID
			End Get
			Set(ByVal value As System.Int32)
				If _SalesPersonID <> value Then
					OnSalesPersonIDChanging(value)
					ReportPropertyChanging("SalesPersonID")
					_SalesPersonID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("SalesPersonID")
					OnSalesPersonIDChanged()
				End If
			End Set
		End Property
		Private _SalesPersonID As Global.System.Int32
		Partial Private Sub OnSalesPersonIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnSalesPersonIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property QuotaDate() As Global.System.DateTime
			Get
				Return _QuotaDate
			End Get
			Set(ByVal value As System.DateTime)
				If _QuotaDate <> value Then
					OnQuotaDateChanging(value)
					ReportPropertyChanging("QuotaDate")
					_QuotaDate = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("QuotaDate")
					OnQuotaDateChanged()
				End If
			End Set
		End Property
		Private _QuotaDate As Global.System.DateTime
		Partial Private Sub OnQuotaDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnQuotaDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property SalesQuota() As Global.System.Decimal
			Get
				Return _SalesQuota
			End Get
			Set(ByVal value As System.Decimal)
				OnSalesQuotaChanging(value)
				ReportPropertyChanging("SalesQuota")
				_SalesQuota = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("SalesQuota")
				OnSalesQuotaChanged()
			End Set
		End Property
		Private _SalesQuota As Global.System.Decimal
		Partial Private Sub OnSalesQuotaChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnSalesQuotaChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesPersonQuotaHistory_SalesPerson_SalesPersonID", "SalesPerson")> _
		Public Property SalesPerson() As SalesPerson
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesPerson)("AdventureWorksModel.FK_SalesPersonQuotaHistory_SalesPerson_SalesPersonID", "SalesPerson").Value
			End Get
			Set(ByVal value As SalesPerson)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SalesPerson)("AdventureWorksModel.FK_SalesPersonQuotaHistory_SalesPerson_SalesPersonID", "SalesPerson").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property SalesPersonReference() As EntityReference(Of SalesPerson)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesPerson)("AdventureWorksModel.FK_SalesPersonQuotaHistory_SalesPerson_SalesPersonID", "SalesPerson")
			End Get
			Set(ByVal value As EntityReference(Of SalesPerson))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of SalesPerson)("AdventureWorksModel.FK_SalesPersonQuotaHistory_SalesPerson_SalesPersonID", "SalesPerson", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="SalesReason"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class SalesReason
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new SalesReason object.
		''' </summary>
		''' <param name="salesReasonID">Initial value of the SalesReasonID property.</param>
		''' <param name="name">Initial value of the Name property.</param>
		''' <param name="reasonType">Initial value of the ReasonType property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateSalesReason(ByVal salesReasonID As Global.System.Int32, ByVal name As Global.System.String, ByVal reasonType As Global.System.String, ByVal modifiedDate As Global.System.DateTime) As SalesReason
			Dim salesReason As New SalesReason()
			salesReason.SalesReasonID = salesReasonID
			salesReason.Name = name
			salesReason.ReasonType = reasonType
			salesReason.ModifiedDate = modifiedDate
			Return salesReason
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property SalesReasonID() As Global.System.Int32
			Get
				Return _SalesReasonID
			End Get
			Set(ByVal value As System.Int32)
				If _SalesReasonID <> value Then
					OnSalesReasonIDChanging(value)
					ReportPropertyChanging("SalesReasonID")
					_SalesReasonID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("SalesReasonID")
					OnSalesReasonIDChanged()
				End If
			End Set
		End Property
		Private _SalesReasonID As Global.System.Int32
		Partial Private Sub OnSalesReasonIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnSalesReasonIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Name() As Global.System.String
			Get
				Return _Name
			End Get
			Set(ByVal value As System.String)
				OnNameChanging(value)
				ReportPropertyChanging("Name")
				_Name = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Name")
				OnNameChanged()
			End Set
		End Property
		Private _Name As Global.System.String
		Partial Private Sub OnNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ReasonType() As Global.System.String
			Get
				Return _ReasonType
			End Get
			Set(ByVal value As System.String)
				OnReasonTypeChanging(value)
				ReportPropertyChanging("ReasonType")
				_ReasonType = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("ReasonType")
				OnReasonTypeChanged()
			End Set
		End Property
		Private _ReasonType As Global.System.String
		Partial Private Sub OnReasonTypeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnReasonTypeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID", "SalesOrderHeaderSalesReason")> _
		Public Property SalesOrderHeaderSalesReason() As EntityCollection(Of SalesOrderHeaderSalesReason)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of SalesOrderHeaderSalesReason)("AdventureWorksModel.FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID", "SalesOrderHeaderSalesReason")
			End Get
			Set(ByVal value As EntityCollection(Of SalesOrderHeaderSalesReason))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SalesOrderHeaderSalesReason)("AdventureWorksModel.FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID", "SalesOrderHeaderSalesReason", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="SalesTaxRate"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class SalesTaxRate
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new SalesTaxRate object.
		''' </summary>
		''' <param name="salesTaxRateID">Initial value of the SalesTaxRateID property.</param>
		''' <param name="stateProvinceID">Initial value of the StateProvinceID property.</param>
		''' <param name="taxType">Initial value of the TaxType property.</param>
		''' <param name="taxRate">Initial value of the TaxRate property.</param>
		''' <param name="name">Initial value of the Name property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateSalesTaxRate(ByVal salesTaxRateID As Global.System.Int32, ByVal stateProvinceID As Global.System.Int32, ByVal taxType As Global.System.Byte, ByVal taxRate As Global.System.Decimal, ByVal name As Global.System.String, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As SalesTaxRate
			Dim salesTaxRate As New SalesTaxRate()
			salesTaxRate.SalesTaxRateID = salesTaxRateID
			salesTaxRate.StateProvinceID = stateProvinceID
			salesTaxRate.TaxType = taxType
			salesTaxRate.TaxRate = taxRate
			salesTaxRate.Name = name
			salesTaxRate.rowguid = rowguid
			salesTaxRate.ModifiedDate = modifiedDate
			Return salesTaxRate
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property SalesTaxRateID() As Global.System.Int32
			Get
				Return _SalesTaxRateID
			End Get
			Set(ByVal value As System.Int32)
				If _SalesTaxRateID <> value Then
					OnSalesTaxRateIDChanging(value)
					ReportPropertyChanging("SalesTaxRateID")
					_SalesTaxRateID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("SalesTaxRateID")
					OnSalesTaxRateIDChanged()
				End If
			End Set
		End Property
		Private _SalesTaxRateID As Global.System.Int32
		Partial Private Sub OnSalesTaxRateIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnSalesTaxRateIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property StateProvinceID() As Global.System.Int32
			Get
				Return _StateProvinceID
			End Get
			Set(ByVal value As System.Int32)
				OnStateProvinceIDChanging(value)
				ReportPropertyChanging("StateProvinceID")
				_StateProvinceID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("StateProvinceID")
				OnStateProvinceIDChanged()
			End Set
		End Property
		Private _StateProvinceID As Global.System.Int32
		Partial Private Sub OnStateProvinceIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnStateProvinceIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property TaxType() As Global.System.Byte
			Get
				Return _TaxType
			End Get
			Set(ByVal value As System.Byte)
				OnTaxTypeChanging(value)
				ReportPropertyChanging("TaxType")
				_TaxType = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("TaxType")
				OnTaxTypeChanged()
			End Set
		End Property
		Private _TaxType As Global.System.Byte
		Partial Private Sub OnTaxTypeChanging(ByVal value As Global.System.Byte)
		End Sub
		Partial Private Sub OnTaxTypeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property TaxRate() As Global.System.Decimal
			Get
				Return _TaxRate
			End Get
			Set(ByVal value As System.Decimal)
				OnTaxRateChanging(value)
				ReportPropertyChanging("TaxRate")
				_TaxRate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("TaxRate")
				OnTaxRateChanged()
			End Set
		End Property
		Private _TaxRate As Global.System.Decimal
		Partial Private Sub OnTaxRateChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnTaxRateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Name() As Global.System.String
			Get
				Return _Name
			End Get
			Set(ByVal value As System.String)
				OnNameChanging(value)
				ReportPropertyChanging("Name")
				_Name = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Name")
				OnNameChanged()
			End Set
		End Property
		Private _Name As Global.System.String
		Partial Private Sub OnNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesTaxRate_StateProvince_StateProvinceID", "StateProvince")> _
		Public Property StateProvince() As StateProvince
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of StateProvince)("AdventureWorksModel.FK_SalesTaxRate_StateProvince_StateProvinceID", "StateProvince").Value
			End Get
			Set(ByVal value As StateProvince)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of StateProvince)("AdventureWorksModel.FK_SalesTaxRate_StateProvince_StateProvinceID", "StateProvince").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property StateProvinceReference() As EntityReference(Of StateProvince)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of StateProvince)("AdventureWorksModel.FK_SalesTaxRate_StateProvince_StateProvinceID", "StateProvince")
			End Get
			Set(ByVal value As EntityReference(Of StateProvince))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of StateProvince)("AdventureWorksModel.FK_SalesTaxRate_StateProvince_StateProvinceID", "StateProvince", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="SalesTerritory"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class SalesTerritory
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new SalesTerritory object.
		''' </summary>
		''' <param name="territoryID">Initial value of the TerritoryID property.</param>
		''' <param name="name">Initial value of the Name property.</param>
		''' <param name="countryRegionCode">Initial value of the CountryRegionCode property.</param>
		''' <param name="group">Initial value of the Group property.</param>
		''' <param name="salesYTD">Initial value of the SalesYTD property.</param>
		''' <param name="salesLastYear">Initial value of the SalesLastYear property.</param>
		''' <param name="costYTD">Initial value of the CostYTD property.</param>
		''' <param name="costLastYear">Initial value of the CostLastYear property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateSalesTerritory(ByVal territoryID As Global.System.Int32, ByVal name As Global.System.String, ByVal countryRegionCode As Global.System.String, ByVal group As Global.System.String, ByVal salesYTD As Global.System.Decimal, ByVal salesLastYear As Global.System.Decimal, ByVal costYTD As Global.System.Decimal, ByVal costLastYear As Global.System.Decimal, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As SalesTerritory
			Dim salesTerritory As New SalesTerritory()
			salesTerritory.TerritoryID = territoryID
			salesTerritory.Name = name
			salesTerritory.CountryRegionCode = countryRegionCode
			salesTerritory.Group = group
			salesTerritory.SalesYTD = salesYTD
			salesTerritory.SalesLastYear = salesLastYear
			salesTerritory.CostYTD = costYTD
			salesTerritory.CostLastYear = costLastYear
			salesTerritory.rowguid = rowguid
			salesTerritory.ModifiedDate = modifiedDate
			Return salesTerritory
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property TerritoryID() As Global.System.Int32
			Get
				Return _TerritoryID
			End Get
			Set(ByVal value As System.Int32)
				If _TerritoryID <> value Then
					OnTerritoryIDChanging(value)
					ReportPropertyChanging("TerritoryID")
					_TerritoryID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("TerritoryID")
					OnTerritoryIDChanged()
				End If
			End Set
		End Property
		Private _TerritoryID As Global.System.Int32
		Partial Private Sub OnTerritoryIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnTerritoryIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Name() As Global.System.String
			Get
				Return _Name
			End Get
			Set(ByVal value As System.String)
				OnNameChanging(value)
				ReportPropertyChanging("Name")
				_Name = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Name")
				OnNameChanged()
			End Set
		End Property
		Private _Name As Global.System.String
		Partial Private Sub OnNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property CountryRegionCode() As Global.System.String
			Get
				Return _CountryRegionCode
			End Get
			Set(ByVal value As System.String)
				OnCountryRegionCodeChanging(value)
				ReportPropertyChanging("CountryRegionCode")
				_CountryRegionCode = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("CountryRegionCode")
				OnCountryRegionCodeChanged()
			End Set
		End Property
		Private _CountryRegionCode As Global.System.String
		Partial Private Sub OnCountryRegionCodeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnCountryRegionCodeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Group() As Global.System.String
			Get
				Return _Group
			End Get
			Set(ByVal value As System.String)
				OnGroupChanging(value)
				ReportPropertyChanging("Group")
				_Group = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Group")
				OnGroupChanged()
			End Set
		End Property
		Private _Group As Global.System.String
		Partial Private Sub OnGroupChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnGroupChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property SalesYTD() As Global.System.Decimal
			Get
				Return _SalesYTD
			End Get
			Set(ByVal value As System.Decimal)
				OnSalesYTDChanging(value)
				ReportPropertyChanging("SalesYTD")
				_SalesYTD = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("SalesYTD")
				OnSalesYTDChanged()
			End Set
		End Property
		Private _SalesYTD As Global.System.Decimal
		Partial Private Sub OnSalesYTDChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnSalesYTDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property SalesLastYear() As Global.System.Decimal
			Get
				Return _SalesLastYear
			End Get
			Set(ByVal value As System.Decimal)
				OnSalesLastYearChanging(value)
				ReportPropertyChanging("SalesLastYear")
				_SalesLastYear = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("SalesLastYear")
				OnSalesLastYearChanged()
			End Set
		End Property
		Private _SalesLastYear As Global.System.Decimal
		Partial Private Sub OnSalesLastYearChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnSalesLastYearChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property CostYTD() As Global.System.Decimal
			Get
				Return _CostYTD
			End Get
			Set(ByVal value As System.Decimal)
				OnCostYTDChanging(value)
				ReportPropertyChanging("CostYTD")
				_CostYTD = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("CostYTD")
				OnCostYTDChanged()
			End Set
		End Property
		Private _CostYTD As Global.System.Decimal
		Partial Private Sub OnCostYTDChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnCostYTDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property CostLastYear() As Global.System.Decimal
			Get
				Return _CostLastYear
			End Get
			Set(ByVal value As System.Decimal)
				OnCostLastYearChanging(value)
				ReportPropertyChanging("CostLastYear")
				_CostLastYear = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("CostLastYear")
				OnCostLastYearChanged()
			End Set
		End Property
		Private _CostLastYear As Global.System.Decimal
		Partial Private Sub OnCostLastYearChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnCostLastYearChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_StateProvince_SalesTerritory_TerritoryID", "StateProvince")> _
		Public Property StateProvince() As EntityCollection(Of StateProvince)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of StateProvince)("AdventureWorksModel.FK_StateProvince_SalesTerritory_TerritoryID", "StateProvince")
			End Get
			Set(ByVal value As EntityCollection(Of StateProvince))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of StateProvince)("AdventureWorksModel.FK_StateProvince_SalesTerritory_TerritoryID", "StateProvince", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Customer_SalesTerritory_TerritoryID", "Customer")> _
		Public Property Customer() As EntityCollection(Of Customer)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of Customer)("AdventureWorksModel.FK_Customer_SalesTerritory_TerritoryID", "Customer")
			End Get
			Set(ByVal value As EntityCollection(Of Customer))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Customer)("AdventureWorksModel.FK_Customer_SalesTerritory_TerritoryID", "Customer", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderHeader_SalesTerritory_TerritoryID", "SalesOrderHeader")> _
		Public Property SalesOrderHeader() As EntityCollection(Of SalesOrderHeader)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderHeader_SalesTerritory_TerritoryID", "SalesOrderHeader")
			End Get
			Set(ByVal value As EntityCollection(Of SalesOrderHeader))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderHeader_SalesTerritory_TerritoryID", "SalesOrderHeader", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesPerson_SalesTerritory_TerritoryID", "SalesPerson")> _
		Public Property SalesPerson() As EntityCollection(Of SalesPerson)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of SalesPerson)("AdventureWorksModel.FK_SalesPerson_SalesTerritory_TerritoryID", "SalesPerson")
			End Get
			Set(ByVal value As EntityCollection(Of SalesPerson))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SalesPerson)("AdventureWorksModel.FK_SalesPerson_SalesTerritory_TerritoryID", "SalesPerson", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesTerritoryHistory_SalesTerritory_TerritoryID", "SalesTerritoryHistory")> _
		Public Property SalesTerritoryHistory() As EntityCollection(Of SalesTerritoryHistory)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of SalesTerritoryHistory)("AdventureWorksModel.FK_SalesTerritoryHistory_SalesTerritory_TerritoryID", "SalesTerritoryHistory")
			End Get
			Set(ByVal value As EntityCollection(Of SalesTerritoryHistory))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SalesTerritoryHistory)("AdventureWorksModel.FK_SalesTerritoryHistory_SalesTerritory_TerritoryID", "SalesTerritoryHistory", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="SalesTerritoryHistory"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class SalesTerritoryHistory
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new SalesTerritoryHistory object.
		''' </summary>
		''' <param name="salesPersonID">Initial value of the SalesPersonID property.</param>
		''' <param name="territoryID">Initial value of the TerritoryID property.</param>
		''' <param name="startDate">Initial value of the StartDate property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateSalesTerritoryHistory(ByVal salesPersonID As Global.System.Int32, ByVal territoryID As Global.System.Int32, ByVal startDate As Global.System.DateTime, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As SalesTerritoryHistory
			Dim salesTerritoryHistory As New SalesTerritoryHistory()
			salesTerritoryHistory.SalesPersonID = salesPersonID
			salesTerritoryHistory.TerritoryID = territoryID
			salesTerritoryHistory.StartDate = startDate
			salesTerritoryHistory.rowguid = rowguid
			salesTerritoryHistory.ModifiedDate = modifiedDate
			Return salesTerritoryHistory
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property SalesPersonID() As Global.System.Int32
			Get
				Return _SalesPersonID
			End Get
			Set(ByVal value As System.Int32)
				If _SalesPersonID <> value Then
					OnSalesPersonIDChanging(value)
					ReportPropertyChanging("SalesPersonID")
					_SalesPersonID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("SalesPersonID")
					OnSalesPersonIDChanged()
				End If
			End Set
		End Property
		Private _SalesPersonID As Global.System.Int32
		Partial Private Sub OnSalesPersonIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnSalesPersonIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property TerritoryID() As Global.System.Int32
			Get
				Return _TerritoryID
			End Get
			Set(ByVal value As System.Int32)
				If _TerritoryID <> value Then
					OnTerritoryIDChanging(value)
					ReportPropertyChanging("TerritoryID")
					_TerritoryID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("TerritoryID")
					OnTerritoryIDChanged()
				End If
			End Set
		End Property
		Private _TerritoryID As Global.System.Int32
		Partial Private Sub OnTerritoryIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnTerritoryIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property StartDate() As Global.System.DateTime
			Get
				Return _StartDate
			End Get
			Set(ByVal value As System.DateTime)
				If _StartDate <> value Then
					OnStartDateChanging(value)
					ReportPropertyChanging("StartDate")
					_StartDate = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("StartDate")
					OnStartDateChanged()
				End If
			End Set
		End Property
		Private _StartDate As Global.System.DateTime
		Partial Private Sub OnStartDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnStartDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property EndDate() As Global.System.DateTime?
			Get
				Return _EndDate
			End Get
			Set(ByVal value? As System.DateTime)
				OnEndDateChanging(value)
				ReportPropertyChanging("EndDate")
				_EndDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("EndDate")
				OnEndDateChanged()
			End Set
		End Property
		Private _EndDate? As Global.System.DateTime
		Partial Private Sub OnEndDateChanging(ByVal value? As Global.System.DateTime)
		End Sub
		Partial Private Sub OnEndDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesTerritoryHistory_SalesPerson_SalesPersonID", "SalesPerson")> _
		Public Property SalesPerson() As SalesPerson
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesPerson)("AdventureWorksModel.FK_SalesTerritoryHistory_SalesPerson_SalesPersonID", "SalesPerson").Value
			End Get
			Set(ByVal value As SalesPerson)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SalesPerson)("AdventureWorksModel.FK_SalesTerritoryHistory_SalesPerson_SalesPersonID", "SalesPerson").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property SalesPersonReference() As EntityReference(Of SalesPerson)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesPerson)("AdventureWorksModel.FK_SalesTerritoryHistory_SalesPerson_SalesPersonID", "SalesPerson")
			End Get
			Set(ByVal value As EntityReference(Of SalesPerson))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of SalesPerson)("AdventureWorksModel.FK_SalesTerritoryHistory_SalesPerson_SalesPersonID", "SalesPerson", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesTerritoryHistory_SalesTerritory_TerritoryID", "SalesTerritory")> _
		Public Property SalesTerritory() As SalesTerritory
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesTerritory)("AdventureWorksModel.FK_SalesTerritoryHistory_SalesTerritory_TerritoryID", "SalesTerritory").Value
			End Get
			Set(ByVal value As SalesTerritory)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SalesTerritory)("AdventureWorksModel.FK_SalesTerritoryHistory_SalesTerritory_TerritoryID", "SalesTerritory").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property SalesTerritoryReference() As EntityReference(Of SalesTerritory)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesTerritory)("AdventureWorksModel.FK_SalesTerritoryHistory_SalesTerritory_TerritoryID", "SalesTerritory")
			End Get
			Set(ByVal value As EntityReference(Of SalesTerritory))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of SalesTerritory)("AdventureWorksModel.FK_SalesTerritoryHistory_SalesTerritory_TerritoryID", "SalesTerritory", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="ScrapReason"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class ScrapReason
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new ScrapReason object.
		''' </summary>
		''' <param name="scrapReasonID">Initial value of the ScrapReasonID property.</param>
		''' <param name="name">Initial value of the Name property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateScrapReason(ByVal scrapReasonID As Global.System.Int16, ByVal name As Global.System.String, ByVal modifiedDate As Global.System.DateTime) As ScrapReason
			Dim scrapReason As New ScrapReason()
			scrapReason.ScrapReasonID = scrapReasonID
			scrapReason.Name = name
			scrapReason.ModifiedDate = modifiedDate
			Return scrapReason
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ScrapReasonID() As Global.System.Int16
			Get
				Return _ScrapReasonID
			End Get
			Set(ByVal value As System.Int16)
				If _ScrapReasonID <> value Then
					OnScrapReasonIDChanging(value)
					ReportPropertyChanging("ScrapReasonID")
					_ScrapReasonID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ScrapReasonID")
					OnScrapReasonIDChanged()
				End If
			End Set
		End Property
		Private _ScrapReasonID As Global.System.Int16
		Partial Private Sub OnScrapReasonIDChanging(ByVal value As Global.System.Int16)
		End Sub
		Partial Private Sub OnScrapReasonIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Name() As Global.System.String
			Get
				Return _Name
			End Get
			Set(ByVal value As System.String)
				OnNameChanging(value)
				ReportPropertyChanging("Name")
				_Name = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Name")
				OnNameChanged()
			End Set
		End Property
		Private _Name As Global.System.String
		Partial Private Sub OnNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_WorkOrder_ScrapReason_ScrapReasonID", "WorkOrder")> _
		Public Property WorkOrder() As EntityCollection(Of WorkOrder)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of WorkOrder)("AdventureWorksModel.FK_WorkOrder_ScrapReason_ScrapReasonID", "WorkOrder")
			End Get
			Set(ByVal value As EntityCollection(Of WorkOrder))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of WorkOrder)("AdventureWorksModel.FK_WorkOrder_ScrapReason_ScrapReasonID", "WorkOrder", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="Shift"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class Shift
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new Shift object.
		''' </summary>
		''' <param name="shiftID">Initial value of the ShiftID property.</param>
		''' <param name="name">Initial value of the Name property.</param>
		''' <param name="startTime">Initial value of the StartTime property.</param>
		''' <param name="endTime">Initial value of the EndTime property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateShift(ByVal shiftID As Global.System.Byte, ByVal name As Global.System.String, ByVal startTime As Global.System.DateTime, ByVal endTime As Global.System.DateTime, ByVal modifiedDate As Global.System.DateTime) As Shift
			Dim shift As New Shift()
			shift.ShiftID = shiftID
			shift.Name = name
			shift.StartTime = startTime
			shift.EndTime = endTime
			shift.ModifiedDate = modifiedDate
			Return shift
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ShiftID() As Global.System.Byte
			Get
				Return _ShiftID
			End Get
			Set(ByVal value As System.Byte)
				If _ShiftID <> value Then
					OnShiftIDChanging(value)
					ReportPropertyChanging("ShiftID")
					_ShiftID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ShiftID")
					OnShiftIDChanged()
				End If
			End Set
		End Property
		Private _ShiftID As Global.System.Byte
		Partial Private Sub OnShiftIDChanging(ByVal value As Global.System.Byte)
		End Sub
		Partial Private Sub OnShiftIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Name() As Global.System.String
			Get
				Return _Name
			End Get
			Set(ByVal value As System.String)
				OnNameChanging(value)
				ReportPropertyChanging("Name")
				_Name = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Name")
				OnNameChanged()
			End Set
		End Property
		Private _Name As Global.System.String
		Partial Private Sub OnNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property StartTime() As Global.System.DateTime
			Get
				Return _StartTime
			End Get
			Set(ByVal value As System.DateTime)
				OnStartTimeChanging(value)
				ReportPropertyChanging("StartTime")
				_StartTime = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("StartTime")
				OnStartTimeChanged()
			End Set
		End Property
		Private _StartTime As Global.System.DateTime
		Partial Private Sub OnStartTimeChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnStartTimeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property EndTime() As Global.System.DateTime
			Get
				Return _EndTime
			End Get
			Set(ByVal value As System.DateTime)
				OnEndTimeChanging(value)
				ReportPropertyChanging("EndTime")
				_EndTime = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("EndTime")
				OnEndTimeChanged()
			End Set
		End Property
		Private _EndTime As Global.System.DateTime
		Partial Private Sub OnEndTimeChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnEndTimeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_EmployeeDepartmentHistory_Shift_ShiftID", "EmployeeDepartmentHistory")> _
		Public Property EmployeeDepartmentHistory() As EntityCollection(Of EmployeeDepartmentHistory)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of EmployeeDepartmentHistory)("AdventureWorksModel.FK_EmployeeDepartmentHistory_Shift_ShiftID", "EmployeeDepartmentHistory")
			End Get
			Set(ByVal value As EntityCollection(Of EmployeeDepartmentHistory))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of EmployeeDepartmentHistory)("AdventureWorksModel.FK_EmployeeDepartmentHistory_Shift_ShiftID", "EmployeeDepartmentHistory", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="ShipMethod"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class ShipMethod
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new ShipMethod object.
		''' </summary>
		''' <param name="shipMethodID">Initial value of the ShipMethodID property.</param>
		''' <param name="name">Initial value of the Name property.</param>
		''' <param name="shipBase">Initial value of the ShipBase property.</param>
		''' <param name="shipRate">Initial value of the ShipRate property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateShipMethod(ByVal shipMethodID As Global.System.Int32, ByVal name As Global.System.String, ByVal shipBase As Global.System.Decimal, ByVal shipRate As Global.System.Decimal, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As ShipMethod
			Dim shipMethod As New ShipMethod()
			shipMethod.ShipMethodID = shipMethodID
			shipMethod.Name = name
			shipMethod.ShipBase = shipBase
			shipMethod.ShipRate = shipRate
			shipMethod.rowguid = rowguid
			shipMethod.ModifiedDate = modifiedDate
			Return shipMethod
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ShipMethodID() As Global.System.Int32
			Get
				Return _ShipMethodID
			End Get
			Set(ByVal value As System.Int32)
				If _ShipMethodID <> value Then
					OnShipMethodIDChanging(value)
					ReportPropertyChanging("ShipMethodID")
					_ShipMethodID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ShipMethodID")
					OnShipMethodIDChanged()
				End If
			End Set
		End Property
		Private _ShipMethodID As Global.System.Int32
		Partial Private Sub OnShipMethodIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnShipMethodIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Name() As Global.System.String
			Get
				Return _Name
			End Get
			Set(ByVal value As System.String)
				OnNameChanging(value)
				ReportPropertyChanging("Name")
				_Name = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Name")
				OnNameChanged()
			End Set
		End Property
		Private _Name As Global.System.String
		Partial Private Sub OnNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ShipBase() As Global.System.Decimal
			Get
				Return _ShipBase
			End Get
			Set(ByVal value As System.Decimal)
				OnShipBaseChanging(value)
				ReportPropertyChanging("ShipBase")
				_ShipBase = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ShipBase")
				OnShipBaseChanged()
			End Set
		End Property
		Private _ShipBase As Global.System.Decimal
		Partial Private Sub OnShipBaseChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnShipBaseChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ShipRate() As Global.System.Decimal
			Get
				Return _ShipRate
			End Get
			Set(ByVal value As System.Decimal)
				OnShipRateChanging(value)
				ReportPropertyChanging("ShipRate")
				_ShipRate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ShipRate")
				OnShipRateChanged()
			End Set
		End Property
		Private _ShipRate As Global.System.Decimal
		Partial Private Sub OnShipRateChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnShipRateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_PurchaseOrderHeader_ShipMethod_ShipMethodID", "PurchaseOrderHeader")> _
		Public Property PurchaseOrderHeader() As EntityCollection(Of PurchaseOrderHeader)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of PurchaseOrderHeader)("AdventureWorksModel.FK_PurchaseOrderHeader_ShipMethod_ShipMethodID", "PurchaseOrderHeader")
			End Get
			Set(ByVal value As EntityCollection(Of PurchaseOrderHeader))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of PurchaseOrderHeader)("AdventureWorksModel.FK_PurchaseOrderHeader_ShipMethod_ShipMethodID", "PurchaseOrderHeader", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderHeader_ShipMethod_ShipMethodID", "SalesOrderHeader")> _
		Public Property SalesOrderHeader() As EntityCollection(Of SalesOrderHeader)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderHeader_ShipMethod_ShipMethodID", "SalesOrderHeader")
			End Get
			Set(ByVal value As EntityCollection(Of SalesOrderHeader))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SalesOrderHeader)("AdventureWorksModel.FK_SalesOrderHeader_ShipMethod_ShipMethodID", "SalesOrderHeader", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="ShoppingCartItem"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class ShoppingCartItem
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new ShoppingCartItem object.
		''' </summary>
		''' <param name="shoppingCartItemID">Initial value of the ShoppingCartItemID property.</param>
		''' <param name="shoppingCartID">Initial value of the ShoppingCartID property.</param>
		''' <param name="quantity">Initial value of the Quantity property.</param>
		''' <param name="productID">Initial value of the ProductID property.</param>
		''' <param name="dateCreated">Initial value of the DateCreated property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateShoppingCartItem(ByVal shoppingCartItemID As Global.System.Int32, ByVal shoppingCartID As Global.System.String, ByVal quantity As Global.System.Int32, ByVal productID As Global.System.Int32, ByVal dateCreated As Global.System.DateTime, ByVal modifiedDate As Global.System.DateTime) As ShoppingCartItem
			Dim shoppingCartItem As New ShoppingCartItem()
			shoppingCartItem.ShoppingCartItemID = shoppingCartItemID
			shoppingCartItem.ShoppingCartID = shoppingCartID
			shoppingCartItem.Quantity = quantity
			shoppingCartItem.ProductID = productID
			shoppingCartItem.DateCreated = dateCreated
			shoppingCartItem.ModifiedDate = modifiedDate
			Return shoppingCartItem
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ShoppingCartItemID() As Global.System.Int32
			Get
				Return _ShoppingCartItemID
			End Get
			Set(ByVal value As System.Int32)
				If _ShoppingCartItemID <> value Then
					OnShoppingCartItemIDChanging(value)
					ReportPropertyChanging("ShoppingCartItemID")
					_ShoppingCartItemID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ShoppingCartItemID")
					OnShoppingCartItemIDChanged()
				End If
			End Set
		End Property
		Private _ShoppingCartItemID As Global.System.Int32
		Partial Private Sub OnShoppingCartItemIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnShoppingCartItemIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ShoppingCartID() As Global.System.String
			Get
				Return _ShoppingCartID
			End Get
			Set(ByVal value As System.String)
				OnShoppingCartIDChanging(value)
				ReportPropertyChanging("ShoppingCartID")
				_ShoppingCartID = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("ShoppingCartID")
				OnShoppingCartIDChanged()
			End Set
		End Property
		Private _ShoppingCartID As Global.System.String
		Partial Private Sub OnShoppingCartIDChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnShoppingCartIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Quantity() As Global.System.Int32
			Get
				Return _Quantity
			End Get
			Set(ByVal value As System.Int32)
				OnQuantityChanging(value)
				ReportPropertyChanging("Quantity")
				_Quantity = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("Quantity")
				OnQuantityChanged()
			End Set
		End Property
		Private _Quantity As Global.System.Int32
		Partial Private Sub OnQuantityChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnQuantityChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductID() As Global.System.Int32
			Get
				Return _ProductID
			End Get
			Set(ByVal value As System.Int32)
				OnProductIDChanging(value)
				ReportPropertyChanging("ProductID")
				_ProductID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ProductID")
				OnProductIDChanged()
			End Set
		End Property
		Private _ProductID As Global.System.Int32
		Partial Private Sub OnProductIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property DateCreated() As Global.System.DateTime
			Get
				Return _DateCreated
			End Get
			Set(ByVal value As System.DateTime)
				OnDateCreatedChanging(value)
				ReportPropertyChanging("DateCreated")
				_DateCreated = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("DateCreated")
				OnDateCreatedChanged()
			End Set
		End Property
		Private _DateCreated As Global.System.DateTime
		Partial Private Sub OnDateCreatedChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnDateCreatedChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ShoppingCartItem_Product_ProductID", "Product")> _
		Public Property Product() As Product
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ShoppingCartItem_Product_ProductID", "Product").Value
			End Get
			Set(ByVal value As Product)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ShoppingCartItem_Product_ProductID", "Product").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ProductReference() As EntityReference(Of Product)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_ShoppingCartItem_Product_ProductID", "Product")
			End Get
			Set(ByVal value As EntityReference(Of Product))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Product)("AdventureWorksModel.FK_ShoppingCartItem_Product_ProductID", "Product", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="SpecialOffer"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class SpecialOffer
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new SpecialOffer object.
		''' </summary>
		''' <param name="specialOfferID">Initial value of the SpecialOfferID property.</param>
		''' <param name="description">Initial value of the Description property.</param>
		''' <param name="discountPct">Initial value of the DiscountPct property.</param>
		''' <param name="type">Initial value of the Type property.</param>
		''' <param name="category">Initial value of the Category property.</param>
		''' <param name="startDate">Initial value of the StartDate property.</param>
		''' <param name="endDate">Initial value of the EndDate property.</param>
		''' <param name="minQty">Initial value of the MinQty property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateSpecialOffer(ByVal specialOfferID As Global.System.Int32, ByVal description As Global.System.String, ByVal discountPct As Global.System.Decimal, ByVal type As Global.System.String, ByVal category As Global.System.String, ByVal startDate As Global.System.DateTime, ByVal endDate As Global.System.DateTime, ByVal minQty As Global.System.Int32, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As SpecialOffer
			Dim specialOffer As New SpecialOffer()
			specialOffer.SpecialOfferID = specialOfferID
			specialOffer.Description = description
			specialOffer.DiscountPct = discountPct
			specialOffer.Type = type
			specialOffer.Category = category
			specialOffer.StartDate = startDate
			specialOffer.EndDate = endDate
			specialOffer.MinQty = minQty
			specialOffer.rowguid = rowguid
			specialOffer.ModifiedDate = modifiedDate
			Return specialOffer
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property SpecialOfferID() As Global.System.Int32
			Get
				Return _SpecialOfferID
			End Get
			Set(ByVal value As System.Int32)
				If _SpecialOfferID <> value Then
					OnSpecialOfferIDChanging(value)
					ReportPropertyChanging("SpecialOfferID")
					_SpecialOfferID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("SpecialOfferID")
					OnSpecialOfferIDChanged()
				End If
			End Set
		End Property
		Private _SpecialOfferID As Global.System.Int32
		Partial Private Sub OnSpecialOfferIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnSpecialOfferIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Description() As Global.System.String
			Get
				Return _Description
			End Get
			Set(ByVal value As System.String)
				OnDescriptionChanging(value)
				ReportPropertyChanging("Description")
				_Description = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Description")
				OnDescriptionChanged()
			End Set
		End Property
		Private _Description As Global.System.String
		Partial Private Sub OnDescriptionChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnDescriptionChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property DiscountPct() As Global.System.Decimal
			Get
				Return _DiscountPct
			End Get
			Set(ByVal value As System.Decimal)
				OnDiscountPctChanging(value)
				ReportPropertyChanging("DiscountPct")
				_DiscountPct = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("DiscountPct")
				OnDiscountPctChanged()
			End Set
		End Property
		Private _DiscountPct As Global.System.Decimal
		Partial Private Sub OnDiscountPctChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnDiscountPctChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Type() As Global.System.String
			Get
				Return _Type
			End Get
			Set(ByVal value As System.String)
				OnTypeChanging(value)
				ReportPropertyChanging("Type")
				_Type = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Type")
				OnTypeChanged()
			End Set
		End Property
		Private _Type As Global.System.String
		Partial Private Sub OnTypeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnTypeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Category() As Global.System.String
			Get
				Return _Category
			End Get
			Set(ByVal value As System.String)
				OnCategoryChanging(value)
				ReportPropertyChanging("Category")
				_Category = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Category")
				OnCategoryChanged()
			End Set
		End Property
		Private _Category As Global.System.String
		Partial Private Sub OnCategoryChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnCategoryChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property StartDate() As Global.System.DateTime
			Get
				Return _StartDate
			End Get
			Set(ByVal value As System.DateTime)
				OnStartDateChanging(value)
				ReportPropertyChanging("StartDate")
				_StartDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("StartDate")
				OnStartDateChanged()
			End Set
		End Property
		Private _StartDate As Global.System.DateTime
		Partial Private Sub OnStartDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnStartDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property EndDate() As Global.System.DateTime
			Get
				Return _EndDate
			End Get
			Set(ByVal value As System.DateTime)
				OnEndDateChanging(value)
				ReportPropertyChanging("EndDate")
				_EndDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("EndDate")
				OnEndDateChanged()
			End Set
		End Property
		Private _EndDate As Global.System.DateTime
		Partial Private Sub OnEndDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnEndDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property MinQty() As Global.System.Int32
			Get
				Return _MinQty
			End Get
			Set(ByVal value As System.Int32)
				OnMinQtyChanging(value)
				ReportPropertyChanging("MinQty")
				_MinQty = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("MinQty")
				OnMinQtyChanged()
			End Set
		End Property
		Private _MinQty As Global.System.Int32
		Partial Private Sub OnMinQtyChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnMinQtyChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property MaxQty() As Global.System.Int32?
			Get
				Return _MaxQty
			End Get
			Set(ByVal value? As System.Int32)
				OnMaxQtyChanging(value)
				ReportPropertyChanging("MaxQty")
				_MaxQty = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("MaxQty")
				OnMaxQtyChanged()
			End Set
		End Property
		Private _MaxQty? As Global.System.Int32
		Partial Private Sub OnMaxQtyChanging(ByVal value? As Global.System.Int32)
		End Sub
		Partial Private Sub OnMaxQtyChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID", "SpecialOfferProduct")> _
		Public Property SpecialOfferProduct() As EntityCollection(Of SpecialOfferProduct)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of SpecialOfferProduct)("AdventureWorksModel.FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID", "SpecialOfferProduct")
			End Get
			Set(ByVal value As EntityCollection(Of SpecialOfferProduct))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SpecialOfferProduct)("AdventureWorksModel.FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID", "SpecialOfferProduct", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="SpecialOfferProduct"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class SpecialOfferProduct
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new SpecialOfferProduct object.
		''' </summary>
		''' <param name="specialOfferID">Initial value of the SpecialOfferID property.</param>
		''' <param name="productID">Initial value of the ProductID property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateSpecialOfferProduct(ByVal specialOfferID As Global.System.Int32, ByVal productID As Global.System.Int32, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As SpecialOfferProduct
			Dim specialOfferProduct As New SpecialOfferProduct()
			specialOfferProduct.SpecialOfferID = specialOfferID
			specialOfferProduct.ProductID = productID
			specialOfferProduct.rowguid = rowguid
			specialOfferProduct.ModifiedDate = modifiedDate
			Return specialOfferProduct
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property SpecialOfferID() As Global.System.Int32
			Get
				Return _SpecialOfferID
			End Get
			Set(ByVal value As System.Int32)
				If _SpecialOfferID <> value Then
					OnSpecialOfferIDChanging(value)
					ReportPropertyChanging("SpecialOfferID")
					_SpecialOfferID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("SpecialOfferID")
					OnSpecialOfferIDChanged()
				End If
			End Set
		End Property
		Private _SpecialOfferID As Global.System.Int32
		Partial Private Sub OnSpecialOfferIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnSpecialOfferIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductID() As Global.System.Int32
			Get
				Return _ProductID
			End Get
			Set(ByVal value As System.Int32)
				If _ProductID <> value Then
					OnProductIDChanging(value)
					ReportPropertyChanging("ProductID")
					_ProductID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ProductID")
					OnProductIDChanged()
				End If
			End Set
		End Property
		Private _ProductID As Global.System.Int32
		Partial Private Sub OnProductIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SpecialOfferProduct_Product_ProductID", "Product")> _
		Public Property Product() As Product
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_SpecialOfferProduct_Product_ProductID", "Product").Value
			End Get
			Set(ByVal value As Product)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_SpecialOfferProduct_Product_ProductID", "Product").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ProductReference() As EntityReference(Of Product)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_SpecialOfferProduct_Product_ProductID", "Product")
			End Get
			Set(ByVal value As EntityReference(Of Product))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Product)("AdventureWorksModel.FK_SpecialOfferProduct_Product_ProductID", "Product", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID", "SalesOrderDetail")> _
		Public Property SalesOrderDetail() As EntityCollection(Of SalesOrderDetail)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of SalesOrderDetail)("AdventureWorksModel.FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID", "SalesOrderDetail")
			End Get
			Set(ByVal value As EntityCollection(Of SalesOrderDetail))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SalesOrderDetail)("AdventureWorksModel.FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID", "SalesOrderDetail", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID", "SpecialOffer")> _
		Public Property SpecialOffer() As SpecialOffer
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SpecialOffer)("AdventureWorksModel.FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID", "SpecialOffer").Value
			End Get
			Set(ByVal value As SpecialOffer)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SpecialOffer)("AdventureWorksModel.FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID", "SpecialOffer").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property SpecialOfferReference() As EntityReference(Of SpecialOffer)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SpecialOffer)("AdventureWorksModel.FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID", "SpecialOffer")
			End Get
			Set(ByVal value As EntityReference(Of SpecialOffer))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of SpecialOffer)("AdventureWorksModel.FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID", "SpecialOffer", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="StateProvince"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class StateProvince
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new StateProvince object.
		''' </summary>
		''' <param name="stateProvinceID">Initial value of the StateProvinceID property.</param>
		''' <param name="stateProvinceCode">Initial value of the StateProvinceCode property.</param>
		''' <param name="countryRegionCode">Initial value of the CountryRegionCode property.</param>
		''' <param name="isOnlyStateProvinceFlag">Initial value of the IsOnlyStateProvinceFlag property.</param>
		''' <param name="name">Initial value of the Name property.</param>
		''' <param name="territoryID">Initial value of the TerritoryID property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateStateProvince(ByVal stateProvinceID As Global.System.Int32, ByVal stateProvinceCode As Global.System.String, ByVal countryRegionCode As Global.System.String, ByVal isOnlyStateProvinceFlag As Global.System.Boolean, ByVal name As Global.System.String, ByVal territoryID As Global.System.Int32, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As StateProvince
			Dim stateProvince As New StateProvince()
			stateProvince.StateProvinceID = stateProvinceID
			stateProvince.StateProvinceCode = stateProvinceCode
			stateProvince.CountryRegionCode = countryRegionCode
			stateProvince.IsOnlyStateProvinceFlag = isOnlyStateProvinceFlag
			stateProvince.Name = name
			stateProvince.TerritoryID = territoryID
			stateProvince.rowguid = rowguid
			stateProvince.ModifiedDate = modifiedDate
			Return stateProvince
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property StateProvinceID() As Global.System.Int32
			Get
				Return _StateProvinceID
			End Get
			Set(ByVal value As System.Int32)
				If _StateProvinceID <> value Then
					OnStateProvinceIDChanging(value)
					ReportPropertyChanging("StateProvinceID")
					_StateProvinceID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("StateProvinceID")
					OnStateProvinceIDChanged()
				End If
			End Set
		End Property
		Private _StateProvinceID As Global.System.Int32
		Partial Private Sub OnStateProvinceIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnStateProvinceIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property StateProvinceCode() As Global.System.String
			Get
				Return _StateProvinceCode
			End Get
			Set(ByVal value As System.String)
				OnStateProvinceCodeChanging(value)
				ReportPropertyChanging("StateProvinceCode")
				_StateProvinceCode = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("StateProvinceCode")
				OnStateProvinceCodeChanged()
			End Set
		End Property
		Private _StateProvinceCode As Global.System.String
		Partial Private Sub OnStateProvinceCodeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnStateProvinceCodeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property CountryRegionCode() As Global.System.String
			Get
				Return _CountryRegionCode
			End Get
			Set(ByVal value As System.String)
				OnCountryRegionCodeChanging(value)
				ReportPropertyChanging("CountryRegionCode")
				_CountryRegionCode = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("CountryRegionCode")
				OnCountryRegionCodeChanged()
			End Set
		End Property
		Private _CountryRegionCode As Global.System.String
		Partial Private Sub OnCountryRegionCodeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnCountryRegionCodeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property IsOnlyStateProvinceFlag() As Global.System.Boolean
			Get
				Return _IsOnlyStateProvinceFlag
			End Get
			Set(ByVal value As System.Boolean)
				OnIsOnlyStateProvinceFlagChanging(value)
				ReportPropertyChanging("IsOnlyStateProvinceFlag")
				_IsOnlyStateProvinceFlag = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("IsOnlyStateProvinceFlag")
				OnIsOnlyStateProvinceFlagChanged()
			End Set
		End Property
		Private _IsOnlyStateProvinceFlag As Global.System.Boolean
		Partial Private Sub OnIsOnlyStateProvinceFlagChanging(ByVal value As Global.System.Boolean)
		End Sub
		Partial Private Sub OnIsOnlyStateProvinceFlagChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Name() As Global.System.String
			Get
				Return _Name
			End Get
			Set(ByVal value As System.String)
				OnNameChanging(value)
				ReportPropertyChanging("Name")
				_Name = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Name")
				OnNameChanged()
			End Set
		End Property
		Private _Name As Global.System.String
		Partial Private Sub OnNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property TerritoryID() As Global.System.Int32
			Get
				Return _TerritoryID
			End Get
			Set(ByVal value As System.Int32)
				OnTerritoryIDChanging(value)
				ReportPropertyChanging("TerritoryID")
				_TerritoryID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("TerritoryID")
				OnTerritoryIDChanged()
			End Set
		End Property
		Private _TerritoryID As Global.System.Int32
		Partial Private Sub OnTerritoryIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnTerritoryIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Address_StateProvince_StateProvinceID", "Address")> _
		Public Property Address() As EntityCollection(Of Address)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of Address)("AdventureWorksModel.FK_Address_StateProvince_StateProvinceID", "Address")
			End Get
			Set(ByVal value As EntityCollection(Of Address))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Address)("AdventureWorksModel.FK_Address_StateProvince_StateProvinceID", "Address", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_StateProvince_CountryRegion_CountryRegionCode", "CountryRegion")> _
		Public Property CountryRegion() As CountryRegion
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of CountryRegion)("AdventureWorksModel.FK_StateProvince_CountryRegion_CountryRegionCode", "CountryRegion").Value
			End Get
			Set(ByVal value As CountryRegion)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of CountryRegion)("AdventureWorksModel.FK_StateProvince_CountryRegion_CountryRegionCode", "CountryRegion").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property CountryRegionReference() As EntityReference(Of CountryRegion)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of CountryRegion)("AdventureWorksModel.FK_StateProvince_CountryRegion_CountryRegionCode", "CountryRegion")
			End Get
			Set(ByVal value As EntityReference(Of CountryRegion))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of CountryRegion)("AdventureWorksModel.FK_StateProvince_CountryRegion_CountryRegionCode", "CountryRegion", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_SalesTaxRate_StateProvince_StateProvinceID", "SalesTaxRate")> _
		Public Property SalesTaxRate() As EntityCollection(Of SalesTaxRate)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of SalesTaxRate)("AdventureWorksModel.FK_SalesTaxRate_StateProvince_StateProvinceID", "SalesTaxRate")
			End Get
			Set(ByVal value As EntityCollection(Of SalesTaxRate))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SalesTaxRate)("AdventureWorksModel.FK_SalesTaxRate_StateProvince_StateProvinceID", "SalesTaxRate", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_StateProvince_SalesTerritory_TerritoryID", "SalesTerritory")> _
		Public Property SalesTerritory() As SalesTerritory
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesTerritory)("AdventureWorksModel.FK_StateProvince_SalesTerritory_TerritoryID", "SalesTerritory").Value
			End Get
			Set(ByVal value As SalesTerritory)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SalesTerritory)("AdventureWorksModel.FK_StateProvince_SalesTerritory_TerritoryID", "SalesTerritory").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property SalesTerritoryReference() As EntityReference(Of SalesTerritory)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesTerritory)("AdventureWorksModel.FK_StateProvince_SalesTerritory_TerritoryID", "SalesTerritory")
			End Get
			Set(ByVal value As EntityReference(Of SalesTerritory))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of SalesTerritory)("AdventureWorksModel.FK_StateProvince_SalesTerritory_TerritoryID", "SalesTerritory", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="Store"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class Store
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new Store object.
		''' </summary>
		''' <param name="customerID">Initial value of the CustomerID property.</param>
		''' <param name="name">Initial value of the Name property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateStore(ByVal customerID As Global.System.Int32, ByVal name As Global.System.String, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As Store
			Dim store As New Store()
			store.CustomerID = customerID
			store.Name = name
			store.rowguid = rowguid
			store.ModifiedDate = modifiedDate
			Return store
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property CustomerID() As Global.System.Int32
			Get
				Return _CustomerID
			End Get
			Set(ByVal value As System.Int32)
				If _CustomerID <> value Then
					OnCustomerIDChanging(value)
					ReportPropertyChanging("CustomerID")
					_CustomerID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("CustomerID")
					OnCustomerIDChanged()
				End If
			End Set
		End Property
		Private _CustomerID As Global.System.Int32
		Partial Private Sub OnCustomerIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnCustomerIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Name() As Global.System.String
			Get
				Return _Name
			End Get
			Set(ByVal value As System.String)
				OnNameChanging(value)
				ReportPropertyChanging("Name")
				_Name = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Name")
				OnNameChanged()
			End Set
		End Property
		Private _Name As Global.System.String
		Partial Private Sub OnNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property SalesPersonID() As Global.System.Int32?
			Get
				Return _SalesPersonID
			End Get
			Set(ByVal value? As System.Int32)
				OnSalesPersonIDChanging(value)
				ReportPropertyChanging("SalesPersonID")
				_SalesPersonID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("SalesPersonID")
				OnSalesPersonIDChanged()
			End Set
		End Property
		Private _SalesPersonID? As Global.System.Int32
		Partial Private Sub OnSalesPersonIDChanging(ByVal value? As Global.System.Int32)
		End Sub
		Partial Private Sub OnSalesPersonIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property Demographics() As Global.System.String
			Get
				Return _Demographics
			End Get
			Set(ByVal value As System.String)
				OnDemographicsChanging(value)
				ReportPropertyChanging("Demographics")
				_Demographics = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("Demographics")
				OnDemographicsChanged()
			End Set
		End Property
		Private _Demographics As Global.System.String
		Partial Private Sub OnDemographicsChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnDemographicsChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Store_Customer_CustomerID", "Customer")> _
		Public Property Customer() As Customer
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Customer)("AdventureWorksModel.FK_Store_Customer_CustomerID", "Customer").Value
			End Get
			Set(ByVal value As Customer)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Customer)("AdventureWorksModel.FK_Store_Customer_CustomerID", "Customer").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property CustomerReference() As EntityReference(Of Customer)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Customer)("AdventureWorksModel.FK_Store_Customer_CustomerID", "Customer")
			End Get
			Set(ByVal value As EntityReference(Of Customer))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Customer)("AdventureWorksModel.FK_Store_Customer_CustomerID", "Customer", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Store_SalesPerson_SalesPersonID", "SalesPerson")> _
		Public Property SalesPerson() As SalesPerson
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesPerson)("AdventureWorksModel.FK_Store_SalesPerson_SalesPersonID", "SalesPerson").Value
			End Get
			Set(ByVal value As SalesPerson)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SalesPerson)("AdventureWorksModel.FK_Store_SalesPerson_SalesPersonID", "SalesPerson").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property SalesPersonReference() As EntityReference(Of SalesPerson)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of SalesPerson)("AdventureWorksModel.FK_Store_SalesPerson_SalesPersonID", "SalesPerson")
			End Get
			Set(ByVal value As EntityReference(Of SalesPerson))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of SalesPerson)("AdventureWorksModel.FK_Store_SalesPerson_SalesPersonID", "SalesPerson", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_StoreContact_Store_CustomerID", "StoreContact")> _
		Public Property StoreContact() As EntityCollection(Of StoreContact)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of StoreContact)("AdventureWorksModel.FK_StoreContact_Store_CustomerID", "StoreContact")
			End Get
			Set(ByVal value As EntityCollection(Of StoreContact))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of StoreContact)("AdventureWorksModel.FK_StoreContact_Store_CustomerID", "StoreContact", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="StoreContact"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class StoreContact
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new StoreContact object.
		''' </summary>
		''' <param name="customerID">Initial value of the CustomerID property.</param>
		''' <param name="contactID">Initial value of the ContactID property.</param>
		''' <param name="contactTypeID">Initial value of the ContactTypeID property.</param>
		''' <param name="rowguid">Initial value of the rowguid property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateStoreContact(ByVal customerID As Global.System.Int32, ByVal contactID As Global.System.Int32, ByVal contactTypeID As Global.System.Int32, ByVal rowguid As Global.System.Guid, ByVal modifiedDate As Global.System.DateTime) As StoreContact
			Dim storeContact As New StoreContact()
			storeContact.CustomerID = customerID
			storeContact.ContactID = contactID
			storeContact.ContactTypeID = contactTypeID
			storeContact.rowguid = rowguid
			storeContact.ModifiedDate = modifiedDate
			Return storeContact
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property CustomerID() As Global.System.Int32
			Get
				Return _CustomerID
			End Get
			Set(ByVal value As System.Int32)
				If _CustomerID <> value Then
					OnCustomerIDChanging(value)
					ReportPropertyChanging("CustomerID")
					_CustomerID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("CustomerID")
					OnCustomerIDChanged()
				End If
			End Set
		End Property
		Private _CustomerID As Global.System.Int32
		Partial Private Sub OnCustomerIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnCustomerIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ContactID() As Global.System.Int32
			Get
				Return _ContactID
			End Get
			Set(ByVal value As System.Int32)
				If _ContactID <> value Then
					OnContactIDChanging(value)
					ReportPropertyChanging("ContactID")
					_ContactID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ContactID")
					OnContactIDChanged()
				End If
			End Set
		End Property
		Private _ContactID As Global.System.Int32
		Partial Private Sub OnContactIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnContactIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ContactTypeID() As Global.System.Int32
			Get
				Return _ContactTypeID
			End Get
			Set(ByVal value As System.Int32)
				OnContactTypeIDChanging(value)
				ReportPropertyChanging("ContactTypeID")
				_ContactTypeID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ContactTypeID")
				OnContactTypeIDChanged()
			End Set
		End Property
		Private _ContactTypeID As Global.System.Int32
		Partial Private Sub OnContactTypeIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnContactTypeIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property rowguid() As Global.System.Guid
			Get
				Return _rowguid
			End Get
			Set(ByVal value As System.Guid)
				OnrowguidChanging(value)
				ReportPropertyChanging("rowguid")
				_rowguid = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("rowguid")
				OnrowguidChanged()
			End Set
		End Property
		Private _rowguid As Global.System.Guid
		Partial Private Sub OnrowguidChanging(ByVal value As Global.System.Guid)
		End Sub
		Partial Private Sub OnrowguidChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_StoreContact_Contact_ContactID", "Contact")> _
		Public Property Contact() As Contact
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Contact)("AdventureWorksModel.FK_StoreContact_Contact_ContactID", "Contact").Value
			End Get
			Set(ByVal value As Contact)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Contact)("AdventureWorksModel.FK_StoreContact_Contact_ContactID", "Contact").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ContactReference() As EntityReference(Of Contact)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Contact)("AdventureWorksModel.FK_StoreContact_Contact_ContactID", "Contact")
			End Get
			Set(ByVal value As EntityReference(Of Contact))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Contact)("AdventureWorksModel.FK_StoreContact_Contact_ContactID", "Contact", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_StoreContact_ContactType_ContactTypeID", "ContactType")> _
		Public Property ContactType() As ContactType
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ContactType)("AdventureWorksModel.FK_StoreContact_ContactType_ContactTypeID", "ContactType").Value
			End Get
			Set(ByVal value As ContactType)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of ContactType)("AdventureWorksModel.FK_StoreContact_ContactType_ContactTypeID", "ContactType").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ContactTypeReference() As EntityReference(Of ContactType)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ContactType)("AdventureWorksModel.FK_StoreContact_ContactType_ContactTypeID", "ContactType")
			End Get
			Set(ByVal value As EntityReference(Of ContactType))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of ContactType)("AdventureWorksModel.FK_StoreContact_ContactType_ContactTypeID", "ContactType", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_StoreContact_Store_CustomerID", "Store")> _
		Public Property Store() As Store
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Store)("AdventureWorksModel.FK_StoreContact_Store_CustomerID", "Store").Value
			End Get
			Set(ByVal value As Store)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Store)("AdventureWorksModel.FK_StoreContact_Store_CustomerID", "Store").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property StoreReference() As EntityReference(Of Store)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Store)("AdventureWorksModel.FK_StoreContact_Store_CustomerID", "Store")
			End Get
			Set(ByVal value As EntityReference(Of Store))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Store)("AdventureWorksModel.FK_StoreContact_Store_CustomerID", "Store", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="TransactionHistory"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class TransactionHistory
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new TransactionHistory object.
		''' </summary>
		''' <param name="transactionID">Initial value of the TransactionID property.</param>
		''' <param name="productID">Initial value of the ProductID property.</param>
		''' <param name="referenceOrderID">Initial value of the ReferenceOrderID property.</param>
		''' <param name="referenceOrderLineID">Initial value of the ReferenceOrderLineID property.</param>
		''' <param name="transactionDate">Initial value of the TransactionDate property.</param>
		''' <param name="transactionType">Initial value of the TransactionType property.</param>
		''' <param name="quantity">Initial value of the Quantity property.</param>
		''' <param name="actualCost">Initial value of the ActualCost property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateTransactionHistory(ByVal transactionID As Global.System.Int32, ByVal productID As Global.System.Int32, ByVal referenceOrderID As Global.System.Int32, ByVal referenceOrderLineID As Global.System.Int32, ByVal transactionDate As Global.System.DateTime, ByVal transactionType As Global.System.String, ByVal quantity As Global.System.Int32, ByVal actualCost As Global.System.Decimal, ByVal modifiedDate As Global.System.DateTime) As TransactionHistory
			Dim transactionHistory As New TransactionHistory()
			transactionHistory.TransactionID = transactionID
			transactionHistory.ProductID = productID
			transactionHistory.ReferenceOrderID = referenceOrderID
			transactionHistory.ReferenceOrderLineID = referenceOrderLineID
			transactionHistory.TransactionDate = transactionDate
			transactionHistory.TransactionType = transactionType
			transactionHistory.Quantity = quantity
			transactionHistory.ActualCost = actualCost
			transactionHistory.ModifiedDate = modifiedDate
			Return transactionHistory
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property TransactionID() As Global.System.Int32
			Get
				Return _TransactionID
			End Get
			Set(ByVal value As System.Int32)
				If _TransactionID <> value Then
					OnTransactionIDChanging(value)
					ReportPropertyChanging("TransactionID")
					_TransactionID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("TransactionID")
					OnTransactionIDChanged()
				End If
			End Set
		End Property
		Private _TransactionID As Global.System.Int32
		Partial Private Sub OnTransactionIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnTransactionIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductID() As Global.System.Int32
			Get
				Return _ProductID
			End Get
			Set(ByVal value As System.Int32)
				OnProductIDChanging(value)
				ReportPropertyChanging("ProductID")
				_ProductID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ProductID")
				OnProductIDChanged()
			End Set
		End Property
		Private _ProductID As Global.System.Int32
		Partial Private Sub OnProductIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ReferenceOrderID() As Global.System.Int32
			Get
				Return _ReferenceOrderID
			End Get
			Set(ByVal value As System.Int32)
				OnReferenceOrderIDChanging(value)
				ReportPropertyChanging("ReferenceOrderID")
				_ReferenceOrderID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ReferenceOrderID")
				OnReferenceOrderIDChanged()
			End Set
		End Property
		Private _ReferenceOrderID As Global.System.Int32
		Partial Private Sub OnReferenceOrderIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnReferenceOrderIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ReferenceOrderLineID() As Global.System.Int32
			Get
				Return _ReferenceOrderLineID
			End Get
			Set(ByVal value As System.Int32)
				OnReferenceOrderLineIDChanging(value)
				ReportPropertyChanging("ReferenceOrderLineID")
				_ReferenceOrderLineID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ReferenceOrderLineID")
				OnReferenceOrderLineIDChanged()
			End Set
		End Property
		Private _ReferenceOrderLineID As Global.System.Int32
		Partial Private Sub OnReferenceOrderLineIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnReferenceOrderLineIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property TransactionDate() As Global.System.DateTime
			Get
				Return _TransactionDate
			End Get
			Set(ByVal value As System.DateTime)
				OnTransactionDateChanging(value)
				ReportPropertyChanging("TransactionDate")
				_TransactionDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("TransactionDate")
				OnTransactionDateChanged()
			End Set
		End Property
		Private _TransactionDate As Global.System.DateTime
		Partial Private Sub OnTransactionDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnTransactionDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property TransactionType() As Global.System.String
			Get
				Return _TransactionType
			End Get
			Set(ByVal value As System.String)
				OnTransactionTypeChanging(value)
				ReportPropertyChanging("TransactionType")
				_TransactionType = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("TransactionType")
				OnTransactionTypeChanged()
			End Set
		End Property
		Private _TransactionType As Global.System.String
		Partial Private Sub OnTransactionTypeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnTransactionTypeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Quantity() As Global.System.Int32
			Get
				Return _Quantity
			End Get
			Set(ByVal value As System.Int32)
				OnQuantityChanging(value)
				ReportPropertyChanging("Quantity")
				_Quantity = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("Quantity")
				OnQuantityChanged()
			End Set
		End Property
		Private _Quantity As Global.System.Int32
		Partial Private Sub OnQuantityChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnQuantityChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ActualCost() As Global.System.Decimal
			Get
				Return _ActualCost
			End Get
			Set(ByVal value As System.Decimal)
				OnActualCostChanging(value)
				ReportPropertyChanging("ActualCost")
				_ActualCost = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ActualCost")
				OnActualCostChanged()
			End Set
		End Property
		Private _ActualCost As Global.System.Decimal
		Partial Private Sub OnActualCostChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnActualCostChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_TransactionHistory_Product_ProductID", "Product")> _
		Public Property Product() As Product
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_TransactionHistory_Product_ProductID", "Product").Value
			End Get
			Set(ByVal value As Product)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_TransactionHistory_Product_ProductID", "Product").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ProductReference() As EntityReference(Of Product)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_TransactionHistory_Product_ProductID", "Product")
			End Get
			Set(ByVal value As EntityReference(Of Product))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Product)("AdventureWorksModel.FK_TransactionHistory_Product_ProductID", "Product", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="TransactionHistoryArchive"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class TransactionHistoryArchive
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new TransactionHistoryArchive object.
		''' </summary>
		''' <param name="transactionID">Initial value of the TransactionID property.</param>
		''' <param name="productID">Initial value of the ProductID property.</param>
		''' <param name="referenceOrderID">Initial value of the ReferenceOrderID property.</param>
		''' <param name="referenceOrderLineID">Initial value of the ReferenceOrderLineID property.</param>
		''' <param name="transactionDate">Initial value of the TransactionDate property.</param>
		''' <param name="transactionType">Initial value of the TransactionType property.</param>
		''' <param name="quantity">Initial value of the Quantity property.</param>
		''' <param name="actualCost">Initial value of the ActualCost property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateTransactionHistoryArchive(ByVal transactionID As Global.System.Int32, ByVal productID As Global.System.Int32, ByVal referenceOrderID As Global.System.Int32, ByVal referenceOrderLineID As Global.System.Int32, ByVal transactionDate As Global.System.DateTime, ByVal transactionType As Global.System.String, ByVal quantity As Global.System.Int32, ByVal actualCost As Global.System.Decimal, ByVal modifiedDate As Global.System.DateTime) As TransactionHistoryArchive
			Dim transactionHistoryArchive As New TransactionHistoryArchive()
			transactionHistoryArchive.TransactionID = transactionID
			transactionHistoryArchive.ProductID = productID
			transactionHistoryArchive.ReferenceOrderID = referenceOrderID
			transactionHistoryArchive.ReferenceOrderLineID = referenceOrderLineID
			transactionHistoryArchive.TransactionDate = transactionDate
			transactionHistoryArchive.TransactionType = transactionType
			transactionHistoryArchive.Quantity = quantity
			transactionHistoryArchive.ActualCost = actualCost
			transactionHistoryArchive.ModifiedDate = modifiedDate
			Return transactionHistoryArchive
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property TransactionID() As Global.System.Int32
			Get
				Return _TransactionID
			End Get
			Set(ByVal value As System.Int32)
				If _TransactionID <> value Then
					OnTransactionIDChanging(value)
					ReportPropertyChanging("TransactionID")
					_TransactionID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("TransactionID")
					OnTransactionIDChanged()
				End If
			End Set
		End Property
		Private _TransactionID As Global.System.Int32
		Partial Private Sub OnTransactionIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnTransactionIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductID() As Global.System.Int32
			Get
				Return _ProductID
			End Get
			Set(ByVal value As System.Int32)
				OnProductIDChanging(value)
				ReportPropertyChanging("ProductID")
				_ProductID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ProductID")
				OnProductIDChanged()
			End Set
		End Property
		Private _ProductID As Global.System.Int32
		Partial Private Sub OnProductIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ReferenceOrderID() As Global.System.Int32
			Get
				Return _ReferenceOrderID
			End Get
			Set(ByVal value As System.Int32)
				OnReferenceOrderIDChanging(value)
				ReportPropertyChanging("ReferenceOrderID")
				_ReferenceOrderID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ReferenceOrderID")
				OnReferenceOrderIDChanged()
			End Set
		End Property
		Private _ReferenceOrderID As Global.System.Int32
		Partial Private Sub OnReferenceOrderIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnReferenceOrderIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ReferenceOrderLineID() As Global.System.Int32
			Get
				Return _ReferenceOrderLineID
			End Get
			Set(ByVal value As System.Int32)
				OnReferenceOrderLineIDChanging(value)
				ReportPropertyChanging("ReferenceOrderLineID")
				_ReferenceOrderLineID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ReferenceOrderLineID")
				OnReferenceOrderLineIDChanged()
			End Set
		End Property
		Private _ReferenceOrderLineID As Global.System.Int32
		Partial Private Sub OnReferenceOrderLineIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnReferenceOrderLineIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property TransactionDate() As Global.System.DateTime
			Get
				Return _TransactionDate
			End Get
			Set(ByVal value As System.DateTime)
				OnTransactionDateChanging(value)
				ReportPropertyChanging("TransactionDate")
				_TransactionDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("TransactionDate")
				OnTransactionDateChanged()
			End Set
		End Property
		Private _TransactionDate As Global.System.DateTime
		Partial Private Sub OnTransactionDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnTransactionDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property TransactionType() As Global.System.String
			Get
				Return _TransactionType
			End Get
			Set(ByVal value As System.String)
				OnTransactionTypeChanging(value)
				ReportPropertyChanging("TransactionType")
				_TransactionType = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("TransactionType")
				OnTransactionTypeChanged()
			End Set
		End Property
		Private _TransactionType As Global.System.String
		Partial Private Sub OnTransactionTypeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnTransactionTypeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Quantity() As Global.System.Int32
			Get
				Return _Quantity
			End Get
			Set(ByVal value As System.Int32)
				OnQuantityChanging(value)
				ReportPropertyChanging("Quantity")
				_Quantity = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("Quantity")
				OnQuantityChanged()
			End Set
		End Property
		Private _Quantity As Global.System.Int32
		Partial Private Sub OnQuantityChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnQuantityChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ActualCost() As Global.System.Decimal
			Get
				Return _ActualCost
			End Get
			Set(ByVal value As System.Decimal)
				OnActualCostChanging(value)
				ReportPropertyChanging("ActualCost")
				_ActualCost = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ActualCost")
				OnActualCostChanged()
			End Set
		End Property
		Private _ActualCost As Global.System.Decimal
		Partial Private Sub OnActualCostChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnActualCostChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="UnitMeasure"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class UnitMeasure
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new UnitMeasure object.
		''' </summary>
		''' <param name="unitMeasureCode">Initial value of the UnitMeasureCode property.</param>
		''' <param name="name">Initial value of the Name property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateUnitMeasure(ByVal unitMeasureCode As Global.System.String, ByVal name As Global.System.String, ByVal modifiedDate As Global.System.DateTime) As UnitMeasure
			Dim unitMeasure As New UnitMeasure()
			unitMeasure.UnitMeasureCode = unitMeasureCode
			unitMeasure.Name = name
			unitMeasure.ModifiedDate = modifiedDate
			Return unitMeasure
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property UnitMeasureCode() As Global.System.String
			Get
				Return _UnitMeasureCode
			End Get
			Set(ByVal value As System.String)
				If _UnitMeasureCode <> value Then
					OnUnitMeasureCodeChanging(value)
					ReportPropertyChanging("UnitMeasureCode")
					_UnitMeasureCode = StructuralObject.SetValidValue(value, False)
					ReportPropertyChanged("UnitMeasureCode")
					OnUnitMeasureCodeChanged()
				End If
			End Set
		End Property
		Private _UnitMeasureCode As Global.System.String
		Partial Private Sub OnUnitMeasureCodeChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnUnitMeasureCodeChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Name() As Global.System.String
			Get
				Return _Name
			End Get
			Set(ByVal value As System.String)
				OnNameChanging(value)
				ReportPropertyChanging("Name")
				_Name = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Name")
				OnNameChanged()
			End Set
		End Property
		Private _Name As Global.System.String
		Partial Private Sub OnNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_BillOfMaterials_UnitMeasure_UnitMeasureCode", "BillOfMaterials")> _
		Public Property BillOfMaterials() As EntityCollection(Of BillOfMaterials)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of BillOfMaterials)("AdventureWorksModel.FK_BillOfMaterials_UnitMeasure_UnitMeasureCode", "BillOfMaterials")
			End Get
			Set(ByVal value As EntityCollection(Of BillOfMaterials))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of BillOfMaterials)("AdventureWorksModel.FK_BillOfMaterials_UnitMeasure_UnitMeasureCode", "BillOfMaterials", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Product_UnitMeasure_SizeUnitMeasureCode", "Product")> _
		Public Property Product() As EntityCollection(Of Product)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of Product)("AdventureWorksModel.FK_Product_UnitMeasure_SizeUnitMeasureCode", "Product")
			End Get
			Set(ByVal value As EntityCollection(Of Product))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Product)("AdventureWorksModel.FK_Product_UnitMeasure_SizeUnitMeasureCode", "Product", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_Product_UnitMeasure_WeightUnitMeasureCode", "Product")> _
		Public Property Product1() As EntityCollection(Of Product)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of Product)("AdventureWorksModel.FK_Product_UnitMeasure_WeightUnitMeasureCode", "Product")
			End Get
			Set(ByVal value As EntityCollection(Of Product))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Product)("AdventureWorksModel.FK_Product_UnitMeasure_WeightUnitMeasureCode", "Product", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductVendor_UnitMeasure_UnitMeasureCode", "ProductVendor")> _
		Public Property ProductVendor() As EntityCollection(Of ProductVendor)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of ProductVendor)("AdventureWorksModel.FK_ProductVendor_UnitMeasure_UnitMeasureCode", "ProductVendor")
			End Get
			Set(ByVal value As EntityCollection(Of ProductVendor))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ProductVendor)("AdventureWorksModel.FK_ProductVendor_UnitMeasure_UnitMeasureCode", "ProductVendor", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="Vendor"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class Vendor
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new Vendor object.
		''' </summary>
		''' <param name="vendorID">Initial value of the VendorID property.</param>
		''' <param name="accountNumber">Initial value of the AccountNumber property.</param>
		''' <param name="name">Initial value of the Name property.</param>
		''' <param name="creditRating">Initial value of the CreditRating property.</param>
		''' <param name="preferredVendorStatus">Initial value of the PreferredVendorStatus property.</param>
		''' <param name="activeFlag">Initial value of the ActiveFlag property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateVendor(ByVal vendorID As Global.System.Int32, ByVal accountNumber As Global.System.String, ByVal name As Global.System.String, ByVal creditRating As Global.System.Byte, ByVal preferredVendorStatus As Global.System.Boolean, ByVal activeFlag As Global.System.Boolean, ByVal modifiedDate As Global.System.DateTime) As Vendor
			Dim vendor As New Vendor()
			vendor.VendorID = vendorID
			vendor.AccountNumber = accountNumber
			vendor.Name = name
			vendor.CreditRating = creditRating
			vendor.PreferredVendorStatus = preferredVendorStatus
			vendor.ActiveFlag = activeFlag
			vendor.ModifiedDate = modifiedDate
			Return vendor
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property VendorID() As Global.System.Int32
			Get
				Return _VendorID
			End Get
			Set(ByVal value As System.Int32)
				If _VendorID <> value Then
					OnVendorIDChanging(value)
					ReportPropertyChanging("VendorID")
					_VendorID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("VendorID")
					OnVendorIDChanged()
				End If
			End Set
		End Property
		Private _VendorID As Global.System.Int32
		Partial Private Sub OnVendorIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnVendorIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property AccountNumber() As Global.System.String
			Get
				Return _AccountNumber
			End Get
			Set(ByVal value As System.String)
				OnAccountNumberChanging(value)
				ReportPropertyChanging("AccountNumber")
				_AccountNumber = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("AccountNumber")
				OnAccountNumberChanged()
			End Set
		End Property
		Private _AccountNumber As Global.System.String
		Partial Private Sub OnAccountNumberChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnAccountNumberChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property Name() As Global.System.String
			Get
				Return _Name
			End Get
			Set(ByVal value As System.String)
				OnNameChanging(value)
				ReportPropertyChanging("Name")
				_Name = StructuralObject.SetValidValue(value, False)
				ReportPropertyChanged("Name")
				OnNameChanged()
			End Set
		End Property
		Private _Name As Global.System.String
		Partial Private Sub OnNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property CreditRating() As Global.System.Byte
			Get
				Return _CreditRating
			End Get
			Set(ByVal value As System.Byte)
				OnCreditRatingChanging(value)
				ReportPropertyChanging("CreditRating")
				_CreditRating = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("CreditRating")
				OnCreditRatingChanged()
			End Set
		End Property
		Private _CreditRating As Global.System.Byte
		Partial Private Sub OnCreditRatingChanging(ByVal value As Global.System.Byte)
		End Sub
		Partial Private Sub OnCreditRatingChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property PreferredVendorStatus() As Global.System.Boolean
			Get
				Return _PreferredVendorStatus
			End Get
			Set(ByVal value As System.Boolean)
				OnPreferredVendorStatusChanging(value)
				ReportPropertyChanging("PreferredVendorStatus")
				_PreferredVendorStatus = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("PreferredVendorStatus")
				OnPreferredVendorStatusChanged()
			End Set
		End Property
		Private _PreferredVendorStatus As Global.System.Boolean
		Partial Private Sub OnPreferredVendorStatusChanging(ByVal value As Global.System.Boolean)
		End Sub
		Partial Private Sub OnPreferredVendorStatusChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ActiveFlag() As Global.System.Boolean
			Get
				Return _ActiveFlag
			End Get
			Set(ByVal value As System.Boolean)
				OnActiveFlagChanging(value)
				ReportPropertyChanging("ActiveFlag")
				_ActiveFlag = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ActiveFlag")
				OnActiveFlagChanged()
			End Set
		End Property
		Private _ActiveFlag As Global.System.Boolean
		Partial Private Sub OnActiveFlagChanging(ByVal value As Global.System.Boolean)
		End Sub
		Partial Private Sub OnActiveFlagChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property PurchasingWebServiceURL() As Global.System.String
			Get
				Return _PurchasingWebServiceURL
			End Get
			Set(ByVal value As System.String)
				OnPurchasingWebServiceURLChanging(value)
				ReportPropertyChanging("PurchasingWebServiceURL")
				_PurchasingWebServiceURL = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("PurchasingWebServiceURL")
				OnPurchasingWebServiceURLChanged()
			End Set
		End Property
		Private _PurchasingWebServiceURL As Global.System.String
		Partial Private Sub OnPurchasingWebServiceURLChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnPurchasingWebServiceURLChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_ProductVendor_Vendor_VendorID", "ProductVendor")> _
		Public Property ProductVendor() As EntityCollection(Of ProductVendor)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of ProductVendor)("AdventureWorksModel.FK_ProductVendor_Vendor_VendorID", "ProductVendor")
			End Get
			Set(ByVal value As EntityCollection(Of ProductVendor))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ProductVendor)("AdventureWorksModel.FK_ProductVendor_Vendor_VendorID", "ProductVendor", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_PurchaseOrderHeader_Vendor_VendorID", "PurchaseOrderHeader")> _
		Public Property PurchaseOrderHeader() As EntityCollection(Of PurchaseOrderHeader)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of PurchaseOrderHeader)("AdventureWorksModel.FK_PurchaseOrderHeader_Vendor_VendorID", "PurchaseOrderHeader")
			End Get
			Set(ByVal value As EntityCollection(Of PurchaseOrderHeader))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of PurchaseOrderHeader)("AdventureWorksModel.FK_PurchaseOrderHeader_Vendor_VendorID", "PurchaseOrderHeader", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_VendorAddress_Vendor_VendorID", "VendorAddress")> _
		Public Property VendorAddress() As EntityCollection(Of VendorAddress)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of VendorAddress)("AdventureWorksModel.FK_VendorAddress_Vendor_VendorID", "VendorAddress")
			End Get
			Set(ByVal value As EntityCollection(Of VendorAddress))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of VendorAddress)("AdventureWorksModel.FK_VendorAddress_Vendor_VendorID", "VendorAddress", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_VendorContact_Vendor_VendorID", "VendorContact")> _
		Public Property VendorContact() As EntityCollection(Of VendorContact)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of VendorContact)("AdventureWorksModel.FK_VendorContact_Vendor_VendorID", "VendorContact")
			End Get
			Set(ByVal value As EntityCollection(Of VendorContact))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of VendorContact)("AdventureWorksModel.FK_VendorContact_Vendor_VendorID", "VendorContact", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="VendorAddress"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class VendorAddress
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new VendorAddress object.
		''' </summary>
		''' <param name="vendorID">Initial value of the VendorID property.</param>
		''' <param name="addressID">Initial value of the AddressID property.</param>
		''' <param name="addressTypeID">Initial value of the AddressTypeID property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateVendorAddress(ByVal vendorID As Global.System.Int32, ByVal addressID As Global.System.Int32, ByVal addressTypeID As Global.System.Int32, ByVal modifiedDate As Global.System.DateTime) As VendorAddress
			Dim vendorAddress As New VendorAddress()
			vendorAddress.VendorID = vendorID
			vendorAddress.AddressID = addressID
			vendorAddress.AddressTypeID = addressTypeID
			vendorAddress.ModifiedDate = modifiedDate
			Return vendorAddress
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property VendorID() As Global.System.Int32
			Get
				Return _VendorID
			End Get
			Set(ByVal value As System.Int32)
				If _VendorID <> value Then
					OnVendorIDChanging(value)
					ReportPropertyChanging("VendorID")
					_VendorID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("VendorID")
					OnVendorIDChanged()
				End If
			End Set
		End Property
		Private _VendorID As Global.System.Int32
		Partial Private Sub OnVendorIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnVendorIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property AddressID() As Global.System.Int32
			Get
				Return _AddressID
			End Get
			Set(ByVal value As System.Int32)
				If _AddressID <> value Then
					OnAddressIDChanging(value)
					ReportPropertyChanging("AddressID")
					_AddressID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("AddressID")
					OnAddressIDChanged()
				End If
			End Set
		End Property
		Private _AddressID As Global.System.Int32
		Partial Private Sub OnAddressIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnAddressIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property AddressTypeID() As Global.System.Int32
			Get
				Return _AddressTypeID
			End Get
			Set(ByVal value As System.Int32)
				OnAddressTypeIDChanging(value)
				ReportPropertyChanging("AddressTypeID")
				_AddressTypeID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("AddressTypeID")
				OnAddressTypeIDChanged()
			End Set
		End Property
		Private _AddressTypeID As Global.System.Int32
		Partial Private Sub OnAddressTypeIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnAddressTypeIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_VendorAddress_Address_AddressID", "Address")> _
		Public Property Address() As Address
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Address)("AdventureWorksModel.FK_VendorAddress_Address_AddressID", "Address").Value
			End Get
			Set(ByVal value As Address)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Address)("AdventureWorksModel.FK_VendorAddress_Address_AddressID", "Address").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property AddressReference() As EntityReference(Of Address)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Address)("AdventureWorksModel.FK_VendorAddress_Address_AddressID", "Address")
			End Get
			Set(ByVal value As EntityReference(Of Address))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Address)("AdventureWorksModel.FK_VendorAddress_Address_AddressID", "Address", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_VendorAddress_AddressType_AddressTypeID", "AddressType")> _
		Public Property AddressType() As AddressType
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of AddressType)("AdventureWorksModel.FK_VendorAddress_AddressType_AddressTypeID", "AddressType").Value
			End Get
			Set(ByVal value As AddressType)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of AddressType)("AdventureWorksModel.FK_VendorAddress_AddressType_AddressTypeID", "AddressType").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property AddressTypeReference() As EntityReference(Of AddressType)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of AddressType)("AdventureWorksModel.FK_VendorAddress_AddressType_AddressTypeID", "AddressType")
			End Get
			Set(ByVal value As EntityReference(Of AddressType))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of AddressType)("AdventureWorksModel.FK_VendorAddress_AddressType_AddressTypeID", "AddressType", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_VendorAddress_Vendor_VendorID", "Vendor")> _
		Public Property Vendor() As Vendor
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Vendor)("AdventureWorksModel.FK_VendorAddress_Vendor_VendorID", "Vendor").Value
			End Get
			Set(ByVal value As Vendor)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Vendor)("AdventureWorksModel.FK_VendorAddress_Vendor_VendorID", "Vendor").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property VendorReference() As EntityReference(Of Vendor)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Vendor)("AdventureWorksModel.FK_VendorAddress_Vendor_VendorID", "Vendor")
			End Get
			Set(ByVal value As EntityReference(Of Vendor))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Vendor)("AdventureWorksModel.FK_VendorAddress_Vendor_VendorID", "Vendor", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="VendorContact"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class VendorContact
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new VendorContact object.
		''' </summary>
		''' <param name="vendorID">Initial value of the VendorID property.</param>
		''' <param name="contactID">Initial value of the ContactID property.</param>
		''' <param name="contactTypeID">Initial value of the ContactTypeID property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateVendorContact(ByVal vendorID As Global.System.Int32, ByVal contactID As Global.System.Int32, ByVal contactTypeID As Global.System.Int32, ByVal modifiedDate As Global.System.DateTime) As VendorContact
			Dim vendorContact As New VendorContact()
			vendorContact.VendorID = vendorID
			vendorContact.ContactID = contactID
			vendorContact.ContactTypeID = contactTypeID
			vendorContact.ModifiedDate = modifiedDate
			Return vendorContact
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property VendorID() As Global.System.Int32
			Get
				Return _VendorID
			End Get
			Set(ByVal value As System.Int32)
				If _VendorID <> value Then
					OnVendorIDChanging(value)
					ReportPropertyChanging("VendorID")
					_VendorID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("VendorID")
					OnVendorIDChanged()
				End If
			End Set
		End Property
		Private _VendorID As Global.System.Int32
		Partial Private Sub OnVendorIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnVendorIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ContactID() As Global.System.Int32
			Get
				Return _ContactID
			End Get
			Set(ByVal value As System.Int32)
				If _ContactID <> value Then
					OnContactIDChanging(value)
					ReportPropertyChanging("ContactID")
					_ContactID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ContactID")
					OnContactIDChanged()
				End If
			End Set
		End Property
		Private _ContactID As Global.System.Int32
		Partial Private Sub OnContactIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnContactIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ContactTypeID() As Global.System.Int32
			Get
				Return _ContactTypeID
			End Get
			Set(ByVal value As System.Int32)
				OnContactTypeIDChanging(value)
				ReportPropertyChanging("ContactTypeID")
				_ContactTypeID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ContactTypeID")
				OnContactTypeIDChanged()
			End Set
		End Property
		Private _ContactTypeID As Global.System.Int32
		Partial Private Sub OnContactTypeIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnContactTypeIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_VendorContact_Contact_ContactID", "Contact")> _
		Public Property Contact() As Contact
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Contact)("AdventureWorksModel.FK_VendorContact_Contact_ContactID", "Contact").Value
			End Get
			Set(ByVal value As Contact)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Contact)("AdventureWorksModel.FK_VendorContact_Contact_ContactID", "Contact").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ContactReference() As EntityReference(Of Contact)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Contact)("AdventureWorksModel.FK_VendorContact_Contact_ContactID", "Contact")
			End Get
			Set(ByVal value As EntityReference(Of Contact))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Contact)("AdventureWorksModel.FK_VendorContact_Contact_ContactID", "Contact", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_VendorContact_ContactType_ContactTypeID", "ContactType")> _
		Public Property ContactType() As ContactType
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ContactType)("AdventureWorksModel.FK_VendorContact_ContactType_ContactTypeID", "ContactType").Value
			End Get
			Set(ByVal value As ContactType)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of ContactType)("AdventureWorksModel.FK_VendorContact_ContactType_ContactTypeID", "ContactType").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ContactTypeReference() As EntityReference(Of ContactType)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ContactType)("AdventureWorksModel.FK_VendorContact_ContactType_ContactTypeID", "ContactType")
			End Get
			Set(ByVal value As EntityReference(Of ContactType))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of ContactType)("AdventureWorksModel.FK_VendorContact_ContactType_ContactTypeID", "ContactType", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_VendorContact_Vendor_VendorID", "Vendor")> _
		Public Property Vendor() As Vendor
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Vendor)("AdventureWorksModel.FK_VendorContact_Vendor_VendorID", "Vendor").Value
			End Get
			Set(ByVal value As Vendor)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Vendor)("AdventureWorksModel.FK_VendorContact_Vendor_VendorID", "Vendor").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property VendorReference() As EntityReference(Of Vendor)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Vendor)("AdventureWorksModel.FK_VendorContact_Vendor_VendorID", "Vendor")
			End Get
			Set(ByVal value As EntityReference(Of Vendor))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Vendor)("AdventureWorksModel.FK_VendorContact_Vendor_VendorID", "Vendor", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="WorkOrder"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class WorkOrder
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new WorkOrder object.
		''' </summary>
		''' <param name="workOrderID">Initial value of the WorkOrderID property.</param>
		''' <param name="productID">Initial value of the ProductID property.</param>
		''' <param name="orderQty">Initial value of the OrderQty property.</param>
		''' <param name="stockedQty">Initial value of the StockedQty property.</param>
		''' <param name="scrappedQty">Initial value of the ScrappedQty property.</param>
		''' <param name="startDate">Initial value of the StartDate property.</param>
		''' <param name="dueDate">Initial value of the DueDate property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateWorkOrder(ByVal workOrderID As Global.System.Int32, ByVal productID As Global.System.Int32, ByVal orderQty As Global.System.Int32, ByVal stockedQty As Global.System.Int32, ByVal scrappedQty As Global.System.Int16, ByVal startDate As Global.System.DateTime, ByVal dueDate As Global.System.DateTime, ByVal modifiedDate As Global.System.DateTime) As WorkOrder
			Dim workOrder As New WorkOrder()
			workOrder.WorkOrderID = workOrderID
			workOrder.ProductID = productID
			workOrder.OrderQty = orderQty
			workOrder.StockedQty = stockedQty
			workOrder.ScrappedQty = scrappedQty
			workOrder.StartDate = startDate
			workOrder.DueDate = dueDate
			workOrder.ModifiedDate = modifiedDate
			Return workOrder
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property WorkOrderID() As Global.System.Int32
			Get
				Return _WorkOrderID
			End Get
			Set(ByVal value As System.Int32)
				If _WorkOrderID <> value Then
					OnWorkOrderIDChanging(value)
					ReportPropertyChanging("WorkOrderID")
					_WorkOrderID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("WorkOrderID")
					OnWorkOrderIDChanged()
				End If
			End Set
		End Property
		Private _WorkOrderID As Global.System.Int32
		Partial Private Sub OnWorkOrderIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnWorkOrderIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductID() As Global.System.Int32
			Get
				Return _ProductID
			End Get
			Set(ByVal value As System.Int32)
				OnProductIDChanging(value)
				ReportPropertyChanging("ProductID")
				_ProductID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ProductID")
				OnProductIDChanged()
			End Set
		End Property
		Private _ProductID As Global.System.Int32
		Partial Private Sub OnProductIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property OrderQty() As Global.System.Int32
			Get
				Return _OrderQty
			End Get
			Set(ByVal value As System.Int32)
				OnOrderQtyChanging(value)
				ReportPropertyChanging("OrderQty")
				_OrderQty = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("OrderQty")
				OnOrderQtyChanged()
			End Set
		End Property
		Private _OrderQty As Global.System.Int32
		Partial Private Sub OnOrderQtyChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnOrderQtyChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property StockedQty() As Global.System.Int32
			Get
				Return _StockedQty
			End Get
			Set(ByVal value As System.Int32)
				OnStockedQtyChanging(value)
				ReportPropertyChanging("StockedQty")
				_StockedQty = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("StockedQty")
				OnStockedQtyChanged()
			End Set
		End Property
		Private _StockedQty As Global.System.Int32
		Partial Private Sub OnStockedQtyChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnStockedQtyChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ScrappedQty() As Global.System.Int16
			Get
				Return _ScrappedQty
			End Get
			Set(ByVal value As System.Int16)
				OnScrappedQtyChanging(value)
				ReportPropertyChanging("ScrappedQty")
				_ScrappedQty = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ScrappedQty")
				OnScrappedQtyChanged()
			End Set
		End Property
		Private _ScrappedQty As Global.System.Int16
		Partial Private Sub OnScrappedQtyChanging(ByVal value As Global.System.Int16)
		End Sub
		Partial Private Sub OnScrappedQtyChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property StartDate() As Global.System.DateTime
			Get
				Return _StartDate
			End Get
			Set(ByVal value As System.DateTime)
				OnStartDateChanging(value)
				ReportPropertyChanging("StartDate")
				_StartDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("StartDate")
				OnStartDateChanged()
			End Set
		End Property
		Private _StartDate As Global.System.DateTime
		Partial Private Sub OnStartDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnStartDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property EndDate() As Global.System.DateTime?
			Get
				Return _EndDate
			End Get
			Set(ByVal value? As System.DateTime)
				OnEndDateChanging(value)
				ReportPropertyChanging("EndDate")
				_EndDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("EndDate")
				OnEndDateChanged()
			End Set
		End Property
		Private _EndDate? As Global.System.DateTime
		Partial Private Sub OnEndDateChanging(ByVal value? As Global.System.DateTime)
		End Sub
		Partial Private Sub OnEndDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property DueDate() As Global.System.DateTime
			Get
				Return _DueDate
			End Get
			Set(ByVal value As System.DateTime)
				OnDueDateChanging(value)
				ReportPropertyChanging("DueDate")
				_DueDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("DueDate")
				OnDueDateChanged()
			End Set
		End Property
		Private _DueDate As Global.System.DateTime
		Partial Private Sub OnDueDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnDueDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property ScrapReasonID() As Global.System.Int16?
			Get
				Return _ScrapReasonID
			End Get
			Set(ByVal value? As System.Int16)
				OnScrapReasonIDChanging(value)
				ReportPropertyChanging("ScrapReasonID")
				_ScrapReasonID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ScrapReasonID")
				OnScrapReasonIDChanged()
			End Set
		End Property
		Private _ScrapReasonID? As Global.System.Int16
		Partial Private Sub OnScrapReasonIDChanging(ByVal value? As Global.System.Int16)
		End Sub
		Partial Private Sub OnScrapReasonIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_WorkOrder_Product_ProductID", "Product")> _
		Public Property Product() As Product
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_WorkOrder_Product_ProductID", "Product").Value
			End Get
			Set(ByVal value As Product)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_WorkOrder_Product_ProductID", "Product").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ProductReference() As EntityReference(Of Product)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Product)("AdventureWorksModel.FK_WorkOrder_Product_ProductID", "Product")
			End Get
			Set(ByVal value As EntityReference(Of Product))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Product)("AdventureWorksModel.FK_WorkOrder_Product_ProductID", "Product", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_WorkOrder_ScrapReason_ScrapReasonID", "ScrapReason")> _
		Public Property ScrapReason() As ScrapReason
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ScrapReason)("AdventureWorksModel.FK_WorkOrder_ScrapReason_ScrapReasonID", "ScrapReason").Value
			End Get
			Set(ByVal value As ScrapReason)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of ScrapReason)("AdventureWorksModel.FK_WorkOrder_ScrapReason_ScrapReasonID", "ScrapReason").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property ScrapReasonReference() As EntityReference(Of ScrapReason)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of ScrapReason)("AdventureWorksModel.FK_WorkOrder_ScrapReason_ScrapReasonID", "ScrapReason")
			End Get
			Set(ByVal value As EntityReference(Of ScrapReason))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of ScrapReason)("AdventureWorksModel.FK_WorkOrder_ScrapReason_ScrapReasonID", "ScrapReason", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_WorkOrderRouting_WorkOrder_WorkOrderID", "WorkOrderRouting")> _
		Public Property WorkOrderRouting() As EntityCollection(Of WorkOrderRouting)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedCollection(Of WorkOrderRouting)("AdventureWorksModel.FK_WorkOrderRouting_WorkOrder_WorkOrderID", "WorkOrderRouting")
			End Get
			Set(ByVal value As EntityCollection(Of WorkOrderRouting))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of WorkOrderRouting)("AdventureWorksModel.FK_WorkOrderRouting_WorkOrder_WorkOrderID", "WorkOrderRouting", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="AdventureWorksModel", Name:="WorkOrderRouting"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class WorkOrderRouting
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new WorkOrderRouting object.
		''' </summary>
		''' <param name="workOrderID">Initial value of the WorkOrderID property.</param>
		''' <param name="productID">Initial value of the ProductID property.</param>
		''' <param name="operationSequence">Initial value of the OperationSequence property.</param>
		''' <param name="locationID">Initial value of the LocationID property.</param>
		''' <param name="scheduledStartDate">Initial value of the ScheduledStartDate property.</param>
		''' <param name="scheduledEndDate">Initial value of the ScheduledEndDate property.</param>
		''' <param name="plannedCost">Initial value of the PlannedCost property.</param>
		''' <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
		Public Shared Function CreateWorkOrderRouting(ByVal workOrderID As Global.System.Int32, ByVal productID As Global.System.Int32, ByVal operationSequence As Global.System.Int16, ByVal locationID As Global.System.Int16, ByVal scheduledStartDate As Global.System.DateTime, ByVal scheduledEndDate As Global.System.DateTime, ByVal plannedCost As Global.System.Decimal, ByVal modifiedDate As Global.System.DateTime) As WorkOrderRouting
			Dim workOrderRouting As New WorkOrderRouting()
			workOrderRouting.WorkOrderID = workOrderID
			workOrderRouting.ProductID = productID
			workOrderRouting.OperationSequence = operationSequence
			workOrderRouting.LocationID = locationID
			workOrderRouting.ScheduledStartDate = scheduledStartDate
			workOrderRouting.ScheduledEndDate = scheduledEndDate
			workOrderRouting.PlannedCost = plannedCost
			workOrderRouting.ModifiedDate = modifiedDate
			Return workOrderRouting
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property WorkOrderID() As Global.System.Int32
			Get
				Return _WorkOrderID
			End Get
			Set(ByVal value As System.Int32)
				If _WorkOrderID <> value Then
					OnWorkOrderIDChanging(value)
					ReportPropertyChanging("WorkOrderID")
					_WorkOrderID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("WorkOrderID")
					OnWorkOrderIDChanged()
				End If
			End Set
		End Property
		Private _WorkOrderID As Global.System.Int32
		Partial Private Sub OnWorkOrderIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnWorkOrderIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property ProductID() As Global.System.Int32
			Get
				Return _ProductID
			End Get
			Set(ByVal value As System.Int32)
				If _ProductID <> value Then
					OnProductIDChanging(value)
					ReportPropertyChanging("ProductID")
					_ProductID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("ProductID")
					OnProductIDChanged()
				End If
			End Set
		End Property
		Private _ProductID As Global.System.Int32
		Partial Private Sub OnProductIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnProductIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property OperationSequence() As Global.System.Int16
			Get
				Return _OperationSequence
			End Get
			Set(ByVal value As System.Int16)
				If _OperationSequence <> value Then
					OnOperationSequenceChanging(value)
					ReportPropertyChanging("OperationSequence")
					_OperationSequence = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("OperationSequence")
					OnOperationSequenceChanged()
				End If
			End Set
		End Property
		Private _OperationSequence As Global.System.Int16
		Partial Private Sub OnOperationSequenceChanging(ByVal value As Global.System.Int16)
		End Sub
		Partial Private Sub OnOperationSequenceChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property LocationID() As Global.System.Int16
			Get
				Return _LocationID
			End Get
			Set(ByVal value As System.Int16)
				OnLocationIDChanging(value)
				ReportPropertyChanging("LocationID")
				_LocationID = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("LocationID")
				OnLocationIDChanged()
			End Set
		End Property
		Private _LocationID As Global.System.Int16
		Partial Private Sub OnLocationIDChanging(ByVal value As Global.System.Int16)
		End Sub
		Partial Private Sub OnLocationIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ScheduledStartDate() As Global.System.DateTime
			Get
				Return _ScheduledStartDate
			End Get
			Set(ByVal value As System.DateTime)
				OnScheduledStartDateChanging(value)
				ReportPropertyChanging("ScheduledStartDate")
				_ScheduledStartDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ScheduledStartDate")
				OnScheduledStartDateChanged()
			End Set
		End Property
		Private _ScheduledStartDate As Global.System.DateTime
		Partial Private Sub OnScheduledStartDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnScheduledStartDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ScheduledEndDate() As Global.System.DateTime
			Get
				Return _ScheduledEndDate
			End Get
			Set(ByVal value As System.DateTime)
				OnScheduledEndDateChanging(value)
				ReportPropertyChanging("ScheduledEndDate")
				_ScheduledEndDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ScheduledEndDate")
				OnScheduledEndDateChanged()
			End Set
		End Property
		Private _ScheduledEndDate As Global.System.DateTime
		Partial Private Sub OnScheduledEndDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnScheduledEndDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property ActualStartDate() As Global.System.DateTime?
			Get
				Return _ActualStartDate
			End Get
			Set(ByVal value? As System.DateTime)
				OnActualStartDateChanging(value)
				ReportPropertyChanging("ActualStartDate")
				_ActualStartDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ActualStartDate")
				OnActualStartDateChanged()
			End Set
		End Property
		Private _ActualStartDate? As Global.System.DateTime
		Partial Private Sub OnActualStartDateChanging(ByVal value? As Global.System.DateTime)
		End Sub
		Partial Private Sub OnActualStartDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property ActualEndDate() As Global.System.DateTime?
			Get
				Return _ActualEndDate
			End Get
			Set(ByVal value? As System.DateTime)
				OnActualEndDateChanging(value)
				ReportPropertyChanging("ActualEndDate")
				_ActualEndDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ActualEndDate")
				OnActualEndDateChanged()
			End Set
		End Property
		Private _ActualEndDate? As Global.System.DateTime
		Partial Private Sub OnActualEndDateChanging(ByVal value? As Global.System.DateTime)
		End Sub
		Partial Private Sub OnActualEndDateChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property ActualResourceHrs() As Global.System.Decimal?
			Get
				Return _ActualResourceHrs
			End Get
			Set(ByVal value? As System.Decimal)
				OnActualResourceHrsChanging(value)
				ReportPropertyChanging("ActualResourceHrs")
				_ActualResourceHrs = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ActualResourceHrs")
				OnActualResourceHrsChanged()
			End Set
		End Property
		Private _ActualResourceHrs? As Global.System.Decimal
		Partial Private Sub OnActualResourceHrsChanging(ByVal value? As Global.System.Decimal)
		End Sub
		Partial Private Sub OnActualResourceHrsChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property PlannedCost() As Global.System.Decimal
			Get
				Return _PlannedCost
			End Get
			Set(ByVal value As System.Decimal)
				OnPlannedCostChanging(value)
				ReportPropertyChanging("PlannedCost")
				_PlannedCost = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("PlannedCost")
				OnPlannedCostChanged()
			End Set
		End Property
		Private _PlannedCost As Global.System.Decimal
		Partial Private Sub OnPlannedCostChanging(ByVal value As Global.System.Decimal)
		End Sub
		Partial Private Sub OnPlannedCostChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property ActualCost() As Global.System.Decimal?
			Get
				Return _ActualCost
			End Get
			Set(ByVal value? As System.Decimal)
				OnActualCostChanging(value)
				ReportPropertyChanging("ActualCost")
				_ActualCost = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ActualCost")
				OnActualCostChanged()
			End Set
		End Property
		Private _ActualCost? As Global.System.Decimal
		Partial Private Sub OnActualCostChanging(ByVal value? As Global.System.Decimal)
		End Sub
		Partial Private Sub OnActualCostChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=False), DataMemberAttribute()> _
		Public Property ModifiedDate() As Global.System.DateTime
			Get
				Return _ModifiedDate
			End Get
			Set(ByVal value As System.DateTime)
				OnModifiedDateChanging(value)
				ReportPropertyChanging("ModifiedDate")
				_ModifiedDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("ModifiedDate")
				OnModifiedDateChanged()
			End Set
		End Property
		Private _ModifiedDate As Global.System.DateTime
		Partial Private Sub OnModifiedDateChanging(ByVal value As Global.System.DateTime)
		End Sub
		Partial Private Sub OnModifiedDateChanged()
		End Sub

		#End Region

		#Region "Navigation Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_WorkOrderRouting_Location_LocationID", "Location")> _
		Public Property Location() As Location
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Location)("AdventureWorksModel.FK_WorkOrderRouting_Location_LocationID", "Location").Value
			End Get
			Set(ByVal value As Location)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Location)("AdventureWorksModel.FK_WorkOrderRouting_Location_LocationID", "Location").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property LocationReference() As EntityReference(Of Location)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of Location)("AdventureWorksModel.FK_WorkOrderRouting_Location_LocationID", "Location")
			End Get
			Set(ByVal value As EntityReference(Of Location))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Location)("AdventureWorksModel.FK_WorkOrderRouting_Location_LocationID", "Location", value)
				End If
			End Set
		End Property

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<XmlIgnoreAttribute(), SoapIgnoreAttribute(), DataMemberAttribute(), EdmRelationshipNavigationPropertyAttribute("AdventureWorksModel", "FK_WorkOrderRouting_WorkOrder_WorkOrderID", "WorkOrder")> _
		Public Property WorkOrder() As WorkOrder
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of WorkOrder)("AdventureWorksModel.FK_WorkOrderRouting_WorkOrder_WorkOrderID", "WorkOrder").Value
			End Get
			Set(ByVal value As WorkOrder)
				CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of WorkOrder)("AdventureWorksModel.FK_WorkOrderRouting_WorkOrder_WorkOrderID", "WorkOrder").Value = value
			End Set
		End Property
		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<BrowsableAttribute(False), DataMemberAttribute()> _
		Public Property WorkOrderReference() As EntityReference(Of WorkOrder)
			Get
				Return (CType(Me, IEntityWithRelationships)).RelationshipManager.GetRelatedReference(Of WorkOrder)("AdventureWorksModel.FK_WorkOrderRouting_WorkOrder_WorkOrderID", "WorkOrder")
			End Get
			Set(ByVal value As EntityReference(Of WorkOrder))
				If (value IsNot Nothing) Then
					CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of WorkOrder)("AdventureWorksModel.FK_WorkOrderRouting_WorkOrder_WorkOrderID", "WorkOrder", value)
				End If
			End Set
		End Property

		#End Region
	End Class

	#End Region

End Namespace
